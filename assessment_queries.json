[
  {
    "id": "01e281a9-3cae-45ee-87fe-006dc142aada",
    "name": "IdP Users",
    "description": "Total number of Users that are configured in an Identity Provider (IdP) of your organization",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "df61ec74-7801-48a3-972d-756b0f24e165",
    "name": "Azure AD Users",
    "description": "Total number of Azure AD Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b8b62d43-c0f1-4344-93cf-5ab612b53637",
    "name": "Azure AD Service Principals",
    "description": "Total number of Azure AD Service Principals (also known as Enterprise Applications)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "72d733e7-731b-468e-adac-e68926119671",
    "name": "Azure AD Service Principals that are deactivated",
    "description": "Azure AD Service Principals (also known as Enterprise Applications) that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6dabee59-7548-46e3-9eed-5c28a2887875",
    "name": "Azure AD Enterprise Applications",
    "description": "Total number of Azure AD Enterprise Applications",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "application_type",
                    "string_value": "Application"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "f98e1a9d-c62e-436f-b92a-7efc0a5629a2",
    "name": "Azure AD Service Principals that are Managed Identities",
    "description": "Azure AD Service Principals that are Managed Identities",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "application_type",
                    "string_value": "ManagedIdentity"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "09f5a91c-7f32-458b-87b8-810d50f00df1",
    "name": "Azure AD Legacy Service Principals",
    "description": "Azure AD Legacy Service Principals",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "application_type",
                    "string_value": "Legacy"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "28febbd9-9223-40b1-b1f5-689137b98993",
    "name": "Azure AD Service Principals connected to Azure VMs",
    "description": "Azure AD Service Principals with accesses to Azure VM instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureVirtualMachine",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b45f5014-0105-4e86-95d7-088961fe638f",
    "name": "Okta Users",
    "description": "Total number of Okta Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f954ff5a-4002-4d31-afa3-6dbf733db94d",
    "name": "Okta Admins",
    "description": "Okta users who belong to at least one admin group",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaGroup",
                "direct_relationship_only": false,
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d3e1991e-e21a-4bec-a3f2-d3e30954c00b",
    "name": "Okta Users with MFA disabled",
    "risk_level": "CRITICAL",
    "description": "Okta Users without Multifactor Authentication (MFA) enabled who are activated and created more than 30 days ago",
    "risk_explanation": "With Multi-factor authentication (MFA) turned off user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Additionally, Okta accounts often have access to a wide range of services and data, like emails, documents, and calendars. If an attacker gains access to one account, they can potentially access shared documents or send phishing emails from a trusted source, escalating the security breach within an organization. Thus, a compromised account without MFA protection can lead to a significant data breach. Finally, many industries and regulations require strong authentication methods to protect sensitive data. Not using MFA might lead to non-compliance with these standards, potentially resulting in legal and financial repercussions. Hence, a CRITICAL risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce mandatory MFA for all Okta users, especially those accounts created more than 30 days ago, and regularly audit compliance.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "e726642a-647b-4d22-9ba2-2b25add17fd1",
    "name": "OneLogin Users with MFA disabled",
    "risk_level": "CRITICAL",
    "description": "OneLogin Users without Multifactor Authentication (MFA) enabled who are activated and created more than 30 days ago",
    "risk_explanation": "With Multi-factor authentication (MFA) turned off user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Additionally, OneLogin accounts often have access to a wide range of services and data, like emails, documents, and calendars. If an attacker gains access to one account, they can potentially access shared documents or send phishing emails from a trusted source, escalating the security breach within an organization. Thus, a compromised account without MFA protection can lead to a significant data breach. Finally, many industries and regulations require strong authentication methods to protect sensitive data. Not using MFA might lead to non-compliance with these standards, potentially resulting in legal and financial repercussions. Hence, a CRITICAL risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce mandatory MFA for all OneLogin users, especially those activated and created more than 30 days ago, and regularly audit compliance.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "1e305aeb-ccf8-4668-bfbf-8b2252b462ed",
    "name": "OneLogin Users",
    "description": "Total number of OneLogin Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c3c7f160-6159-40fa-923b-3c06df6dea1a",
    "name": "IdP Groups",
    "description": "Total number of Groups that are configured in an Identity Provider (IdP) of your organization",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPGroup"
        }
      ]
    },
    "supported_idps": [
      {
        "name": "azure"
      },
      {
        "name": "okta"
      }
    ],
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5b366fd0-a157-4ffc-ae67-b30bc409e31c",
    "name": "Azure AD Groups",
    "description": "Total number of Azure AD Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4c9f5f17-52fe-457b-a42d-62a52dc82b0c",
    "name": "Okta Groups",
    "description": "Total number of Okta Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d5bc1da8-1219-4d83-90ba-bd59f31e768a",
    "name": "Azure AD Roles",
    "description": "Total number of Azure AD Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f26bdaa3-3f5c-4495-9a5c-9215109e2828",
    "name": "Azure AD Users that are Global Admins",
    "description": "Azure AD Users that are assigned the Global Administrator role. Meaning they can manage all aspects of Azure AD and Microsoft services that use Azure AD identities.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "6a3d533d-0665-4533-b243-d7d7efe18013",
    "name": "Azure AD Users that are Global Admins and deactivated",
    "description": "Azure AD Users that are deactivated but assigned the Global Administrator role and created more than 30 days ago. Meaning they can manage all aspects of Azure AD and Microsoft services that use Azure AD identities.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "fee5a974-5b9e-4c1e-948a-f0c9d8a5cb71",
    "name": "IdP Users updated this week",
    "description": "Identity Provider (IdP) Users updated in the last week",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_TIMEVAR_7_DAY_AGO"
            }
          }
        }
      ]
    },
    "supported_idps": [
      {
        "name": "okta"
      },
      {
        "name": "onelogin"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "bcdc8036-5816-49a8-b87d-779dd8054adf",
    "name": "IdP Applications",
    "description": "Total number of Enterprise Apps that are configured in your Identity Provider (IdP)",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPApplication"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5d2de60a-4868-4419-9120-6e76dcd79aee",
    "name": "Azure AD Users with AWS S3 access",
    "description": "Azure AD Users with access to one or more S3 buckets",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a2a41ac4-3b0c-455e-be57-10671dfb0ecd",
    "name": "Okta Users with AWS S3 access",
    "description": "Okta Users with access to one or more S3 buckets",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "36462466-5cf1-4ad3-992c-73863e83db16",
    "name": "Okta Users with Google Cloud Storage access",
    "description": "Okta Users with access to one or more Google Cloud Storage buckets",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5003ec8d-f173-4d9d-896b-a0b3cbe0d667",
    "name": "Okta Users with Google Cloud write permissions",
    "description": "Okta Users with Google Cloud write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "cfdd0fe4-bb64-43b4-9cd7-238efe77e8b8",
    "name": "OneLogin Users with AWS S3 access",
    "description": "OneLogin Users with access to one or more S3 buckets",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "906bede3-d1dd-4ec0-a6fc-05288f73070b",
    "name": "Azure AD Users with AWS Redshift access",
    "description": "Azure AD Users with access to one or more Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "06b74df8-b810-40c6-ac81-e44ac9cdf866",
    "name": "Okta Users with AWS Redshift access",
    "description": "Okta Users with access to one or more Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7789992f-c0c7-4dd8-9951-5aa776bc6221",
    "name": "OneLogin Users with AWS Redshift access",
    "description": "OneLogin Users with access to one or more Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3db18b9c-1c77-4256-afa1-273a408bcf4b",
    "name": "Azure AD Users with AWS Redshift write permissions",
    "description": "Azure AD Users with Redshift data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "f6b246f2-585c-4f8b-adf0-455bc5e7af8d",
    "name": "Okta Users with AWS Redshift write permissions",
    "description": "Okta Users with Redshift data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "d6372eec-c702-4a65-9982-87c6d13e0f49",
    "name": "OneLogin Users with AWS Redshift write permissions",
    "description": "OneLogin Users with Redshift data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "7eefc223-8526-4a8a-a01d-ce76b83185a2",
    "name": "Azure AD Users with AWS DynamoDB table access",
    "description": "Azure AD Users with access to one or more DynamoDB tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "41090d3b-63c9-4353-8bc6-2d1401fd9f0e",
    "name": "Okta Users with AWS DynamoDB table access",
    "description": "Okta Users with access to one or more DynamoDB tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3b933d05-1305-4e69-925c-0187e46bc0e6",
    "name": "OneLogin Users with AWS DynamoDB table access",
    "description": "OneLogin Users with access to one or more DynamoDB tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b3e90df8-697b-4fdd-be61-e3500e8dd546",
    "name": "Azure AD Users with AWS DynamoDB write permissions",
    "description": "Azure AD Users with DynamoDB data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "19c971a3-4906-46db-be37-4f887b367afa",
    "name": "Azure AD Users with AWS DynamoDB delete permissions",
    "description": "Azure AD Users with DynamoDB data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "2fd77a56-e33d-460d-819c-32fd8c11f110",
    "name": "Okta Users with AWS DynamoDB write permissions",
    "description": "Okta Users with DynamoDB data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "a29f2603-371c-4f2f-9565-d069ab0c4ca5",
    "name": "Okta Users with AWS DynamoDB delete permissions",
    "description": "Okta Users with DynamoDB data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "bd5a8490-b60f-4b74-881a-a0a65b029de6",
    "name": "OneLogin Users with AWS DynamoDB write permissions",
    "description": "OneLogin Users with DynamoDB data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "0113f78c-6011-4d74-b476-4bf2e1f967dd",
    "name": "OneLogin Users with AWS DynamoDB delete permissions",
    "description": "OneLogin Users with DynamoDB data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ab4b3737-ac79-4b18-9784-b2dd63929819",
    "name": "Azure AD Users with AWS EMR access",
    "description": "Azure AD Users with access to one or more EMR clusters",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRCluster",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "ba695d80-5c84-4787-a6d7-e130300b8a1e",
    "name": "Okta Users with AWS EMR access",
    "description": "Okta Users with access to one or more EMR clusters",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRCluster",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "085fc5d5-f99b-4691-841f-252109282a13",
    "name": "OneLogin Users with AWS EMR access",
    "description": "OneLogin Users with access to one or more EMR clusters",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRCluster",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "onelogin"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "1ec74a52-9587-4768-ab70-56730b01e070",
    "name": "Azure AD Users with AWS EMR write permissions",
    "description": "Azure AD Users with EMR data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "0f540a3c-1bc9-4670-a716-a1d983faabac",
    "name": "Azure AD Users with AWS EMR delete permissions",
    "description": "Azure AD Users with EMR data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "2d237445-bb93-4f06-8f56-3435717fa71f",
    "name": "Okta Users with AWS EMR write permissions",
    "description": "Okta Users with EMR data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "ff4ab011-eb83-4ee8-adda-5d70cd49441d",
    "name": "Okta Users with AWS EMR delete permissions",
    "description": "Okta Users with EMR data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "0a093e06-3618-4b73-8468-f880e5f480a8",
    "name": "OneLogin Users with AWS EMR write permissions",
    "description": "OneLogin Users with EMR data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "onelogin"
      }
    ],
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "550ebe55-7741-459e-a24d-d95b9cbb86b9",
    "name": "OneLogin Users with AWS EMR delete permissions",
    "description": "OneLogin Users with EMR data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "onelogin"
      }
    ],
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "f309b61e-0284-4ed7-99a9-a79cec314a0e",
    "name": "Azure AD Users with AWS RDS MySQL access",
    "description": "Azure AD Users with access to one or more RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7da3672e-c459-45a2-b2d6-e86c6ea46532",
    "name": "Okta Users with AWS RDS MySQL access",
    "description": "Okta Users with access to one or more RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d5e583ab-64b4-48b9-ad77-d37245e92973",
    "name": "OneLogin Users with AWS RDS MySQL access",
    "description": "OneLogin Users with access to one or more RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "90573244-5d87-4f9c-9968-40c64799c196",
    "name": "Azure AD Users with AWS RDS MySQL write permissions",
    "description": "Azure AD Users with RDS MySQL data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "c2b3759c-7908-4abd-86c1-1a32e5f3220d",
    "name": "Okta Users with AWS RDS MySQL write permissions",
    "description": "Okta Users with RDS MySQL data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "86a579d0-ce56-43e4-86ac-c7fba4ae70e2",
    "name": "OneLogin Users with AWS RDS MySQL write permissions",
    "description": "OneLogin Users with RDS MySQL data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "2019ab9d-7115-424b-b5a0-e2dbdaa3b51a",
    "name": "Azure AD Users with AWS RDS Postgres access",
    "description": "Azure AD Users with access to one or more RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6485c3ec-c1c1-425d-a13a-75e2d8543b6f",
    "name": "Okta Users with AWS RDS Postgres access",
    "description": "Okta Users with access to one or more RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c0465f16-6c68-4efe-93c7-289590ad5e48",
    "name": "OneLogin Users with AWS RDS Postgres access",
    "description": "OneLogin Users with access to one or more RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "69ebb1c6-7bdd-4795-864e-5badd7e5cc25",
    "name": "Azure AD Users with AWS RDS Postgres write permissions",
    "description": "Azure AD Users with RDS Postgres data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "29fe7fad-c638-4334-8f8d-8c0fd9d1e157",
    "name": "Okta Users with AWS RDS Postgres write permissions",
    "description": "Okta Users with RDS Postgres data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "0d7c3114-adc5-4e12-b9fe-26c72507ad75",
    "name": "OneLogin Users with AWS RDS Postgres write permissions",
    "description": "OneLogin Users with RDS Postgres data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "863cb01e-97e2-47b0-a0ec-6600104494e9",
    "name": "Azure AD Users with AWS IAM access",
    "description": "Azure AD Users that can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "18d4247e-6793-4562-96fd-46510f56c740",
    "name": "Okta Users with AWS IAM access",
    "description": "Okta Users that can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c0c4d7b6-87fd-4169-ab7b-6048d0392eeb",
    "name": "OneLogin Users with AWS IAM access",
    "description": "OneLogin Users that can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8ec0c12e-544b-4dbc-8a90-7de469b657d4",
    "name": "Azure AD Users with AWS IAM Admin permissions",
    "description": "Azure AD Users that can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "ad36c312-6c22-4431-8591-39c1ac9a1fa6",
    "name": "Azure AD Guest Users with AWS IAM Admin permissions",
    "description": "Azure AD Guest Users that can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ]
  },
  {
    "id": "9894e8c7-0348-491b-970c-a597cd0af6ea",
    "name": "Azure AD Users with AWS IAM Admin permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "91eadb13-01c2-4e85-aa0c-ec3077179e9d",
    "name": "Okta Users with AWS IAM Admin permissions",
    "description": "Okta Users that can assume one or more AWS IAM roles with Full Administrator permissions. This implies that the Okta domain is integrated with AWS accounts, enabling Okta Users to take on AWS IAM roles and granting them full permissions for all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "62532a58-5122-4c47-a4d1-25adc3b1930b",
    "name": "Okta Users with full AWS IAM admin permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago that are deactivated and can assume one or more AWS IAM roles with full Administrator permissions. This implies that the Okta domain is integrated with AWS accounts, enabling Okta Users to take on AWS IAM roles and granting them full permissions for all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "e51b9eb5-ca8b-4741-b464-6cee1c8698a1",
    "name": "OneLogin Users with AWS IAM Admin permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago that are deactivated but can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "84254efe-efbe-407a-886d-c7007e006445",
    "name": "Active Directory Users with AWS IAM Admin permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago that are deactivated and can assume one or more AWS IAM roles with full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "38c3dce4-2a02-4547-b3b6-109a2d29f34b",
    "name": "Azure AD Users with AWS IAM access that are deactivated",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but can assume one or more AWS IAM roles.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "cbb1e085-18e7-4d45-8bd7-2245c0b47560",
    "name": "Active Directory Users with AWS IAM access that are deactivated",
    "description": "Active Directory Users created more than 30 days ago that are deactivated but can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "4d894c2d-6208-4241-838a-d70d7caa9472",
    "name": "Okta Users with Google Workspace access that are deactivated",
    "description": "Okta Users created more than 30 days ago that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "9862b97f-a283-492c-b3e8-864a6f048551",
    "name": "OneLogin Users with Google Workspace access that are deactivated",
    "description": "OneLogin Users created more than 30 days ago that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "6340e701-ce8a-4ddf-8e30-f8b9c8bcf702",
    "name": "Active Directory Users with Google Workspace access that are deactivated",
    "description": "Active Directory Users created more than 30 days ago that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "4cd214da-7f26-43b4-9d00-fb6015f848de",
    "name": "Okta Groups with AWS IAM Admin permissions",
    "description": "Okta Groups that can assume one or more AWS IAM roles with full Administrator permissions. This implies that the Okta domain is integrated with AWS accounts, enabling Okta Groups to take on AWS IAM roles and granting them full permissions for all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "b5065307-54ef-4ade-87f0-1afaa8aedd70",
    "name": "Active Directory Groups with AWS IAM Admin permissions",
    "description": "Active Directory Groups that can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "48405266-ef64-4d85-8cf8-a531d668cd5b",
    "name": "Azure AD Groups with AWS IAM Admin permissions",
    "description": "Azure AD Groups with full AWS IAM Administrator permissions. This implies that the Azure AD tenant is integrated with AWS accounts, allowing the group members to assume AWS IAM roles with permissions for all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "8943545f-9e99-4375-81f9-3206d802c154",
    "name": "OneLogin Users with AWS IAM Admin permissions",
    "description": "OneLogin Users that can assume one or more AWS IAM roles with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "9e70b10f-060e-4510-b502-e64bb56d7f57",
    "name": "Azure AD Security Groups",
    "description": "Total number of Azure AD Security Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_security_group",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4a7fb890-751b-4f9f-8440-71e9a84c1b3d",
    "name": "Azure AD Security Groups with deactivated Users",
    "description": "Azure AD Security Groups that have deactivated Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_security_group",
              "bool_value": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "is_active",
                          "bool_value": false
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "azure_tenant_id",
                          "string_value": "$COOKIE_AZURE_TENANT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "f733a863-2999-4739-9c27-2c896d36d099",
    "name": "Azure AD Groups in a cycle",
    "description": "Total number of Azure AD Groups that have cyclic group membership",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "hierarchical_in_cycle",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2e1bfb8c-34ec-494d-89f3-99ef1e6efed5",
    "name": "OneLogin Users that are locked",
    "description": "OneLogin Users that are currently in a locked state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_locked",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "87f99566-17e0-463c-bf67-ff20ecb14e74",
    "name": "IdP Users that have not logged in recently",
    "description": "Identity Provider (IdP) Users that have not logged-in in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "supported_idps": [
      {
        "name": "okta"
      },
      {
        "name": "onelogin"
      },
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "81755625-61b0-4636-ae19-23b58d0b9710",
    "name": "IdP Users that are deactivated",
    "description": "Identity Provider (IdP) Users in your org that are in a deactivated state",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3959887e-00fc-4ad4-9ddd-d15c14f3555d",
    "name": "Azure AD Users that are deactivated",
    "description": "Azure AD Users that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0396a1c8-730c-46b5-9815-2afb54835b6e",
    "name": "Azure AD Users with Redshift Superuser permissions",
    "description": "Azure AD Users with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "aa20c3bd-50c5-46cd-bc64-772ecf550404",
    "name": "Azure AD Guest Users with Redshift Superuser permissions",
    "description": "Azure AD Guest Users with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ]
  },
  {
    "id": "5cc7de16-fc6e-4a28-8378-ca5fd2e84e1e",
    "name": "Azure AD Users with Redshift Superuser permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with Redshift Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "fb52acd5-288a-4b3d-abf4-0edf71724390",
    "name": "Okta Users with Redshift Superuser permissions",
    "description": "Okta Users with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "09c17a08-c93b-4ceb-8fdc-2cc438afd6b3",
    "name": "Okta Users with Redshift Superuser permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with Redshift Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "36f02b4b-82f8-42f2-80a6-c99952086e42",
    "name": "OneLogin Users with Redshift Superuser permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with Redshift Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "474339a7-ef0b-469f-8d79-869e62d7dfb0",
    "name": "Okta Groups with Redshift Superuser permissions",
    "description": "Okta Groups with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "68df54db-05be-4c92-944f-23a363a3be80",
    "name": "Active Directory Groups with Redshift Superuser permissions",
    "description": "Active Directory Groups with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "74cabdb7-a5fb-4254-b02d-742c58aeb9b2",
    "name": "OneLogin Users with Redshift Superuser permissions",
    "description": "OneLogin Users with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "abaec260-cbe0-4055-88f9-587763739fb8",
    "name": "Azure AD Users with Redshift drop permissions",
    "description": "Azure AD Users with drop permissions on Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "cec514db-0b10-4799-af2f-53fe1c1ba71c",
    "name": "Okta Users with Redshift drop permissions",
    "description": "Okta Users with drop permissions on Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "2bbaef23-45e3-4982-b4e1-fa85e1746a4a",
    "name": "OneLogin Users with Redshift drop permissions",
    "description": "OneLogin Users with drop permissions on Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "f1e89482-76a6-4c38-817e-19e9e7a71232",
    "name": "Azure AD Users with RDS MySQL Superuser permissions",
    "description": "Azure AD Users with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "592da003-adf7-435d-a4a4-df2cfcd2f00f",
    "name": "Azure AD Guest Users with RDS MySQL Superuser permissions",
    "description": "Azure AD Guest Users with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ]
  },
  {
    "id": "41973d1b-b3c8-43ec-b156-bdcfa407eff1",
    "name": "Azure AD Users with RDS MySQL Superuser permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with RDS MySQL Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "edf136c9-bf9a-4f5d-8a66-39913e934953",
    "name": "Azure AD Groups with RDS MySQL Superuser permissions",
    "description": "Azure AD Groups with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "d95933b7-3f44-40a4-98a4-e703fac81271",
    "name": "Okta Users with RDS MySQL Superuser permissions",
    "description": "Okta Users with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "0eba1cf9-9050-47c7-9682-d55569b68fa6",
    "name": "Okta Users with RDS MySQL Superuser permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with RDS MySQL Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "e8e89fb0-5168-410d-bbb5-b8201e5d1ba2",
    "name": "OneLogin Users with RDS MySQL Superuser permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with RDS MySQL Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "5450a93a-0688-4d8f-9a7c-32b87281bd8e",
    "name": "Okta Groups with RDS MySQL Superuser permissions",
    "description": "Okta Groups with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "3eaac7b5-8cf3-4d97-bf24-761d97c8b2c1",
    "name": "Active Directory Groups with RDS MySQL Superuser permissions",
    "description": "Active Directory Groups with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "8ba780eb-2485-480c-b4db-97f4f16dcbcb",
    "name": "OneLogin Users with RDS MySQL Superuser permissions",
    "description": "OneLogin Users with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "ee93fa18-0f4e-4a71-b493-857e3e27fb65",
    "name": "Azure AD Users with RDS Postgres Superuser permissions",
    "description": "Azure AD Users with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "c97f0f76-3572-43f9-aee1-2e783dced59f",
    "name": "Azure AD Guest Users with RDS Postgres Superuser permissions",
    "description": "Azure AD Guest Users with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ]
  },
  {
    "id": "b5b5ed5b-ed37-42f7-842f-c10ef842a385",
    "name": "Azure AD Users with RDS Postgres Superuser permissions that are deactivated",
    "description": "Azure AD Users with RDS Postgres Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "d6b51f07-978e-4ec7-ae27-875760721ea0",
    "name": "Azure AD Groups with RDS Postgres Superuser permissions",
    "description": "Azure AD Groups with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "e8e9741f-7532-418c-aa5f-1a261c546ba4",
    "name": "Azure AD Users with Snowflake ACCOUNTADMIN permissions",
    "description": "Azure AD Users with Snowflake ACCOUNTADMIN permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "278c8405-19dd-4c89-8b42-bb893fb2911f",
    "name": "Azure AD Guest Users with Snowflake ACCOUNTADMIN permissions",
    "description": "Azure AD Guest Users with Snowflake ACCOUNTADMIN permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "2849f5fe-c0d9-488f-ac61-b087f3cc1471",
    "name": "Azure AD Users with Snowflake ACCOUNTADMIN permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with Snowflake ACCOUNTADMIN permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "description": "Azure AD Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "id": "bb1dcaf8-6ee8-43d0-8e36-f9c7595bdcee",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ],
    "name": "Azure AD Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ef658ccd-b738-41fb-8e5c-665174da8490",
    "name": "Azure AD Users with Github Site Admin permissions",
    "description": "Azure AD Users with Github Site Admin permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "9f850337-b528-40c0-b207-d32e01e5816e",
    "name": "Azure AD Guest Users with Github Site Admin permissions",
    "description": "Azure AD Guest Users with Github Site Admin permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ]
  },
  {
    "id": "7b312b2e-fb3f-412e-ab7e-6b15e7ce3e48",
    "name": "Azure AD Users with Github Site Admin permissions that are deactivated",
    "description": "Azure AD Users who are deactivated and created more than 30 days ago with Github Site Admin permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "fab0d4fa-d378-4fd2-8bc9-c5cd10dd6397",
    "name": "Azure AD Users with Salesforce ModifyAllData permissions",
    "description": "Azure AD Users with Salesforce ModifyAllData permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "15b9fdc2-900b-48b7-910d-f1fd469121e9",
    "name": "Azure AD Guest Users with Salesforce ModifyAllData permissions",
    "description": "Azure AD Guest Users with Salesforce ModifyAllData permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "a00558f4-5a8c-40e3-afbe-ec00a6e1a630",
    "name": "Azure AD Users with Salesforce ModifyAllData permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with Salesforce ModifyAllData permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "ce15bfe0-c64b-49b5-9ef1-739a5ef4e200",
    "name": "Azure AD Users with Salesforce Administrator permissions",
    "description": "Azure AD Users with Salesforce System Administrator profile",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "0ac6b59b-7863-4c60-a280-1eaa803bef0a",
    "name": "Azure AD Guest Users with Salesforce Administrator permissions",
    "description": "Azure AD Guest Users with Salesforce System Administrator profile",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "09c98358-209a-4376-b608-925517215aa8",
    "name": "Azure AD Users with Salesforce Administrator permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with Salesforce System Administrator profile that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "5e515176-46a3-427a-b6bb-5bd7e609115e",
    "name": "Azure AD Users with Google Workspace Admin permissions",
    "description": "Azure AD Users with Google Workspace Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "b77c895c-fd91-445d-a19f-ca91ab86ff99",
    "name": "Azure AD Guest Users with Google Workspace Admin permissions",
    "description": "Azure AD Guest Users with Google Workspace Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "1ad63c73-0710-4839-bce8-01142d98843b",
    "name": "Azure AD Users with Google Workspace full Administrator permissions that are deactivated",
    "description": "Azure AD Users created more than 30 days ago with Google Workspace Full Administrator permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "b8b9190f-935c-4e9e-b4a1-7c2b0d84deb3",
    "name": "Azure AD Users with Google Workspace access that are deactivated",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "4bb03464-4efa-499c-84e7-d034aee3a0b9",
    "name": "Okta Users with RDS Postgres Superuser permissions",
    "description": "Okta Users with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "26f4c35d-033e-4e72-bf49-5e90e4864690",
    "name": "Okta Users with RDS Postgres Superuser permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with RDS Postgres Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "d2abb24b-848d-4dee-9e56-5d8a596c6948",
    "name": "OneLogin Users with RDS Postgres Superuser permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with RDS Postgres Superuser permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "b3b9904c-f7b8-4b68-9c29-bbeaedbb1a74",
    "name": "Okta Groups with RDS Postgres Superuser permissions",
    "description": "Okta Groups with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "ebde8663-77ea-4860-8355-7bc218d7192e",
    "name": "Active Directory Groups with RDS Postgres Superuser permissions",
    "description": "Active Directory Groups with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "f297b9f1-3496-47fe-8999-3d8b68805541",
    "name": "Okta Users with Github Site Admin permissions",
    "description": "Okta Users with Github Site Admin permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "c418bb7a-e14c-461f-96ad-34eef0cdf509",
    "name": "Okta Users with Github Site Admin permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with Github Site Admin permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "530b25f2-41fe-41b0-92c2-274b971bed30",
    "name": "OneLogin Users with Github Site Admin permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with Github Site Admin permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "b629a654-aa62-44d6-a278-6eb3e899ef91",
    "name": "Active Directory Users with Github Site Admin permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago with Github Site Admin permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "33542762-13db-47d1-944c-12b957a6f243",
    "name": "Okta Users with Salesforce ModifyAllData permissions",
    "description": "Okta Users with Salesforce ModifyAllData permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "bb4c088e-9906-412d-92bb-9d4ac86e6103",
    "name": "Okta Users with Salesforce ModifyAllData permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with Salesforce ModifyAllData permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "a4f76d50-e627-4b2a-834f-be9be5f45ec3",
    "name": "OneLogin Users with Salesforce ModifyAllData permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with Salesforce ModifyAllData permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "548c7e39-ded4-448e-9b73-4f3a12e4a6bd",
    "name": "Active Directory Users with Salesforce ModifyAllData permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago with Salesforce ModifyAllData permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "59aee539-c409-4701-b4bd-3fc2e90064b7",
    "name": "Okta Users with Salesforce Administrator permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with Salesforce System Administrator profile that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "ce0b4f64-d071-4b2d-b742-dc32dfd61370",
    "name": "OneLogin Users with Salesforce Administrator permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with Salesforce System Administrator profile that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "af083988-7dd5-441f-a564-59c5595a2cf6",
    "name": "Active Directory Users with Salesforce Administrator permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago with Salesforce System Administrator profile that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "5c24e650-1211-4170-98e7-cdece5455d6e",
    "name": "Okta Users with Google Workspace Admin permissions",
    "description": "Okta Users with Google Workspace Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "d73a0b58-0e53-49f2-b8cc-1255e8ba10d3",
    "name": "Okta Users with Google Workspace Admin permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago with Google Workspace Full Administrator permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "d0958543-db1b-4fb9-9327-7e73f3ebed33",
    "name": "OneLogin Users with Google Workspace Admin permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago with Google Workspace Full Administrator permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "70a88449-8df9-4ba2-8679-aa68376f2b51",
    "name": "Active Directory Users with Google Workspace Admin permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago with Google Workspace Full Administrator permissions that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ]
  },
  {
    "id": "eab2eddb-15d6-4ab3-8deb-c60c3719f65d",
    "name": "OneLogin Users with RDS Postgres Superuser permissions",
    "description": "OneLogin Users with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "8d4c5302-eda7-4e42-b1c2-a9670e7fc56b",
    "name": "Azure AD Users that are deactivated and in a Security group",
    "description": "Azure AD Users that are in a Security group but are currently deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_security_group",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "adfd12bf-28b3-42b6-bdef-8a560130dc98",
    "name": "Azure AD Users that are deactivated but have AWS IAM access",
    "description": "Azure AD Users created 30 days ago that are deactivated but can assume one or more IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "db3f0748-1ece-44a6-a430-c95716d96922",
    "name": "Okta Users with AWS IAM access that are deactivated",
    "description": "Okta Users created more than 30 days ago that are deactivated but can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a317435a-93c4-41cb-a1bb-9b838031afcb",
    "name": "Okta Users that are deactivated but have Google Cloud Workspace access",
    "description": "Okta Users that are deactivated can assume one or more Google Cloud Workspace Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a6d1484c-dea1-4990-8397-7b3d4c51a10b",
    "name": "Azure AD Users that are deactivated but have Google Cloud Workspace access",
    "description": "Azure AD Users that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "02a235fe-6e4a-463d-a143-0f13b90974f2",
    "name": "Active Directory Users with Google Cloud Workspace access that are deactivated",
    "description": "Active Directory Users that are deactivated but can assume one or more Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "acdf9f73-d269-472c-9756-a3376ae1380c",
    "name": "OneLogin Users with AWS IAM access that are deactivated",
    "description": "OneLogin Users that are deactivated but can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "0660faa9-5825-4497-b8e5-cc5d634c4be3",
    "name": "Azure AD Users with no group assigned",
    "description": "Azure AD Users that do not belong to a group",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cdf28e9c-dfae-4536-959e-478239f97b5d",
    "name": "Okta Users with no specific group assigned",
    "description": "Okta Users that do not belong to a group other than 'Everyone' group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Everyone",
                    "not": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "705a746a-dbf5-4dd6-a54a-c6eee4dea94a",
    "name": "Active Directory Users with no specific group assigned",
    "description": "Active Directory Users that do not belong to a group other than 'Everyone' group",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Everyone",
                    "not": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8a65bd18-5799-40e8-bb2d-4d3df6c317aa",
    "name": "AWS IAM roles without permissions",
    "description": "The AWS IAM roles that don't have any attached permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e7752a35-2126-4871-bed6-0800bacf5f13",
    "name": "AWS IAM Users without permissions",
    "description": "AWS IAM Users that don't have any attached permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9c89eef6-97cd-4f7a-a887-f83de4d28a64",
    "name": "AWS IAM Users with assume role privilege for Admin permissions",
    "description": "AWS IAM Users that can assume one or more IAM roles with Full Administrator permissions. This means that the users have the 'sts:AssumeRole' action AND the role trusts the user, granting them full permissions for all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "35a2f8fb-af76-471e-8658-8fa167befbce",
    "name": "AWS IAM roles with assume role privilege for Admin permissions",
    "description": "AWS IAM roles that can assume one or more IAM roles with Full Administrator permissions. This means that the roles have the 'sts:AssumeRole' action and the role trusts the user, granting them full permissions for all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "01677b4a-dc99-4215-9698-95f1cdcb7089",
    "name": "AWS IAM Users with Redshift Superuser permissions",
    "description": "AWS IAM Users with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "94d97e08-e6c5-4971-abd4-8ca3e81a1fad",
    "name": "IAM Users with Redshift drop permissions",
    "description": "IAM Users that have Redshift drop permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "945a62f9-78da-4e5b-9abe-55fe9d44b02a",
    "name": "AWS IAM roles with Redshift drop permissions",
    "description": "IAM roles that have Redshift drop permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "1bc9786b-b1bc-45e5-bac4-f9fe9dfdc9f5",
    "name": "AWS IAM Users with RDS MySQL Superuser permissions",
    "description": "AWS IAM Users with RDS MySQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUserInstance",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "fdf5ee7b-bac6-4c61-8e17-e098305b2b40",
    "name": "AWS IAM Users with RDS Postgres Superuser permissions",
    "description": "AWS IAM Users with RDS Postgres Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "fb785b87-47c6-45fb-ab8e-f54337bbe213",
    "name": "AWS IAM Roles",
    "description": "Total number of AWS IAM Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "587caaee-8c31-4e83-b650-42e93bf6f2c1",
    "name": "AWS IAM roles with Admin permissions",
    "description": "AWS IAM roles that have Full Administrator permissions. Meaning that they have the equivalent of the AdministratorAccess policy, allowing all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "f073c6f6-5698-4227-833c-db3ba6fe58a2",
    "name": "AWS IAM Policies",
    "description": "Total number of AWS IAM Policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2b034d83-498d-4f70-b8e1-b919c84276ac",
    "name": "AWS IAM Users",
    "description": "Total number of AWS IAM Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e654e8b7-4011-483e-b685-749189d238f3",
    "name": "AWS IAM Groups",
    "description": "Total number of AWS IAM Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6c12e00b-31c0-456f-b4dd-867cc5871690",
    "name": "AWS IAM Policies with Admin permissions",
    "description": "AWS IAM Policies that have Full Administrator permissions. Meaning they grant all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "4e4551bc-496a-419f-b6a2-caba8a8c2f93",
    "name": "AWS IAM Groups with Admin permissions",
    "description": "AWS IAM Groups with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "4312961c-50e5-46c7-9cde-81ab596a50f4",
    "name": "IAM Users with direct AWS IAM Policies",
    "description": "AWS IAM Users with AWS IAM Policies directly attached. Meaning these policies are associated with AWS IAM Users not via IAM Group.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "AwsIamRole"
              },
              {
                "type": "AwsIamGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "bd8ec46f-455e-46fb-843b-bb41798d6a95",
    "name": "AWS SCP Policies with Admin permissions",
    "description": "AWS IAM Service Control Policies(SCP) with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServiceControlPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "7b62ef31-ab9c-4168-b9eb-ef396f2694a4",
    "name": "AWS SCP Policies with statement Effect Deny Action sts:AssumeRole",
    "risk_explanation": "Using AWS Service Control Policies (SCPs) with a statement like \"Effect\": \"Deny\", \"Action\": \"sts:AssumeRole\" can create significant challenges:\n1. Restricts Role Delegation: This policy denies the ability to assume roles across the AWS account or within an AWS Organization. It can severely limit legitimate and necessary cross-account access, hindering collaboration and efficient resource sharing.\n2. Impedes Cross-Account Management: Many AWS environments rely on role assumption for managing multiple accounts efficiently. A blanket deny on sts:AssumeRole can obstruct such management practices.\n3. Hinders Emergency Access: In critical situations, assuming roles can be essential for quick remediation or access. Such a policy could delay or block these emergency actions.\n4. Complex Workarounds: Organizations might be forced to create complex workarounds to achieve necessary access, which can introduce inefficiencies and new security risks.\n5. Impact on Automated Processes: Automation scripts and tools that rely on role assumption for tasks across accounts will fail, potentially disrupting important operations.\n6. Potential for Overblocking: Such a broad deny policy might unintentionally block actions that are safe and necessary, leading to operational disruptions.",
    "risk_remediation": "Adhering to the best identity security and governance practices, review and refine the SCP to allow necessary sts:AssumeRole actions for legitimate use cases, ensuring that only specific roles and accounts with a justified need are granted permissions, while maintaining a principle of least privilege.",
    "risk_level": "LOW",
    "description": "AWS IAM Service Control Policies with statement Effect Deny Action sts:AssumeRole",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServiceControlPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "5ed7ff8a-c2d4-41b9-9478-6833eab9f5ea",
    "name": "AWS IAM Policies that have both 'allow' and 'deny'",
    "description": "AWS IAM Policies with both 'allow' and 'deny' statements in the same policy",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_and_deny",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "9eae4d0b-68b1-4040-b872-ebf38c2f2ca2",
    "name": "Azure AD Groups with no active users in 90 days",
    "description": "Azure AD Groups without any direct or indirect users who have logged in within the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "af9b296e-f731-402b-8b69-989c824add7c",
    "name": "Azure AD Users with no recent activity",
    "risk_explanation": "Azure AD (Azure Active Directory) users with no recent activity can be considered a cybersecurity vulnerability for several reasons:\n\n1. Inactive Accounts: Dormant or unused user accounts can become attractive targets for attackers because they may not be actively monitored for suspicious activity.\n\n2. Stale Credentials: Inactive accounts may still have valid credentials, including passwords, that attackers could exploit if they manage to gain access to the account.\n\n3. Phishing Targets: Inactive users may be less vigilant about cybersecurity threats, making them more susceptible to phishing attacks, where attackers attempt to trick them into revealing sensitive information or credentials.\n\n4. Unauthorized Access: If an attacker gains access to an inactive account, they may use it as a launching point to move laterally within the network, escalate privileges, or access sensitive resources.\n\n5. Resource Misuse: Attackers might abuse inactive accounts to perform actions that violate security policies or misuse resources without raising suspicion.\n\n6. Compliance and Audit Concerns: Inactive accounts can complicate compliance efforts, as they may not be subject to regular reviews and audits. This can result in a lack of visibility and accountability for these accounts.\n\n7. Identity Sprawl: Accumulation of inactive accounts can lead to identity sprawl, making it more challenging to manage and secure identities effectively.",
    "description": "Azure AD Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c50ed5c1-bd1d-45c7-9af9-162689468fbd",
    "name": "Okta Groups with no active users in 90 days",
    "description": "The Okta Groups without any users who have been active in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a107b158-a452-4af1-83a8-4b84d83200d3",
    "name": "Azure AD Groups with no activated users",
    "description": "Azure AD Groups with no activated users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f17fb1d6-abc0-4897-b491-3efb0a41e4e9",
    "name": "Active Directory Groups with no activated users",
    "description": "Active Directory Groups with no activated users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "624ab8f2-7358-4c77-b7c0-5c2e5df4e368",
    "name": "Okta Groups without activated users",
    "description": "Okta Groups with no activated users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "39c7344f-6da1-49cd-8939-c7457dff2968",
    "name": "Azure AD Groups without users",
    "description": "Azure AD Groups without any direct or indirect users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "e8d6cc3f-1987-4ee7-b240-c290c452bf3f",
    "name": "Okta Groups without Users",
    "risk_explanation": "Having Okta groups without users can lead to several issues:\n1. Resource Wastage: Empty groups consume system resources and add unnecessary clutter to the Okta environment.\n2. Management Overhead: Administrators spend time managing these groups, which adds to their workload without providing any functional benefit.\n3. Confusion in Administration: The presence of empty groups can cause confusion, making it more challenging to manage and navigate the system effectively.\n4. Inefficient Access Control: Groups are often used for streamlined access management. Empty groups fail to serve this purpose, leading to inefficiencies.\n5. Complicates Auditing and Compliance: Empty groups can complicate the process of auditing and maintaining compliance, as they need to be accounted for and reviewed without contributing to operational functionality.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and delete Okta groups without users to reduce resource wastage, management overhead, and administrative confusion, while improving access control efficiency and simplifying auditing and compliance.",
    "risk_level": "LOW",
    "description": "Okta Groups without any User",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "79034f86-b77b-4aa7-9c5e-b73ea13502be",
    "name": "Azure AD Groups with AWS IAM access",
    "description": "Azure AD Groups that can assume one or more AWS IAM roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8f5c5d69-d53d-48f0-a490-0e91b41de263",
    "name": "Azure AD Groups that are not Security Group",
    "description": "Azure AD Groups that are not Security Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_security_group",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e916d837-0e60-47f7-bc3a-d3dc13a331b2",
    "name": "AWS IAM Roles that can assume AWS service principals",
    "description": "AWS IAM Roles that can assume one or more AWS service principal. Meaning they have a trust policy with 'sts:AssumeRole' or 'sts:AssumeRoleWithSAML' for example.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsServicePrincipal"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "0b12c793-26bc-4607-9738-df05d37b69f6",
    "name": "Azure AD Users with no department",
    "description": "Azure AD Users with no department assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "department",
                    "not": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "28bdc918-e729-4775-b068-1a6437f9d36e",
    "name": "AWS IAM Policies with delete permissions",
    "description": "The AWS IAM Policies that have delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "652f40de-b937-466d-8a6a-ffc57c0831fe",
    "name": "AWS IAM Users with Admin permissions",
    "description": "AWS IAM Users that have Full Administrator permissions. Meaning that they have the equivalent of the AdministratorAccess policy, allowing all actions on all resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "4947a933-fbde-4512-9a9d-6f3c2a13fe53",
    "name": "AWS Redshift Local Users",
    "description": "Total number of local Users in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "110a2b8f-07a9-4115-80d1-fa14b2e1b976",
    "name": "AWS Redshift Local Users with create permissions",
    "description": "Local Users with create permissions in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Create"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6db012dc-c3c4-40c2-bb41-f71712184553",
    "name": "AWS Redshift tables created in the last 24 hours",
    "description": "AWS Redshift tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftTable",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c1ba155a-0f69-434c-8b7c-5a4d4a0acf02",
    "name": "AWS IAM Service Principals with Redshift Superuser permissions",
    "description": "AWS IAM service principals that can assume one or more Redshift users with Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "dbbbe668-be97-4c09-96bf-b3c46eba6c4d",
    "name": "AWS Redshift Local Users with Admin permissions",
    "description": "Local Users with Full Administrator permissions in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "9cc8f5c8-9b50-4665-b0f1-f20bb9222c8a",
    "name": "AWS Redshift Local Users with delete permissions",
    "description": "Local Users with delete permissions in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Delete"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "7dcf7f41-a9a2-43d8-be11-2dea95069334",
    "name": "AWS Redshift Local Users with drop permissions",
    "description": "Local Users with drop permissions in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "de3a3a22-436d-452e-8652-6d35fc693ccd",
    "name": "AWS Redshift Local Users with write permissions",
    "description": "Local Users with write permissions in AWS Redshift",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftClusterResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "4bd6e44a-f053-42ba-92bc-4eeb5040c700",
    "name": "AWS DynamoDB tables created in the last 24 hours",
    "description": "AWS DynamoDB tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBTable",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "888f2f1f-8ad9-4b40-b336-f13ba5ebc74c",
    "name": "AWS IAM Users with DynamoDB delete permissions",
    "description": "AWS IAM Users with delete permissions in DynamoDB",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "7303a8a2-3784-41e5-9465-cf9e836f98e9",
    "name": "AWS IAM Users with DynamoDB write permissions",
    "description": "AWS IAM Users with write permissions in DynamoDB",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "f9e57c50-0897-4527-8d45-5c5c7acf1b09",
    "name": "AWS EMR clusters created in the last 24 hours",
    "description": "AWS EMR clusters created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRCluster",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bc2ff030-1ce3-43ca-a15f-464f7b5c839a",
    "name": "AWS EMR notebook executions run in the last 24 hours",
    "description": "AWS EMR notebook executions run in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRNotebookExecution",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2c7631bd-803f-4195-9a02-fe6552c37144",
    "name": "AWS IAM Users with EMR delete permissions",
    "description": "AWS IAM Users with delete permissions in EMR",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "a97413d9-4c2c-4064-a0a8-044a74b169e6",
    "name": "AWS IAM Users with EMR write permissions",
    "description": "AWS IAM Users with write permissions in EMR",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EMRResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "efc75d4a-75da-479b-8f93-2eaaa83d90aa",
    "name": "AWS RDS MySQL Local Users",
    "description": "Total number of local Users in AWS RDS MySQL",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "84c67f14-612d-44ba-99bd-12aca3c985ef",
    "name": "AWS RDS MySQL Local Users with create permission",
    "description": "Local Users with create permission in AWS RDS MySQL",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "CreatePriv"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "977591f2-9153-41ae-9fd6-5a7dd2027f15",
    "name": "AWS RDS MySQL tables created in the last 24 hours",
    "description": "AWS RDS MySQL tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlTable",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9291368c-4fb6-46e6-b87a-24ab53472774",
    "name": "AWS IAM Service Principals assigned to RDS MySQL Superuser",
    "description": "AWS IAM service principals assigned to RDS MySQL Superuser",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3e8bb88e-4808-406b-9cc4-33362da724d2",
    "name": "AWS RDS MySQL Local Users with Admin permissions",
    "description": "AWS RDS MySQL Local Users with Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUserInstance",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "ce10b12f-0074-4450-beb9-bdda8ae5d7b9",
    "name": "AWS RDS MySQL Local Users with delete permissions",
    "description": "AWS RDS MySQL Local Users with delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "DeletePriv"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ed81a061-66df-4d67-a77f-795d71f7907b",
    "name": "AWS RDS MySQL Local Users with drop permissions",
    "description": "AWS RDS MySQL Local Users with drop permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "DropPriv"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "4faa832a-4141-4b5a-81ae-40ce0128767d",
    "name": "AWS RDS MySQL Local Users with write permissions",
    "description": "AWS RDS MySQL Local Users with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "47777c16-e598-4ddb-8653-434acf65e125",
    "name": "AWS RDS Postgres Local Users",
    "description": "Total number of Local Users in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c1615e55-52b0-4d68-ac3f-9ba9bf8b044a",
    "name": "AWS RDS Postgres Local Groups",
    "description": "Total number of Local Groups in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9d32dcae-e305-4fff-911a-f09ffd9a2b92",
    "name": "Local Users with create permission in RDS Postgres",
    "description": "Local Users with create permission in RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Create"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "81d04742-f56c-42ac-9e18-618fd79efec5",
    "name": "RDS Postgres tables created in the last 24 hours",
    "description": "RDS Postgres tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c1b9bc58-a561-4fec-b038-e50a61a68505",
    "name": "AWS RDS Postgres Local Users with Admin permissions",
    "description": "Local Users with Administrator permissions in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "62cdccba-f8a9-4922-9531-a74a3b98bcc1",
    "name": "AWS IAM service principals with RDS Postgres Superuser permissions",
    "description": "AWS IAM service principals that can assume one or more RDS Postgres users with Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "30ae3525-492a-410d-a54e-cd367285e986",
    "name": "AWS RDS Postgres Local Users with delete permissions",
    "description": "Local Users with delete permissions in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Delete"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "09bc4acd-ef09-4d41-8a89-ce871364f4bd",
    "name": "AWS RDS Postgres Local Users with drop permissions",
    "description": "Local Users with drop permissions in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Drop"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "37315f8f-455f-497e-9be0-f2f7d581c64e",
    "name": "AWS RDS Postgres Local Users with write permissions",
    "description": "Local Users with write permissions in AWS RDS Postgres",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "e8296d1f-815e-4b7a-ab1f-eacad267d696",
    "name": "AWS S3 Buckets",
    "description": "Total number of AWS S3 Buckets",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "68749069-78fd-4b9f-bbda-b90cdde2a335",
    "name": "AWS S3 buckets created in last 24 hours",
    "description": "AWS S3 buckets created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d5198276-de24-442a-92b6-e481ad846a36",
    "name": "Service principals with AWS S3 bucket access",
    "description": "AWS service principals with S3 bucket access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "8fb9b4e3-69f5-4485-9a05-76e9f53e86da",
    "name": "AWS S3 buckets with object lock",
    "description": "AWS S3 buckets with object lock enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "object_lock_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a94b15da-9c45-49ad-9a24-ffe69d00ba23",
    "name": "AWS S3 buckets with logging enabled",
    "description": "AWS S3 buckets with server access logging enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "server_access_logs_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3d702b8c-a719-4255-bfae-36d0cde55d68",
    "name": "AWS S3 buckets with no access logging enabled",
    "risk_level": "LOW",
    "risk_explanation": "Not enabling access logging on AWS S3 buckets can lead to several issues:\n1. Lack of Auditing Data: Without access logs, you miss out on detailed records of access requests to the bucket. This data is crucial for security and audit purposes.\n2. Difficulty in Detecting Unauthorized Access: Access logs are essential for identifying unauthorized access or data breaches. Without them, detecting security incidents becomes much more challenging.\n3. Compliance Risks: Many compliance frameworks require logging to demonstrate that data is being monitored and protected. Not having logs may result in non-compliance.\n4. Limited Insight into Usage Patterns: Access logs provide insights into how data is being accessed and used, which is valuable for optimizing performance and understanding user behavior.\n5. Challenges in Troubleshooting: If issues arise with bucket access or data integrity, logs are a key resource for troubleshooting and resolving these issues.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable server access logging on all AWS S3 buckets to ensure detailed records of access requests are maintained for security, audit, and compliance purposes.",
    "description": "AWS S3 buckets without server access logging enabled. Meaning detailed records for the requests that are made to a bucket, access log information can be useful in Security and access audits.",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "server_access_logs_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "97604a94-ead1-4753-b2f2-f8e57cd8dff3",
    "name": "AWS S3 buckets with Block Public Access disabled",
    "description": "AWS S3 buckets that don't have Block Public Access enabled. Users can modify bucket policies, access point policies, or object permissions to allow public access. S3 Block Public Access settings override these policies and permissions so that you can limit public access to these resources.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable Block Public Access on all AWS S3 buckets to prevent unauthorized public access. If you do have to grant public access to any S3 bucket, please track them separately and regularly audit them. If you do have to grant public or cross-account access to any S3 bucket, please mark them as exceptions for this query, track them separately and regularly audit them.",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "block_public_access_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "public_access"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "0dcd47f8-e85c-49f9-b93b-53fea7987aa5",
    "name": "AWS S3 buckets that host websites",
    "description": "AWS S3 buckets that host websites",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "hosts_website",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "85f2d0b0-48f3-4032-b314-d10e28f7f454",
    "name": "AWS S3 buckets without 'block public access' enabled and not hosting websites",
    "risk_explanation": "Without 'block public access' enabled, such buckets may be unintentionally or maliciously configured to allow public access. Such public access can potentially expose sensitive data to unauthorized users leading to data exposure, tampering or breach. Further, such buckets can be leveraged by attackers to host malicious content or launch phishing attacks, tarnishing an organization's reputation. It can also lead to non-compliance with regulatory requirements, such as GDPR or HIPAA, potentially resulting in fines and legal actions. Unrestricted public access can lead to resource misuse, such as excessive data transfer costs if malicious parties exploit the bucket for their purposes.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable 'block public access' on all AWS S3 buckets that are not intended to host websites and regularly audit bucket permissions to ensure compliance.",
    "risk_level": "LOW",
    "description": "AWS S3 buckets without 'block public access' enabled and not hosting websites",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "block_public_access_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "hosts_website",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "6fe885d8-0f6a-4696-948b-027f909d0715",
    "name": "AWS S3 buckets without block public access that trusts all AWS accounts",
    "risk_level": "LOW",
    "risk_explanation": "This can result in unauthorized access, data exposure, tampering, compliance violations, resource misuse, and a lack of accountability, all of which can have serious consequences for organizations in terms of security, compliance, and reputation.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable 'block public access' on all AWS S3 buckets and restrict access to only trusted AWS accounts through specific IAM policies.",
    "description": "AWS S3 buckets without 'block public access' enabled but trusting all AWS accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "block_public_access_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "csc_trusts_any_account",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "19e4c248-2eae-4e79-80bc-50bee227e5f2",
    "name": "AWS S3 buckets with a bucket policy granting access to any AWS User",
    "description": "AWS S3 buckets with a bucket policy granting access to any AWS User",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "csc_trusts_any_account",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "a3499d9c-7721-4d32-9ed5-357823d7fb45",
    "name": "AWS S3 buckets with a bucket policy granting cross-account access",
    "description": "AWS S3 buckets with a bucket policy granting cross-account access",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "csc_access",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ef768ad0-a6b3-4ef2-b4f6-9c018f813098",
    "name": "AWS S3 buckets with potential public access",
    "risk_explanation": "AWS S3 buckets with potential public access can pose significant risks:\n1. Data Exposure: The most critical risk is unintended exposure of sensitive data. If a bucket is publicly accessible, anyone on the internet can potentially view or download its contents.\n2. Security Breaches: Public buckets are more susceptible to security breaches. Malicious actors can exploit these buckets to access or distribute sensitive data.\n3. Compliance Violations: Many data protection regulations, like GDPR or HIPAA, have strict rules about data privacy. Publicly accessible buckets can lead to compliance issues and legal penalties.\n4. Data Manipulation or Deletion: If write or delete permissions are enabled, unauthorized users could alter or remove critical data, leading to data loss or corruption.\n5. Misuse of Resources: Public buckets can be misused for hosting unauthorized content, potentially leading to additional costs and legal issues.\n6. Reputational Damage: Incidents of data exposure can harm an organization's reputation, leading to loss of customer trust and business opportunities.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable Block Public Access on all AWS S3 buckets, review and restrict bucket policies to limit cross-account access, and implement least privilege access controls to ensure only authorized users can access sensitive data. If you do have to grant public or cross-account access to any S3 bucket, please mark them as exceptions for this query, track them separately and regularly audit them. ",
    "description": "AWS S3 buckets with Block Public Access disabled that allow cross-account access to buckets and objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "restrict_public_buckets",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "e788066d-a114-4a00-a132-19b44833f0bb",
    "name": "AWS S3 buckets with potential public ACLs",
    "risk_explanation": "AWS S3 buckets with public Access Control Lists (ACLs) can lead to several significant risks:\n1. Unintended Data Exposure: Public ACLs can inadvertently expose sensitive data to anyone on the internet, leading to potential data breaches.\n2. Security Vulnerabilities: Buckets with public ACLs are more susceptible to malicious attacks, as they are easily discoverable and accessible by anyone, including potential attackers.\n3. Compliance Issues: Many data protection and privacy regulations (like GDPR, HIPAA) require strict control over data access. Public ACLs can lead to non-compliance and legal repercussions.\n4. Data Integrity Threats: If write permissions are public, unauthorized users could modify or delete data, compromising data integrity.\n5. Resource Misuse: Publicly accessible buckets can be misused for hosting inappropriate or unauthorized content, leading to additional costs and legal challenges.\n6. Reputational Damage: Data leaks or breaches resulting from public ACLs can harm an organization's reputation and erode customer trust.\n7. Cost Implications: Unrestricted access can lead to increased and unexpected usage, resulting in higher costs.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable Block Public Access and Block Public ACLs on all AWS S3 buckets, and regularly audit bucket permissions to ensure compliance. If you do have to grant public or cross-account access to any S3 bucket, please mark them as exceptions for this query, track them separately and regularly audit them. If you do have to grant public or cross-account access to any S3 bucket, please mark them as exceptions for this query, track them separately and regularly audit them.",
    "description": "AWS S3 buckets with Block Public Access disabled and Block Public ACLs disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "block_public_acls",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "block_public_access_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "7bc3b401-8bc4-40dd-9c39-068541d014f5",
    "name": "AWS S3 buckets without data encryption enabled",
    "risk_level": "LOW",
    "description": "AWS S3 buckets that don't have server side default encryption enabled",
    "risk_explanation": "Not enabling data encryption on AWS S3 buckets can lead to several issues:\n1. Increased Data Breach RiWithout encryption, data stored in S3 buckets is more vulnerable to being compromised, especially if there are security lapses or unauthorized access.\n2. Non-Compliance with Regulations: Many data protection laws and industry standards require data encryption at rest. Non-compliance can result in legal and financial penalties.\n3. Compromised Data Privacy: Sensitive information like personal data, financial records, or intellectual property is at risk of exposure when not encrypted, leading to privacy violations.\n4. Reduced Security Posture: Encryption is a fundamental aspect of a robust security strategy. Lack of encryption weakens the overall security posture of the cloud environment.\n5. Potential Loss of Customer Trust: In the event of a data breach, unencrypted data can lead to significant loss of customer trust and damage to the company's reputation.\n6. Lack of Defense in Depth: Encryption adds an essential layer of security. Without it, your data relies solely on perimeter defenses, which may not always suffice.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable server-side default encryption on all AWS S3 buckets to ensure data is encrypted at rest.",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "default_encryption_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "23f85342-00e9-469f-ba3c-1be1146b7804",
    "name": "AWS S3 buckets without replication enabled",
    "description": "AWS S3 buckets without replication enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "replication_rules_count",
                    "number_value": "0"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "82ee7abf-a00d-4a32-9fe2-50b39880fc35",
    "name": "AWS S3 buckets with requester payer enabled",
    "description": "AWS S3 buckets with requester pays for the request enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "request_payer",
                    "string_value": "Requester"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9f0d277e-d584-4216-ab8b-9acb9a127a21",
    "name": "AWS S3 buckets that allow ACLs",
    "risk_level": "LOW",
    "risk_explanation": "While ACLs can provide fine-grained control over access to AWS S3 buckets, they also introduce complexities and security risks, including misconfigurations, inconsistent permissions management, and challenges in audit and compliance.",
    "risk_remediation": "Adhering to the best identity security and governance practices, change Object Ownership to Bucket Owner Enforced.",
    "description": "AWS S3 buckets that allow ACLs (not recommended by AWS). To fix change Object Ownership to Bucket Owner Enforced.",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allows_acls",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "a6ba94bd-bbb2-4458-8dcf-32c38736b4d7",
    "name": "AWS IAM Groups with AWS S3 full access policy",
    "description": "AWS IAM Groups with AWS S3 full access policy enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "arn",
                    "string_value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "31f3d5fb-8c81-46a0-abe5-926875bbedd4",
    "name": "AWS IAM Users with AWS S3 full access policy",
    "description": "AWS IAM Users with AWS S3 full access policy enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "arn",
                    "string_value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "8cbd0f81-a2d8-4c64-a783-f499c92f1324",
    "name": "AWS IAM Roles with AWS S3 full access policy",
    "description": "AWS IAM Roles with AWS S3 full access policy enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "arn",
                    "string_value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "37ad90e3-5cb4-49c5-b253-3414e9afa0a9",
    "name": "AWS service principals with AWS S3 full access policy",
    "description": "AWS service principals with AWS S3 full access policy enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "arn",
                    "string_value": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "077fe311-5f78-4a28-bd7d-529eb3eef25b",
    "name": "AWS S3 buckets with bucket policies",
    "description": "AWS S3 buckets with bucket policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3Bucket",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3BucketPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ed98b1d3-ddff-4cfd-9ba7-4b97b2709510",
    "name": "AWS IAM Users with AWS S3 access granted via bucket policies",
    "description": "AWS IAM Users with AWS S3 access granted via bucket policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3BucketPolicyStatement"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c129192b-da45-4f50-b434-64426e726146",
    "name": "AWS IAM Roles with AWS S3 access granted via bucket policies",
    "description": "AWS IAM Roles with AWS S3 access granted via bucket policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3BucketPolicyStatement"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0e462d2c-721e-4bb9-8556-0bf611ad1150",
    "name": "AWS IAM Roles with permission boundary conflict",
    "description": "AWS IAM Roles with a permission boundary conflict. Meaning these roles have a permission boundary defined that restricts permissions otherwise granted by their policy.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AWS"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "conflict_permission_boundary",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5ca76ad1-9618-414f-aa16-5ad6b5310520",
    "name": "AWS IAM Roles attached to a managed policy and no permission boundary set",
    "risk_level": "LOW",
    "risk_explanation": "Managed policies often grant a broad range of permissions. If managed policies do not have a permission boundary, then roles attached to them can inherit excessive access rights. This violates the principle of least privilege, as roles may have more permissions than necessary, increasing the risk of unauthorized actions. These roles can inadvertently expose sensitive data, lead to data loss, and enable unauthorized access to resources. In a worst-case scenario, if a role is compromised, attackers may exploit its broad permissions to escalate privileges and compromise additional resources, leading to severe security breaches. Compliance violations are also a concern, as roles with overly permissive policies may fail to meet regulatory requirements, resulting in legal and financial penalties.",
    "risk_remediation": "Adhering to the best identity security and governance practices, set permission boundaries for AWS IAM roles to restrict the maximum permissions they can have, ensuring they adhere to the principle of least privilege.",
    "description": "AWS IAM Roles attached to a managed policy and no permission boundary set",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "permission_boundary_controlled",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "a6908508-a356-48e8-aad8-98e2bbbc14b5",
    "name": "AWS S3 bucket policies",
    "description": "Total number of AWS S3 bucket policies that are defined directly on a resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3BucketPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "51ad16e4-db5d-4508-a960-11ae51ce5916",
    "name": "AWS IAM Service Control Policies (SCP)",
    "description": "Total number of AWS IAM Service Control Policies (SCP)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServiceControlPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6b712cc1-ad02-4592-a6f8-bad7e2b61332",
    "name": "AWS IAM Policies updated recently",
    "description": "Total number of AWS IAM Policies updated recently",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "updated_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2b175d26-97c5-4116-a9a4-c9ea7833c2b7",
    "name": "AWS managed IAM Policies",
    "description": "Total number of AWS managed IAM Policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9bbb5b89-2305-4a3f-a09e-6ce0c1818f35",
    "name": "AWS customer managed AWS IAM Policies",
    "description": "AWS IAM Policies managed and defined by AWS customers",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4659c617-58fe-405d-9e7a-1ce5c6e5ee97",
    "name": "AWS IAM inline policies",
    "description": "AWS IAM inline policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "inline",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "15a35eec-9855-4a7c-a165-98729c43e449",
    "name": "Azure RBAC Roles",
    "description": "Total number of Azure RBAC Roles configured in all your tenants",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "86f584a8-208e-423a-b89a-2f381144b8f0",
    "name": "Azure Deny Assignments",
    "description": "Total number of Azure Deny Assignments configured in all your tenants",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureDenyAssignment",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "87133daf-7a4e-4dd3-ba7a-a36228d7455e",
    "name": "Custom Azure RBAC Roles with no User assigned",
    "risk_level": "LOW",
    "risk_explanation": "Custom roles may contain a set of permissions and privileges that were defined for specific use cases but are not currently in use. These unused privileges can be exploited if the role is assigned to a user in the future, leading to unintended access to resources. Unused custom roles can complicate compliance efforts, as they may introduce unnecessary complexity and uncertainty about access control and auditing.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, delete or disable custom Azure RBAC roles with no user assigned to minimize the risk of unintended access and simplify compliance efforts.",
    "description": "Custom Azure RBAC Roles with no user assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "5a8d8e02-6f37-4fe0-859d-9f5f93b4b0dd",
    "name": "Azure AD Users mapped to Azure RBAC Roles",
    "description": "Azure AD Users that can assume one or more Azure RBAC roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b84e7ea9-e4f0-4e5f-85a6-58baac5ade49",
    "name": "Azure AD Groups mapped to Azure RBAC Roles",
    "description": "Azure AD Groups mapped to Azure RBAC Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "66f24c7a-b0e7-4582-9c6b-7a33d1972a88",
    "name": "Azure built-in RBAC Roles assigned to Users",
    "description": "Azure built-in RBAC Roles assigned to Azure AD Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a940c06b-07d8-4759-bd0b-692171970bb7",
    "name": "Azure custom roles assigned to Users",
    "description": "Azure custom roles assigned to Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5bb36792-0ed1-428b-a079-8a18a72ba270",
    "name": "Azure AD Service Principals (Enterprise Apps) mapped to RBAC Roles",
    "description": "Azure AD Service Principals (Enterprise Apps) that can assume one or more Azure RBAC Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "e1e2aa20-b7c4-466a-a9b2-732109c7a638",
    "name": "Azure AD non-guest Users",
    "description": "Total number of Azure AD non-guest Users configured in your AD",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "db4bc966-538e-4389-b5c9-d0a5a02b9764",
    "name": "Azure AD guest Users",
    "description": "Azure AD Users that are of type Guest, meaning they are external",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "9cc17111-0f5d-485d-8cea-bb5b6f648c65",
    "name": "Azure RBAC Roles not connected to an Azure AD User",
    "description": "Azure RBAC roles not connected to an Azure AD User",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "08e10c77-8de1-43a7-b26b-4d4d2fec7ae3",
    "name": "Azure RBAC Roles not connected to an Azure AD Group",
    "description": "Azure RBAC Roles not connected to an Azure AD Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "893ef5e1-53c3-42c3-a712-bb84f8cef382",
    "name": "Azure AD Tenants",
    "description": "Total number of Azure AD Tenants",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureTenant",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "71e0dd5e-57a0-4a26-80d0-694cf5182c5b",
    "name": "Azure Subscriptions",
    "description": "Total number of Azure Subscriptions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureSubscription",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f1b0c459-a0f3-42d9-af12-657e6c183215",
    "name": "Azure RBAC Permissions",
    "description": "Total number of Azure RBAC Permissions associated with your Azure Tenants",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureAssignmentPermissions",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5c00bed9-e8d4-40c0-85c7-bfec2a3da218",
    "name": "Azure AD nested Groups",
    "description": "Azure AD Groups that belong to one or more Azure AD Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e777e2b0-ccc0-408a-a934-f3df060a5182",
    "name": "AWS Redshift Clusters",
    "description": "Total number of Redshift Clusters in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftCluster",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0d209d7b-012b-47e3-8178-47a2c928ea9c",
    "name": "AWS Redshift Databases",
    "description": "Total number of Redshift Databases in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftDatabaseInstance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "447b311e-e383-48fa-954c-91ecd612ba1c",
    "name": "AWS Redshift Tables",
    "description": "Total number of Redshift Tables in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b0c47f59-a7fb-49ef-b02c-74501521f5e9",
    "name": "AWS DynamoDB Tables",
    "description": "Total number of AWS DynamoDB Tables in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9ae5e5d5-88be-4b15-93a1-ded89fc1d597",
    "name": "AWS DynamoDB Secondary Indexes",
    "description": "Total number of AWS DynamoDB Secondary Indexes in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBSecondaryIndex",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "bcf3986f-9988-4f49-af68-9962069cb78d",
    "name": "AWS DynamoDB Global Secondary Indexes",
    "description": "Total number of AWS DynamoDB Global Secondary Indexes in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBSecondaryIndex",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "global",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3056b16f-3fa3-41fa-9ef9-cd679e0c62e8",
    "name": "AWS DynamoDB Local Secondary Indexes",
    "description": "Total number of AWS DynamoDB Local Secondary Indexes in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBSecondaryIndex",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "global",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b87941d3-b788-45f0-8717-04d79ca217f8",
    "name": "AWS DynamoDB Streams",
    "description": "Total number of AWS DynamoDB Streams in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "DynamoDBStream",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "870d6477-688e-480a-ac77-25fb9d7e78fe",
    "name": "AWS EMR Clusters",
    "description": "Total number of AWS EMR Clusters in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRCluster",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "da610940-6b9a-4d19-9e59-91be6cc4c1e2",
    "name": "AWS EMR Nodes",
    "description": "Total number of AWS EMR Nodes in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRNode",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f24b39f9-bfb2-49e9-b942-1461aaa85843",
    "name": "AWS EMR Notebook executions",
    "description": "Total number of AWS EMR Notebook executions in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRNotebookExecution",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "503f110a-a9f2-454d-aa96-7042ce561d12",
    "name": "AWS EMR studios",
    "description": "Number of AWS EMR Studios in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "EMRStudio",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "98e38c1b-da27-4b52-a229-84f1b7ed2135",
    "name": "AWS IAM Service Principals",
    "description": "Total number of AWS IAM Service Principals",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "46402b46-37cc-4006-911b-d7cf6e928717",
    "name": "Azure AD Users with Azure AD roles",
    "description": "Azure AD Users that have Azure AD roles attached to them",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "492d3d08-2247-4a16-a526-d0438e13f75b",
    "name": "Azure AD Security Admins",
    "description": "Azure AD Users that have the Security Administrator role assigned to them. Meaning they can read Security information and reports, and manage configuration in Azure AD and Office 365.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Security Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ed51487f-535b-466e-b06b-54897cb13059",
    "name": "Azure AD guest Users assigned 'Security Administrator' role",
    "description": "Azure AD guest Users that have the Security Administrator role assigned to them. Meaning they can read Security information and reports, and manage configuration in Azure AD and Office 365.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Security Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b03883ae-2a56-47f5-92ff-4bf223786d16",
    "name": "Azure AD Users that are deactivated but assigned 'Security Administrator' role",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but have the 'Security Administrator' role assigned to them. Meaning they can read Security information and reports, and manage configuration in Azure AD and Office 365.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Security Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d8eb1368-a85e-4cda-9dc0-da432bea0cfb",
    "name": "Azure AD with 'Privileged Role Administrator' role",
    "description": "Azure AD Users that have the Privileged Role Administrator role assigned to them. Meaning they can manage role assignments in Azure AD, and all aspects of Privileged Identity Management.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Privileged Role Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b37f3cc6-ec11-4508-98c0-00828aa876cf",
    "name": "Azure AD Users with 'Privileged Role Administrator' Role that are deactivated",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but have the Privileged Role Administrator role assigned to them. Meaning they can manage role assignments in Azure AD, and all aspects of Privileged Identity Management.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Privileged Role Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "560e5f8b-9295-4bc8-a6db-3c90a1bff088",
    "name": "Azure AD Guest Users with 'Privileged Role Administrator' Role",
    "description": "Azure AD Guest Users that have the Privileged Role Administrator role assigned to them and these users created more than 30 days ago. Meaning they can manage role assignments in Azure AD, and all aspects of Privileged Identity Management.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Privileged Role Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "cd103cbf-b9a2-4139-88ae-6da239f5b507",
    "name": "Azure AD Groups with Redshift Superuser permissions",
    "description": "Azure AD Groups with Redshift Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "0d57108b-1302-419c-8b8b-b3f66bb76996",
    "name": "Azure AD Users assigned to 'Owner' role",
    "description": "Azure AD Users assigned the 'Owner' role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "29246f02-6e19-4e1e-8c0b-d5417c9fb409",
    "name": "Azure AD Users assigned to 'Contributor' role",
    "description": "Azure AD Users assigned to 'Contributor' role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Contributor"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "14300e0a-c3bf-4c0b-8b11-edbe61a201cd",
    "name": "Azure AD Users assigned to 'Reader' role",
    "description": "Azure AD Users assigned to 'Reader' role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Reader"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e6cde647-4be9-41cf-a8dd-e7d834bc705f",
    "name": "Azure AD Users assigned to 'User Access Administrator' role",
    "description": "Azure AD Users assigned to 'User Access Administrator' role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "User Access Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fdebee0d-ef73-4ae4-a035-af211af9538e",
    "name": "Azure RBAC roles that can be assumed by Azure AD Admins",
    "description": "Azure RBAC Roles that can be assumed by Azure AD Administrators",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3c622a72-f46c-4920-83eb-615b0c413e0a",
    "name": "Azure Built-In Roles",
    "description": "Total number of Azure Built-In Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8a92dbe5-867d-4873-8802-c51a04a36264",
    "name": "Azure Custom Roles",
    "description": "Total number of Azure Custom Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a0fa92f0-f5cb-4496-9961-65134ce18f21",
    "name": "Azure AD Users assigned to custom roles",
    "description": "Azure AD Users assigned to custom roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "customer_managed",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "azure_tenant_id",
                          "string_value": "$COOKIE_AZURE_TENANT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "86873e1e-ebe7-4f6a-b26a-ccead923bb17",
    "name": "AWS RDS Aurora Clusters",
    "description": "Total number of AWS RDS Aurora Clusters in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsCluster",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d3ab3612-7dc9-4f9e-9183-40387e6abdf4",
    "name": "AWS RDS Aurora MySQL Clusters",
    "description": "Total number of AWS RDS Aurora MySQL Clusters in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsCluster",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "engine",
                    "string_value": "aurora-mysql"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a4d77dbb-b09a-4bab-a906-8573405b7297",
    "name": "AWS RDS MySQL Instances",
    "description": "Total number of AWS RDS MySQL Instances in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlInstance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "96b4996d-096a-4b19-9e64-aaf01c4a26fb",
    "name": "AWS RDS MySQL Services",
    "description": "Total number of AWS RDS MySQL Services in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMysqlService",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "386093e1-b7ec-4af6-8754-f5224e5f93e7",
    "name": "AWS RDS MySQL Databases",
    "description": "Total number of AWS RDS MySQL Databases in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlDatabase",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f429a2b7-1647-403f-ab9d-dc7c38cba0da",
    "name": "AWS RDS MySQL Tables",
    "description": "Total number of AWS RDS MySQL Tables in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "1464200d-03a2-4bea-97d7-234c7786cea6",
    "name": "MySQL Instances",
    "description": "Total number of standalone MySQL instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlInstance"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6230f6ab-e8c0-4e82-bf7c-843928d2e918",
    "name": "MySQL Databases",
    "description": "Total number of standalone MySQL Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlDatabase"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3e4d2b26-0417-47c6-ad4c-1521ec9c53b3",
    "name": "MySQL Tables",
    "description": "Total number of standalone MySQL Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlTable"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5dbb23a0-c45f-4c32-81ca-44ce4d869ed1",
    "name": "MySQL Super User Instances",
    "description": "MySQL Super Users can perform any kind of operation in MySQL instance",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlUserInstance",
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "full_admin"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "write_permissions",
      "privileged_access"
    ]
  },
  {
    "id": "882f78dc-f2b4-41b4-80d2-cff3aa3016a1",
    "name": "MySQL User Instances with write permissions",
    "description": "MySQL users with data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlUserInstance"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlInstance"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "d0371e99-6a83-4a4f-a6be-1813bc2845e6",
    "name": "MySQL User Instances with delete permissions",
    "description": "MySQL users with data delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "MySqlUserInstance"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MySqlInstance"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ed4b19d1-d7a5-458a-bd21-037d99078c70",
    "name": "AWS RDS Postgres Instances",
    "description": "Total number of AWS RDS Postgres Instances in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresInstance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "46c73a21-6f89-49b9-a74a-15e4338f9a95",
    "name": "AWS RDS Postgres Services",
    "description": "Total number of AWS RDS Postgres Services in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresService",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ce4492fa-a10a-4469-a5ea-cba860b153b4",
    "name": "AWS RDS Postgres Databases",
    "description": "Total number of AWS RDS Postgres Databases in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresDatabase",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "47a95448-1cc7-4991-b722-be66996b57f4",
    "name": "AWS RDS Postgres Schemas",
    "description": "Total number of AWS RDS Postgres Schemas in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresSchema",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c66e5055-edca-4da2-b063-cdbef1aec7b6",
    "name": "AWS RDS Postgres Tables",
    "description": "Total number of AWS RDS Postgres Tables in your AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b4be392d-cc48-4d74-8163-419454d38dd9",
    "name": "Azure Roles with 'NOT' actions",
    "description": "Azure Roles with 'NOT' actions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "not_actions"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1
    },
    "result_type": "number"
  },
  {
    "id": "688c7779-c95e-42c1-8b05-2aa064b8c33d",
    "name": "Azure AD Deny Assignments with exclude principals",
    "description": "Azure AD deny assignments with exclude principals",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureDenyAssignment",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "exclude_principals"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9d1662b2-666f-45a3-8105-c0de01b418de",
    "name": "Azure AD Deny Assignments that apply to child scopes",
    "description": "Azure AD deny assignments that apply to child scopes",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureDenyAssignment",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "apply_to_child_scopes",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4441f6fd-ca29-4c0f-86e7-d30c3bc8d49b",
    "name": "Azure AD Deny Assignments with 'NOT' actions",
    "description": "Azure AD deny assignments with 'NOT' actions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureDenyAssignment",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAssignmentPermissions",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "not_actions"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6fa88f75-d956-421a-86a7-19e35ec6f1ae",
    "name": "Azure Roles with data actions",
    "description": "Azure Roles with data actions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "data_actions"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e35c2bb4-c112-4726-b35d-962c4480e7bf",
    "name": "Azure AD Deny Assignments with data actions",
    "description": "Azure AD deny assignments with data actions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureDenyAssignment",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAssignmentPermissions",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "data_actions"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "37906cd4-fdd4-4d3d-aff2-0e9e19f822af",
    "name": "Azure Roles with Role Creation and Assignment Permissions",
    "description": "Azure Roles with Microsoft.Authorization/roleassignments/write and Microsoft.Authorization/roledefinitions/write permission. This means the role can grant any permission to anyone.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRoleAssignment",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAssignmentPermissions",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "Microsoft.Authorization/roleassignments/write"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "Microsoft.Authorization/roledefinitions/write"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "separation_of_duty"
    ]
  },
  {
    "id": "a1609950-0dd0-4b58-9b70-3625ebb9f688",
    "name": "Azure Roles with Policy Creation and Assignment Permissions",
    "description": "Azure Roles with Microsoft.Authorization/policyassignments/write and Microsoft.Authorization/policydefinitions/write permission. This means the role can grant any permission to anyone.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRoleAssignment",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAssignmentPermissions",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "Microsoft.Authorization/policyassignments/write"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "Microsoft.Authorization/policydefinitions/write"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "separation_of_duty"
    ]
  },
  {
    "id": "be683700-ec63-46f5-8529-1867c9b956bf",
    "name": "AWS Security Groups",
    "description": "Total Count of AWS Security Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2SecurityGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0a089692-d7eb-494a-8b42-45b1e6bbfac8",
    "name": "AWS Security Groups allowing HTTP with port 80 inbound traffic",
    "risk_level": "LOW",
    "risk_explanation": "Allowing inbound traffic on port 80 (HTTP) in AWS Security Groups can lead to several issues:\n1. Unencrypted Data Transmission: HTTP traffic is unencrypted, making it susceptible to interception and eavesdropping. Sensitive data can be easily compromised.\n2. Vulnerability to Attacks: Port 80 is commonly targeted for attacks like SQL injection, cross-site scripting, and DDoS attacks, as it's the default port for web traffic.\n3. Compliance Risks: Many security standards and regulations require encrypted transmissions of data, especially personally identifiable information (PII). Allowing HTTP can lead to non-compliance.\n4. Potential for Data Tampering: Unencrypted traffic can be altered or tampered with during transit, leading to data integrity issues.\n5. Increased Exposure to Threats: Open port 80 increases the attack surface, providing an entry point for potential attackers to exploit vulnerabilities.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict inbound traffic on port 80 and enforce HTTPS (port 443) for encrypted data transmission.",
    "description": "AWS Security Groups with inbound rules that allow HTTP (port 80) traffic",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2SecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_inbound_traffic",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2654ca5f-804e-4798-87f9-7dcf870aedaa",
    "name": "AWS Security Groups with SSH or RDP inbound traffic from anywhere",
    "risk_level": "LOW",
    "risk_explanation": "1. **Unauthorized Access**: Allowing SSH or RDP traffic from anywhere means that anyone on the internet can attempt to connect to the associated instances. This increases the risk of unauthorized access attempts and potentially successful breaches if weak or default credentials are used.\n\n2. **Brute Force Attacks**: Cybercriminals often attempt brute force attacks to guess SSH or RDP credentials. Allowing unrestricted access makes it easier for attackers to launch such attacks, potentially compromising the instance's security.\n\n3. **Exposure to Scanning**: Internet-facing SSH or RDP ports are susceptible to scanning by automated bots searching for open ports. Excessive scanning can increase the exposure of your instances to potential threats.\n\n4. **Data Exfiltration**: Once an attacker gains unauthorized access, they can exfiltrate sensitive data, compromise the system's integrity, or launch further attacks from within your environment.\n\n5. **Security Best Practices Violation**: Allowing SSH or RDP from anywhere goes against security best practices, which recommend restricting access to only trusted IP addresses or networks, implementing the principle of least privilege.\n\n6. **Compliance Concerns**: In regulated industries, unrestricted access can lead to compliance violations, as it does not adhere to security and privacy regulations that require strict access controls.\n\n7. **Resource Misuse**: If SSH or RDP ports are open to the internet, it can lead to resource misuse, such as excessive resource consumption or denial-of-service attacks.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict SSH and RDP access to specific trusted IP addresses or networks, implement multi-factor authentication (MFA), and regularly review and update security group rules to ensure compliance with security policies.",
    "description": "AWS Security Groups with inbound rules that allow SSH or RDP traffic from anywhere",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2SecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "ssh_and_rdp_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "all_inbound_route_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "356720e6-57bd-4096-a012-0023199eba25",
    "name": "AWS Security Groups that allow all inbound traffic",
    "risk_explanation": "Allowing all inbound traffic in AWS Security Groups poses significant risks:\n1. Increased Attack Surface: Open access makes it easier for malicious actors to probe and attack the system, exploiting any vulnerabilities.\n2. Potential for Unauthorized Access: Without restrictions, there's a higher risk of unauthorized users gaining access to resources, which can lead to data breaches or system compromise.\n3. Compromised Network Security: It violates the principle of least privilege, where only necessary traffic should be allowed to ensure tight network security.\n4. Difficulties in Monitoring and Tracking: It becomes challenging to monitor and identify malicious traffic when all traffic is permitted, complicating security analysis and response.\n5. Compliance Issues: Many regulatory standards require strict control over network access, so open security groups might result in non-compliance and associated penalties.\n6. Resource Misuse: Unrestricted access can lead to misuse of resources, such as DDoS attacks or hosting unauthorized content, potentially incurring additional costs and legal liabilities.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict inbound traffic in AWS Security Groups to only necessary IP addresses and ports, implement the principle of least privilege, and regularly review and update security group rules to ensure compliance and minimize attack surface.",
    "description": "AWS Security Groups with inbound rules that allow all traffic (0.0.0.0/0 or ::/0)",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2SecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "all_inbound_route_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ],
    "risk_level": "CRITICAL"
  },
  {
    "id": "f74bb89c-5aa1-4f61-a5d0-c30b92d13f65",
    "name": "AWS Security Groups with all outgoing traffic enabled",
    "risk_explanation": "Allowing all outgoing traffic in an AWS Security Group can be risky for several reasons:\n1. Security Vulnerabilities: Open outgoing traffic can expose your system to various security vulnerabilities. If a server or instance is compromised, it can be used to launch further attacks, communicate with command and control servers, or exfiltrate sensitive data.\n2. Lack of Control and Monitoring: With unrestricted egress traffic, it becomes challenging to monitor and control the flow of information. This can make it difficult to detect suspicious activities, such as data exfiltration or unauthorized communication with external servers.\n3. Compliance Issues: Many compliance standards require strict control and monitoring of both incoming and outgoing network traffic. Allowing all outgoing traffic might violate these requirements, leading to potential legal and regulatory issues.\n4. Internal Threats: By not restricting outgoing traffic, you also risk exposure to internal threats. Malicious or compromised internal entities can misuse the network to transmit sensitive data outside the organization.\n5. Difficult Incident Response: In the event of a breach, unrestricted egress traffic can complicate incident response and forensic activities, as it can be challenging to determine what information was transmitted outside the network.\n6. Best Practices Violation: Following the principle of least privilege and network segmentation are considered best practices in network security. Allowing all outgoing traffic goes against these principles, leading to a less secure environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict outgoing traffic in AWS Security Groups to only necessary destinations and ports, implement egress filtering, and regularly review and update the rules to ensure compliance with security policies and standards.",
    "risk_level": "LOW",
    "description": "AWS Security Groups with all traffic enabled in the outbound rule. This is a default rule in new SGs, however it creates significant risk in that threat actors are able to reach out to external command and control systems without limit.",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2SecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "all_outbound_traffic_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "86267977-3c6b-443f-ad22-a3179e625129",
    "name": "AWS EC2 Instances",
    "description": "Total number of EC2 Instances in all regions",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2Instance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "611a4b4f-da6e-4345-b052-878fc4951590",
    "name": "AWS VPCs",
    "description": "Total number of AWS VPCs in all regions",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2VPC",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "679114f8-08a1-41d5-82a3-042f2c6c6623",
    "name": "AWS IAM Roles that can be assumed by EC2",
    "description": "AWS IAM Roles that can be assumed by EC2",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "services_assumed_by",
                    "string_value": "ec2.amazonaws.com"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e8ec9a6f-b422-422c-b46d-c9b99c389ddb",
    "name": "AWS EC2 Instances that can attach to IAM Roles and change attached IAM Roles",
    "risk_level": "LOW",
    "risk_explanation": "1. **Privilege Escalation Potentially Causing Data Exposure or Unauthorized Actions**: If an attacker gains access to an EC2 instance with this capability, they can potentially change the attached IAM role to one with elevated privileges, granting them unauthorized access to resources and actions they would not normally have. With elevated privileges, attacker can cause sensitive data exposure or perform actions beyond the scope of their initially assigned permissions.\n\n2. **Lateral Movement**: Once an attacker has compromised an EC2 instance, they can use it as a pivot point to move laterally within the AWS environment, potentially compromising additional resources and escalating their privileges further.\n\n3. **Compliance Concerns**: This practice may lead to compliance violations in regulated industries.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict EC2 instances from attaching or changing IAM roles by implementing least privilege principles, using IAM policies to limit permissions, and enabling logging and monitoring to detect unauthorized changes.",
    "description": "AWS EC2 Instances that can attach to IAM Roles and change attached IAM Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2Instance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "Allow"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "document",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "services_assumed_by",
                          "string_value": "ec2.amazonaws.com"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "nonhuman_identity"
    ]
  },
  {
    "id": "530fc4af-4fed-43f3-bcd7-8ec2c065ffd1",
    "name": "AWS EC2 Instances that can list buckets and read all bucket objects",
    "description": "AWS EC2 Instances that can list buckets and read all bucket objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2Instance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "s3:ListBucket"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "s3:GetObject"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3f3ad95f-7e5f-44aa-8e41-9be8864f3a4a",
    "name": "AWS IAM Roles that can be assumed by EC2 and have an AWS managed policy attached",
    "description": "AWS IAM Roles that can be assumed by EC2 and have an AWS managed policy attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "services_assumed_by",
                    "string_value": "ec2.amazonaws.com"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e679bda8-2f29-46c3-bf44-6cc36b39ff96",
    "name": "AWS IAM Policies granting access to '*' resources",
    "risk_level": "LOW",
    "risk_explanation": "Policies that grant access to '*' (wildcard) resources are a significant cybersecurity risk because:\n\n1. **Excessive Privileges**: Such policies grant broad and often unrestricted access to all resources within a specific AWS service often violating the principle of least privilege. Excessive privileges thus acquired can lead to unintended data exposure, misuse of resources or unauthorized accesses.\n\n2. **Escalation of Privilege**: An attacker who gains access to an account with overly permissive policies can exploit them to escalate their privileges and potentially compromise the entire AWS environment.\n\n3. **Compliance Violations**: In regulated industries, policies granting access to '*' resources can lead to compliance violations.",
    "risk_remediation": "Adhering to the best identity security and governance practices, replace wildcard ('*') resource policies with more specific resource-level permissions, ensuring adherence to the principle of least privilege and conducting regular audits to identify and remediate overly permissive policies.",
    "description": "AWS IAM Policies that allow certain action on all resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "Allow"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "bdbad2e5-0c29-4521-87d3-dafeb6332a91",
    "name": "AWS IAM Roles with a managed policy but no permission boundary set",
    "description": "AWS IAM Roles with a managed policy but no permission boundary set",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "permission_boundary_controlled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "customer_managed",
                          "bool_value": false
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "inline",
                          "bool_value": false
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4e45e5d0-d36f-449b-b4ff-9a11954f07ef",
    "name": "AWS Organizational Accounts",
    "description": "Total number of AWS Accounts that are part of an organization (requires management account configured)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsOrganizationalAccount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b6dfcba9-c5f5-4c3f-933f-76d2e4946322",
    "name": "AWS Organizational Units",
    "description": "Total number of AWS Organizational Units (requires management account configured)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsOrganizationalUnit"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d67a57ac-abf3-464e-bbbf-f2f86bbcd67a",
    "name": "AWS Accounts that are managed",
    "description": "Total number of AWS Accounts that are configured and managed",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "49057bdc-e1b3-4f68-8d70-7a6b094778ec",
    "name": "AWS Organizational Accounts that do not have sub accounts",
    "description": "AWS Organizational Accounts that do not have sub accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsOrganizationalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsAccount"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4b061e9c-1df1-47ce-a4a7-61f59f5ffb7e",
    "name": "AWS S3 Bucket Policies",
    "description": "Total number of AWS S3 Bucket Policies",
    "value_query": {
      "from_node_types": [
        {
          "type": "S3BucketPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cb54ff7c-a6fb-4d75-89fa-e812cb11a40b",
    "name": "AWS IAM Users with an AssumeRole policy",
    "description": "AWS IAM Users with an sts:AssumeRole policy attached, meaning they can assume roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "has_assume_role",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "aa97de8f-ff42-4e6c-b647-3387230f66c1",
    "name": "AWS IAM Groups with an AssumeRole policy",
    "description": "AWS IAM Groups with an AssumeRole policy attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "has_assume_role",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d49306ca-0c31-4b54-b81f-097f947a0b5b",
    "name": "AWS IAM Roles with an AssumeRole policy",
    "description": "AWS IAM roles with an sts:AssumeRole policy attached, meaning they can assume roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "has_assume_role",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d8f14989-13f1-4c14-b2e4-538949e04a16",
    "name": "AWS IAM Users with a permission boundary defined",
    "description": "AWS IAM Users with a permission boundary defined",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "permission_boundary_controlled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "defbf861-1ebf-4180-bbfc-ce18d084a661",
    "name": "AWS IAM Roles with a permission boundary defined",
    "description": "AWS IAM Roles with a permission boundary defined",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "permission_boundary_controlled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "33f0bf6e-2de1-494b-9cfa-47d1d234900e",
    "name": "Okta Users with Trino access",
    "description": "Okta Users with access to one or more Trino catalogs",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoCatalog"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b53a9637-748d-43a1-b708-1b4e10985fa9",
    "name": "Okta Users with Trino write permissions",
    "description": "Okta Users with Trino data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "233e93b3-ef93-4863-97d4-74cccf62a465",
    "name": "Okta Users with Trino delete permissions",
    "description": "Okta Users with delete permissions on Trino",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "c586cced-70de-4184-90da-f5ff55c6af60",
    "name": "Trino Local Users",
    "description": "Total number of local Users on Trino",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c7d8de3a-987b-430e-91cd-d0c7c757e11f",
    "name": "Trino Local Users with all permissions",
    "description": "Trino Local Users with all permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "All"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "e5ec8e98-2b3c-414b-bf11-8cb668082071",
    "name": "Trino Local Users with delete permissions",
    "description": "Trino Local Users with delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "Delete"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "6db4dde1-f4a0-4624-9f78-5cbb6ce97afa",
    "name": "Trino Local Users with write permissions",
    "description": "Trino Local Users with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "TrinoGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "288b1122-3a54-4658-a52a-54350d87aa7f",
    "name": "Trino Instances",
    "description": "Total number of Trino instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoInstance"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c448fd59-dc9d-4730-90ee-5bf55ca783ea",
    "name": "Trino Catalogs",
    "description": "Total number of Trino catalogs",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoCatalog"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "957827a8-5c55-4348-ba06-7a8a68f58cff",
    "name": "Trino Schemas",
    "description": "Total number of Trino schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoSchema"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d0180f51-c6ed-40ab-8624-92b263d09e81",
    "name": "Trino Tables",
    "description": "Total number of Trino tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoTable"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9f3c4e8f-4b7e-4aca-897c-02426b754096",
    "name": "AWS KMS Customer Managed Keys",
    "description": "Total number of AWS KMS CMKs in all regions combined",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "91331405-1da8-4bd5-ad8b-44603afc51f7",
    "name": "AWS KMS enabled Customer Managed Keys",
    "description": "Total number of CMKs in all regions that are in the enabled state",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cmk_status",
                    "string_value": "Enabled"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "e9778b9d-b61a-4e3a-b04d-fe8b0bc5a44f",
    "name": "AWS KMS disabled Customer Managed Keys",
    "description": "Total number of CMKs in all regions that are in the disabled state",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cmk_status",
                    "string_value": "Disabled"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3325bee3-16e0-4a14-8f10-a583e39bde06",
    "name": "AWS KMS Customer Managed Keys with IAM policies disabled",
    "description": "AWS KMS CMKs with IAM policies disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "enabled_user_policy_actions",
                    "not": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d3951ae5-7e5a-4e38-bfeb-022f0e9a4273",
    "name": "AWS KMS Customer Managed Symmetric Keys",
    "description": "AWS KMS CMKs with key type spec of symmetric",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cmk_symmetric",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3cd17fcd-e85f-43c1-8c47-5816b06147b7",
    "name": "AWS KMS Customer Managed Asymmetric Keys",
    "description": "AWS KMS CMKs with key type spec of asymmetric",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cmk_symmetric",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "66f00986-3b9e-4664-9ab6-b0e20e2ff78a",
    "name": "AWS KMS CMKs in unavailable state",
    "description": "Total number of CMKs in all regions that are in the unavailable state",
    "value_query": {
      "from_node_types": [
        {
          "type": "KmsCmk",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cmk_status",
                    "string_value": "Unavailable"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d217b34a-3700-441d-8c02-4d89e6127860",
    "name": "Snowflake Accounts",
    "description": "Total number of Snowflake Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeAccount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "48c43d24-0709-40a9-b9cc-833ee5328611",
    "name": "Snowflake Users",
    "description": "Total number of Snowflake local Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "68858adb-ff83-4400-809a-1fa1dd9916c1",
    "name": "Snowflake Users with password authentication",
    "description": "Snowflake Users with password as one authentication method",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_password",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "77cccf06-8d43-4ee3-9f6b-931885b497f1",
    "name": "Snowflake Users with key pair authentication",
    "description": "Snowflake Users with key pair as one authentication method",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_rsa_key",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0e78855f-4cfb-47aa-a757-76e0dd86f491",
    "name": "Snowflake Users with account Admin permissions",
    "description": "Local Users with ACCOUNTADMIN role in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "full_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "1c41f3c9-1ea8-4236-b24f-95bfecd6f099",
    "name": "Snowflake Users with delete permissions",
    "description": "Users with delete permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "662e5cf5-8abd-4332-af2a-2f93f26df38e",
    "name": "Snowflake Users with write permissions",
    "description": "Users with write permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "4989d80f-cf04-4dd2-8ae8-e5970e83b584",
    "name": "Snowflake Roles",
    "description": "Total number of Snowflake Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b6e34191-4833-4b66-afc7-2dffb68c43ea",
    "name": "Snowflake Roles with ACCOUNTADMIN permissions",
    "description": "Snowflake Roles with ACCOUNTADMIN permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "full_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "4c172af7-ffbd-4349-8717-3a0fb586448e",
    "name": "Snowflake Roles with delete permissions",
    "description": "Snowflake Roles with delete permissions assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "fa03cb1d-53fd-4373-bd33-791c7691dba5",
    "name": "Snowflake Roles with write permissions",
    "description": "Snowflake Roles with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "7e1bd134-0525-4fc3-8811-331bde1b24dc",
    "name": "Snowflake Databases",
    "description": "Total number of Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeDatabase"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fa6b8241-b06e-49d9-9707-bcb0f94bcd87",
    "name": "Snowflake Schemas",
    "description": "Total number of Snowflake Schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeSchema"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "93485b72-66a2-42f4-b1b5-2a1b2eb4f533",
    "name": "Snowflake Tables",
    "description": "Total number of Snowflake Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeTable"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "24ee3600-4269-4caf-ba5f-d6e1c954c6c2",
    "name": "Snowflake Views",
    "description": "Total number of Snowflake Views",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeView"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "77035966-ca20-4281-8faa-f416e8fb2545",
    "name": "Snowflake Users created in the last 24 hours",
    "description": "Snowflake Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9dcc52f4-7c93-447d-8702-651747da3e29",
    "name": "Snowflake Roles created in the last 24 hours",
    "description": "Snowflake Roles created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "23615e93-17b2-4eed-b55c-cf564d1994a6",
    "name": "Snowflake Databases created in the last 24 hours",
    "description": "Snowflake Databases created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeDatabase",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9f9f988e-01b8-4f88-a148-5c1774e848bf",
    "name": "Snowflake Schemas created in the last 24 hours",
    "description": "Snowflake Schemas created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeSchema",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d3620b38-7efc-4ad2-91f3-19afe77c0995",
    "name": "Snowflake Tables created in the last 24 hours",
    "description": "Snowflake Tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "be593f6d-49e4-45e3-b26e-092a453d5936",
    "name": "Snowflake Views created in the last 24 hours",
    "description": "Snowflake Views created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeView",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8da7a47c-1484-486d-8b00-64a77d5d822b",
    "name": "Snowflake Users with MFA disabled and password authentication",
    "risk_level": "CRITICAL",
    "risk_explanation": "With Multi-factor authentication (MFA) turned off user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Snowflake, therefore, recommends using federated single sign-on (SSO) while using passwords for only certain use cases such as for service accounts and users with the Snowflake ACCOUNTADMIN system role. As a result, these accounts are likely to be privileged accounts with MFA disabled. Hence, critical risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable MFA for all user accounts, implement federated SSO, and restrict password authentication to specific use cases such as service accounts and users with the Snowflake ACCOUNTADMIN system role.",
    "description": "Snowflake Users with MFA disabled and password authentication",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "has_password",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_disabled",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "68af7c28-b5a5-4570-a46f-4450066a091a",
    "name": "Snowflake Users with OWNERSHIP privilege on an object",
    "description": "Snowflake Users with OWNERSHIP privilege on an object",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "OWNERSHIP"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "caf558c8-36a4-4235-8cc5-17df1c910b6f",
    "name": "Okta Users with Snowflake access",
    "description": "Okta Users with access to one or more Snowflake databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "80ee56fd-26cd-4a1b-9a2f-6e74d92b89d9",
    "name": "Okta Users with Snowflake write permissions",
    "description": "Okta Users with Snowflake data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "e77dda5b-90a8-497c-8a45-14481ec0b1b0",
    "name": "Okta Users with Snowflake delete permissions",
    "description": "Okta Users with delete permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "7a9d8348-9595-492e-b18d-2586db88e7d0",
    "name": "Okta Users with Snowflake ACCOUNTADMIN permissions",
    "description": "Okta Users with ACCOUNTADMIN permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "57966280-abc8-402e-8299-e20f08482c25",
    "name": "Okta Users with Snowflake ACCOUNTADMIN permissions that are deactivated",
    "description": "Okta Users created more than 30 days ago that are deactivated but with ACCOUNTADMIN permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "description": "Okta Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "id": "558148f8-67f0-468f-af85-1426142016dd",
    "labels": [
      "privileged_access"
    ],
    "name": "Okta Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Roles with Indirect or Inherited or Functional Access",
    "id": "eea896e8-cb5d-4d1b-a188-7a20b346eb85",
    "name": "Snowflake Roles with Inherited or Functional Access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Roles with Direct Access",
    "id": "24ad4851-560b-49dc-9375-d14efb0d1708",
    "name": "Snowflake Roles with Direct Access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "direct_relationship_only": true,
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "963599fa-d533-49a1-86cc-8d18283ed5ad",
    "name": "OneLogin Users with Snowflake ACCOUNTADMIN permissions that are deactivated",
    "description": "OneLogin Users created more than 30 days ago that are deactivated but with ACCOUNTADMIN permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "0532b87e-b899-4933-be96-ba129f4c536e",
    "name": "Active Directory Users with Snowflake ACCOUNTADMIN permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago that are deactivated but with ACCOUNTADMIN permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "description": "Active Directory Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "id": "806e7252-3f32-47f4-923e-ac6187eda996",
    "labels": [
      "deactivated_user_access",
      "privileged_access"
    ],
    "name": "Active Directory Users that are deactivated and mapped to Snowflake Users with ACCOUNTADMIN permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "4a135881-3b84-4b15-99ef-891876aaca88",
    "name": "Okta Groups with Snowflake ACCOUNTADMIN permissions",
    "description": "Okta Groups with ACCOUNTADMIN permissions in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "b6f6f2c4-d33f-46a3-8903-1aab052ff968",
    "name": "Okta Groups mapped to a Snowflake Role",
    "description": "Okta Groups mapped to a Snowflake Role",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b882c00b-27fe-48bc-ab7a-5c273e5b517e",
    "name": "AWS IAM Policies changed recently",
    "description": "AWS IAM Policies changed in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "updated_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "abfbd71c-1c0d-41eb-88f8-8b20a51c26ff",
    "name": "AWS IAM Service-linked Roles",
    "description": "AWS IAM service-linked Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "service_linked_role",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9b588d34-509b-42ae-b852-ee25092ecdfb",
    "name": "AWS IAM Policies granting iam:PassRole permission",
    "description": "AWS IAM Policies granting iam:PassRole permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "07ddc0ef-a510-4034-be12-80860b06f4a6",
    "name": "AWS IAM Groups with iam:PassRole permission",
    "description": "AWS IAM Groups with iam:PassRole permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "492d894e-9e72-473b-9bdb-58c645b48371",
    "name": "AWS IAM Users with iam:PassRole permission",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b60e5b84-b6d1-4f40-b95a-1acbab76ad3f",
    "name": "AWS IAM Roles with iam:PassRole permission",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ade125f2-82bd-45d8-a20a-170f0fb6f874",
    "name": "AWS IAM Policies granting iam:PassRole permission and without iam:PassedToService condition",
    "description": "AWS IAM Policies granting iam:PassRole permission and without iam:PassedToService condition",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "has_passed_to_service_cond",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "e9580e40-6761-42e5-850d-e5cc119414b7",
    "name": "AWS IAM Groups with AWS iam:PassRole permission and without iam:PassedToService condition",
    "description": "AWS IAM Groups with AWS iam:PassRole permission and without iam:PassedToService condition",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "has_passed_to_service_cond",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "6288f9ac-ff58-49b1-87a0-79ae7572448f",
    "name": "AWS IAM Users with AWS iam:PassRole permission and without iam:PassedToService condition",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement an iam:PassedToService condition in the IAM policy to restrict the PassRole permission to only the necessary services.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "has_passed_to_service_cond",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ],
    "risk_level": "CRITICAL"
  },
  {
    "id": "2aa99642-00c8-48ba-b207-588fcb8836a0",
    "name": "AWS IAM Roles with AWS iam:PassRole permission and without iam:PassedToService condition",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement the iam:PassedToService condition in the IAM policy to restrict which services can be passed roles, and regularly audit IAM roles and permissions to ensure compliance.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "has_passed_to_service_cond",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "86970f7b-f5ce-4474-a574-5490d3d2fd89",
    "name": "AWS IAM Policies granting iam:PassRole permission on all resources",
    "description": "AWS IAM Policies granting iam:PassRole permission on all resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "d00005a4-97de-4a37-b746-fd572c5d9278",
    "name": "AWS IAM Groups with iam:PassRole permission on all resources",
    "description": "AWS IAM Groups with iam:PassRole permission on all resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "7041722e-67e5-4ad9-b68e-e9772dceb0cf",
    "name": "AWS IAM Users with iam:PassRole permission on all resources",
    "risk_level": "LOW",
    "risk_explanation": "AWS IAM Users with the `iam:PassRole` permission on all resources pose a significant security risk because this permission allows them to assign IAM roles to various AWS resources, potentially elevating their privileges. With this capability, users can inadvertently or maliciously grant roles with excessive permissions, leading to unauthorized access and actions on sensitive AWS resources. This practice violates the principle of least privilege and best security practices, increasing the attack surface and the potential for security incidents.\n\nThe uncontrolled use of `iam:PassRole` can result in data exposure, compliance violations, resource isolation issues, and misconfigurations that compromise the security and integrity of an AWS environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the `iam:PassRole` permission to only the necessary roles and resources, implement least privilege principles, and regularly audit IAM policies to ensure compliance.",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "e9fcc3ac-3e1b-47be-925c-3b29454fb85e",
    "name": "AWS IAM Roles with iam:PassRole permission on all resources",
    "description": "PassRole is a feature that allows a principal to attach an IAM role to another service, it can be abused if its permission policy is not restricted. A malicious principal can pass permissions that it doesn't have to a service and exploit this service to perform malicious activities on its behalf.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the iam:PassRole permission to only the specific roles and resources that are necessary, implement least privilege principles, and regularly audit IAM policies for any excessive permissions.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PassRole"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ],
    "risk_level": "CRITICAL"
  },
  {
    "id": "fc541c2c-af2b-42c9-820a-08388a9975f9",
    "name": "AWS IAM Policies granting iam:AttachUserPolicy permission",
    "description": "AWS IAM Policies granting iam:AttachUserPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f0c551fd-a57d-425b-b1f3-1a30887ea680",
    "name": "AWS IAM Groups with iam:AttachUserPolicy permission",
    "description": "AWS IAM Groups with iam:AttachUserPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e09adda0-2227-4d8e-a296-10fba4f4ad9c",
    "name": "AWS IAM Users with iam:AttachUserPolicy permission",
    "description": "An attacker with the iam:AttachUserPolicy permission can escalate permissions by attaching a policy to a user that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d213a197-3bcb-49cc-9f03-888e5c130014",
    "name": "AWS IAM Roles with iam:AttachUserPolicy permission",
    "description": "An attacker with the iam:AttachUserPolicy permission can escalate permissions by attaching a policy to a user that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6e67d46d-90fd-45c4-97d1-54dfc68244a1",
    "name": "AWS IAM Policies granting iam:AttachGroupPolicy permission",
    "description": "AWS IAM Policies granting iam:AttachGroupPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f805cb11-a867-408e-95c0-1695519b7038",
    "name": "AWS IAM Groups with iam:AttachGroupPolicy permission",
    "description": "AWS IAM Groups with iam:AttachGroupPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fcc2ec54-e01e-4cdc-901f-c002d82585a8",
    "name": "AWS IAM Users with iam:AttachGroupPolicy permission",
    "description": "An attacker with the iam:AttachGroupPolicy permission can escalate permissions by attaching a policy to a group that they are a part of, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0bccc916-d28e-48b3-aadd-1105056e1757",
    "name": "AWS IAM Roles with iam:AttachGroupPolicy permission",
    "description": "An attacker with the iam:AttachGroupPolicy permission can escalate permissions by attaching a policy to a group that they are a part of, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3bf94938-0a66-4c25-9b4d-008694f77f87",
    "name": "AWS IAM Policies granting iam:AttachRolePolicy permission",
    "description": "AWS IAM Policies granting iam:AttachRolePolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cac5ea0e-1d8d-4d23-af4c-4b9b90d320e3",
    "name": "AWS IAM Groups with iam:AttachRolePolicy permission",
    "description": "AWS IAM Groups with iam:AttachRolePolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "948a1abd-231d-4e25-bcff-375e7f1d211c",
    "name": "AWS IAM Users with iam:AttachRolePolicy permission",
    "description": "An attacker with the iam:AttachRolePolicy permission can escalate permissions by attaching a policy to a role that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a002d3da-7f3d-4c06-9206-4abdb69e747e",
    "name": "AWS IAM Roles with iam:AttachRolePolicy permission",
    "description": "An attacker with the iam:AttachRolePolicy permission can escalate permissions by attaching a policy to a role that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AttachRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d96417b8-56d8-41f9-aeca-ec00f70056ab",
    "name": "AWS IAM Policies granting iam:PutGroupPolicy permission",
    "description": "AWS IAM Policies granting iam:PutGroupPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a45c2014-f5cd-4e2f-bcb6-2ef96ffa104b",
    "name": "AWS IAM Groups with iam:PutGroupPolicy permission",
    "description": "AWS IAM Groups with iam:PutGroupPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7ad9f72b-cf8d-4a13-a435-c9e0ec894d0a",
    "name": "AWS IAM Users with iam:PutGroupPolicy permission",
    "description": "An attacker with the iam:PutGroupPolicy permission can escalate permissions by creating or updating an inline policy for a group that they are a part of, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d7bb625e-fb55-4ee2-8b53-5aaf9d99d445",
    "name": "AWS IAM Roles with iam:PutGroupPolicy permission",
    "description": "An attacker with the iam:PutGroupPolicy permission can escalate permissions by creating or updating an inline policy for a group that they are a part of, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutGroupPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "197eb220-e3d3-457d-b1fb-c099f31bfe25",
    "name": "AWS IAM Policies granting iam:PutRolePolicy permission",
    "description": "AWS IAM Policies granting iam:PutRolePolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1507d6bc-fe91-42f9-bbb4-1e09459679a5",
    "name": "AWS IAM Groups with iam:PutRolePolicy permission",
    "description": "AWS IAM Groups with iam:PutRolePolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0d8464ba-7984-406a-bce2-9accd5f43d92",
    "name": "AWS IAM Users with iam:PutRolePolicy permission",
    "description": "An attacker with the iam:PutRolePolicy permission can escalate permissions by creating or updating an inline policy for a role that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4afcdb1a-1cac-4af5-b2aa-d7a9d243bf60",
    "name": "AWS IAM Roles with iam:PutRolePolicy permission",
    "description": "An attacker with the iam:PutRolePolicy permission can escalate permissions by creating or updating an inline policy for a role that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "036b946f-7e10-4510-8f95-3b8938108eb2",
    "name": "AWS IAM Policies granting iam:PutUserPolicy permission",
    "description": "AWS IAM Policies granting iam:PutUserPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4d513ceb-005b-423b-a2ea-468b4147cf7d",
    "name": "AWS IAM Groups with iam:PutUserPolicy permission",
    "description": "AWS IAM Groups with iam:PutUserPolicy permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b1b3b360-cfcc-454c-a74f-a89ae7941b98",
    "name": "AWS IAM Users with iam:PutUserPolicy permission",
    "description": "An attacker with the iam:PutUserPolicy permission can escalate permissions by creating or updating an inline policy for a user that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9fd7a815-bbeb-4c3a-96dc-51946683c2f0",
    "name": "AWS IAM Roles with iam:PutUserPolicy permission",
    "description": "An attacker with the iam:PutUserPolicy permission can escalate permissions by creating or updating an inline policy for a user that they have access to, adding the permissions of that policy to the attacker.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:PutUserPolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9db14143-d12c-464e-8a73-821728f45e25",
    "name": "AWS IAM Policies granting iam:AddUserToGroup permission",
    "description": "AWS IAM Policies granting iam:AddUserToGroup permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AddUserToGroup"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4cae69ae-dfb7-49d5-904e-22785ad582f6",
    "name": "AWS IAM Groups with iam:AddUserToGroup permission",
    "description": "AWS IAM Groups with iam:AddUserToGroup permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AddUserToGroup"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b60b4436-c396-4ec2-a579-ee8e9d2bb110",
    "name": "AWS IAM Users with iam:AddUserToGroup permission",
    "description": "An attacker with the iam:AddUserToGroup permission can use it to add themselves to an existing IAM Group in the AWS account.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AddUserToGroup"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ed156c44-a51e-466d-89fc-3043e47d76ad",
    "name": "AWS IAM Roles with iam:AddUserToGroup permission",
    "description": "An attacker with the iam:AddUserToGroup permission can use it to add themselves to an existing IAM Group in the AWS account.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:AddUserToGroup"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0ce0940d-e2b0-469c-a108-ceb66a2085e0",
    "name": "AWS IAM Policies granting iam:CreatePolicyVersion permission",
    "description": "AWS IAM Policies granting iam:CreatePolicyVersion permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreatePolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6be6e24d-6bd3-4550-a1bc-48d92ef9a01e",
    "name": "AWS IAM Groups with iam:CreatePolicyVersion permission",
    "description": "AWS IAM Groups with iam:CreatePolicyVersion permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreatePolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6803b042-0c0c-4826-80f3-2a7695e46355",
    "name": "AWS IAM Users with iam:CreatePolicyVersion permission",
    "description": "An attacker with the iam:CreatePolicyVersion permission can create a new version of an IAM policy that they have access to. This allows them to define their own custom permissions.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreatePolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6deec815-ab53-4154-ba86-aab40f0cc7e2",
    "name": "AWS IAM Roles with iam:CreatePolicyVersion permission",
    "description": "An attacker with the iam:CreatePolicyVersion permission can create a new version of an IAM policy that they have access to. This allows them to define their own custom permissions.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreatePolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a3f04053-929c-427c-9444-861dbd1cef57",
    "name": "AWS IAM Policies granting iam:SetDefaultPolicyVersion permission",
    "description": "AWS IAM Policies granting iam:SetDefaultPolicyVersion permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:SetDefaultPolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "61a5ae79-b2ac-4dc9-aff6-7bc9be0035df",
    "name": "AWS IAM Groups with iam:SetDefaultPolicyVersion permission",
    "description": "AWS IAM Groups with iam:SetDefaultPolicyVersion permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:SetDefaultPolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0a710142-f734-45ec-8163-a35a4b8cc46b",
    "name": "AWS IAM Users with iam:SetDefaultPolicyVersion permission",
    "description": "An attacker with the iam:SetDefaultPolicyVersion permission may be able to escalate permissions through existing policy versions that are not currently in use. If a policy that they have access to has versions that are not the default, they would be able to change the default version to any other existing version.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:SetDefaultPolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8fb8abd5-0891-4bcd-bca6-1388c4e46896",
    "name": "AWS IAM Roles with iam:SetDefaultPolicyVersion permission",
    "description": "An attacker with the iam:SetDefaultPolicyVersion permission may be able to escalate permissions through existing policy versions that are not currently in use. If a policy that they have access to has versions that are not the default, they would be able to change the default version to any other existing version.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:SetDefaultPolicyVersion"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "20af587f-a36a-496e-94e1-c52ea8c40562",
    "name": "AWS IAM Policies granting iam:CreateAccessKey permission",
    "description": "AWS IAM Policies granting iam:CreateAccessKey permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateAccessKey"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "95ccaca3-c9f6-4711-9219-887e5c102701",
    "name": "AWS IAM Groups with iam:CreateAccessKey permission",
    "description": "AWS IAM Groups with iam:CreateAccessKey permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateAccessKey"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "17d51171-4460-4b18-b95e-5ca7be88ffea",
    "name": "AWS IAM Users with iam:CreateAccessKey permission",
    "description": "An attacker with the iam:CreateAccessKey permission on other Users can create an access key ID and secret access key belonging to another user in the AWS environment, if they don't already have two sets associated with them (which best practice says they shouldn't).",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateAccessKey"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d0cebe6d-a9a2-4884-9687-4e2014a02f6d",
    "name": "AWS IAM Roles with iam:CreateAccessKey permission",
    "description": "An attacker with the iam:CreateAccessKey permission on other Users can create an access key ID and secret access key belonging to another user in the AWS environment, if they don't already have two sets associated with them (which best practice says they shouldn't).",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateAccessKey"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ab82fdf7-81de-48c4-ae2d-79b2ed32ad02",
    "name": "AWS IAM Policies granting iam:CreateLoginProfile permission",
    "description": "AWS IAM Policies granting iam:CreateLoginProfile permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "868a574a-a16b-4b8d-9438-7cfda513f8c4",
    "name": "AWS IAM Groups with iam:CreateLoginProfile permission",
    "description": "AWS IAM Groups with iam:CreateLoginProfile permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a9e5eca7-afc4-4684-abbd-6e92d02b0a46",
    "name": "AWS IAM Users with iam:CreateLoginProfile permission",
    "description": "An attacker with the iam:CreateLoginProfile permission on other Users can create a password to use to login to the AWS console on any user that does not already have a login profile setup.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fb8ddeb9-62cd-4e3a-a849-8a095d1015fb",
    "name": "AWS IAM Roles with iam:CreateLoginProfile permission",
    "description": "An attacker with the iam:CreateLoginProfile permission on other Users can create a password to use to login to the AWS console on any user that does not already have a login profile setup.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:CreateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "37662672-a1aa-4555-b004-26b7c8c021a8",
    "name": "AWS IAM Policies granting iam:UpdateLoginProfile permission",
    "description": "AWS IAM Policies granting iam:UpdateLoginProfile permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "be8d69f7-d4a5-4330-a7b2-3afae83b7485",
    "name": "AWS IAM Groups with iam:UpdateLoginProfile permission",
    "description": "AWS IAM Groups with iam:UpdateLoginProfile permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c739b7f0-628d-4a26-8057-63895104b96d",
    "name": "AWS IAM Users with iam:UpdateLoginProfile permission",
    "description": "An attacker with the iam:UpdateLoginProfile permission on other Users can change the password used to login to the AWS console on any user that already has a login profile setup.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e0c170da-7ac7-40fa-8091-f01a4539887e",
    "name": "AWS IAM Roles with iam:UpdateLoginProfile permission",
    "description": "An attacker with the iam:UpdateLoginProfile permission on other Users can change the password used to login to the AWS console on any user that already has a login profile setup.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateLoginProfile"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "deny",
                          "not": true
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b57e7cf-030d-4c1c-af8c-ae0ad3c393dc",
    "name": "AWS IAM Roles that can be assumed by any AWS principal",
    "description": "AWS IAM Roles that can be assumed by any AWS principal",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict IAM role assumptions to specific AWS principals by defining precise trust policies and using conditions to limit access.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "trusts_any_aws_principal",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "74e9969d-aa3d-4055-bef6-526d9446ddec",
    "name": "AWS IAM Roles that trust a root AWS principal",
    "description": "Meaning the role can be assumed by the root account of one or more AWS accounts. Policies of this type contain 'Principal' : { 'AWS' : 'arn:aws:iam::account-ID:root' }",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "trusts_root_aws_principal",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2633f1f6-1f1e-4588-aaff-f5eb9e4bccac",
    "name": "Coupa Users who have both Buyer and Approver roles",
    "description": "These Coupa Users violate the Separation of Duty principle as they can buy from a vendor and approve the purchase all by themselves.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Coupa.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Coupa.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Buyer"
                  }
                }
              }
            ],
            "has_relation": true
          },
          {
            "node_types": [
              {
                "type": "OAA.Coupa.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Approver"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b993da9-3e59-4cf3-a84f-44e4cebc1402",
    "name": "Sharepoint Online Deployments",
    "description": "Total number of Sharepoint Online Deployments",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointOnline"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "637e0fe3-09b5-4b77-9872-353a2ff84693",
    "name": "Sharepoint Local Users",
    "description": "Total number of Sharepoint local Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3b20a236-e0db-4af4-b5a1-09ed546e7350",
    "name": "Sharepoint Local Groups",
    "description": "Total number of Sharepoint local Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0ced1ab4-ad5b-4ff2-9d98-ae423b5e0073",
    "name": "Sharepoint Local Users with write permissions",
    "description": "Sharepoint Local Users with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "3654d603-e53e-4138-9e96-bf9ba62b15a1",
    "name": "Sharepoint Groups with write permissions",
    "description": "Sharepoint Groups with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "a5939281-cba0-4c7d-80ea-b1a2b8c62211",
    "name": "Sharepoint Sites",
    "description": "Total number of Sharepoint sites",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a0c7ce72-84cc-4c4c-8192-431dea7653f7",
    "name": "Sharepoint Libraries",
    "description": "Total number of Sharepoint Libraries",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointLibrary"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e1d62136-e418-4283-a6cd-2cdea28c1290",
    "name": "Sharepoint Folders",
    "description": "Total number of Sharepoint Folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointFolder"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d1e62136-e418-4283-a6cd-2cdea28c1290",
    "name": "Sharepoint Folders with public access outside organization",
    "risk_level": "LOW",
    "risk_explanation": "These pose a security risk because they expose potentially sensitive data to the public or unauthorized individuals. This can result in data leaks, compliance violations, and unauthorized data tampering. Without proper access controls, anyone can access, download, or modify the contents of these folders, which can lead to data breaches and compromise of confidential information.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict access to Sharepoint folders to only authorized internal users and implement strict access controls and monitoring to ensure compliance and data security.",
    "description": "Sharepoint Folders with public access to anyone outside organization ",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "scope",
              "string_value": "anonymous"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "eee62136-e418-4283-a6cd-2cdea28c1000",
    "name": "Sharepoint Folders with public access inside organization",
    "description": "Sharepoint Folders with public access to anyone inside organization (shared link)",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "scope",
              "string_value": "organization"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "303e03b5-bef7-4a85-906c-22d48a91be9d",
    "name": "Sharepoint Sites that are personal",
    "description": "Total number of personal Sharepoint Sites",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_personal",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bc5d79bb-e1af-434b-b6b2-703e6eed6c24",
    "name": "Sharepoint Sites that are corporate",
    "description": "Total number of corporate Sharepoint Sites",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_personal",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ed8196b1-20ba-4718-857c-80457e1a0fdf",
    "name": "Sharepoint Sites created in the last 24 hours",
    "description": "Sharepoint Sites created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "dda5d82b-5d65-48c7-95a9-4b4c7a0e3b6a",
    "name": "Sharepoint Libraries created in the last 24 hours",
    "description": "Sharepoint Libraries created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointLibrary",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b3c31b2b-1791-4e78-b29a-0f1d3bd23fc8",
    "name": "Sharepoint Folders created in the last 24 hours",
    "description": "Sharepoint Folders created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0827c158-9973-444c-9ca4-b941b73528c9",
    "name": "Azure AD Users with Sharepoint access",
    "description": "Azure AD Users with access to one or more Sharepoint libraries",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointLibrary"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "e9276199-06a7-49c2-946d-71e2d0a1c695",
    "name": "Azure AD Users with Sharepoint write permissions",
    "description": "Azure AD Users with Sharepoint data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointGroupedPermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "deb59045-7d3b-40a8-83a8-76db7801631e",
    "name": "Azure AD Groups mapped to a Sharepoint Group",
    "description": "Azure AD Groups mapped to a Sharepoint group",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "8fb80d39-4a5f-443c-b77b-57812d02f932",
    "name": "AWS IAM Users created recently",
    "description": "AWS IAM Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "da81a075-8bc7-4587-b2c2-10d0a150ba4b",
    "name": "AWS IAM Groups created recently",
    "description": "AWS IAM Groups created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "78915c54-a7a5-4c72-a75f-dcc6722092bb",
    "name": "AWS IAM Roles created recently",
    "description": "AWS IAM Roles created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6834b1c2-df42-4a32-8357-3880df694a48",
    "name": "Azure AD Users created recently",
    "description": "Azure AD Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "517414ef-a92b-40e1-9d09-48e95ad1e1ea",
    "name": "Okta Groups created recently",
    "description": "Okta Groups created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e6530633-2866-41f8-b30d-d445dec45654",
    "name": "Okta Users created recently",
    "description": "Okta Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "46a1adcc-7953-4960-8b0d-fbce090bca12",
    "name": "OneLogin Users created recently",
    "description": "OneLogin Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b8c9cdde-d82a-4810-bbca-a31e4935e251",
    "name": "AWS IAM Policies created recently",
    "description": "AWS IAM Policies created recently",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "460d0918-23f5-4bbd-b7df-85345dfd8fb7",
    "name": "Okta Groups updated recently",
    "description": "Okta Groups updated in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b4c4b8da-58a2-4dba-8151-62429cdc25d1",
    "name": "Okta Users updated recently",
    "description": "Okta Users updated in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2533190d-f73c-4c60-b3af-56ad5e0e8ff1",
    "name": "OneLogin Users updated recently",
    "description": "OneLogin Users updated in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b5932148-ab49-4364-9dca-c9f4ee47bcd5",
    "name": "AWS IAM Roles used recently",
    "description": "AWS IAM Roles used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f227994d-b827-420c-ab8a-6416edcb0ed2",
    "name": "AWS IAM Users used recently",
    "description": "AWS IAM Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e07d064e-ebc4-4ec9-9f90-72791f4becda",
    "name": "Azure AD Users used recently",
    "description": "Azure AD Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c13658a2-5dc5-48e4-9768-7728133e3f17",
    "name": "Okta Users used recently",
    "description": "Okta Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "22c5b834-ded9-48b8-b848-e6b8cd0590db",
    "name": "Snowflake Users used recently",
    "description": "Snowflake Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1a5f4fb1-df76-4e13-a743-42ef727a3ac5",
    "name": "Snowflake Users with no recent activity but have Snowflake Table access",
    "description": "Snowflake Users with no activity in the last 90 days but have Snowflake Table access",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a9789d5e-4602-4b1b-9e90-7d621b3d72ff",
    "name": "OneLogin Users used recently",
    "description": "OneLogin Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "790fd9cc-4831-4f3a-a892-44b1fe0fa6b6",
    "name": "AWS IAM Roles with no recent activity",
    "description": "AWS IAM Roles with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3f9120bb-182c-4082-ad18-457ce3c94366",
    "name": "AWS IAM Users with no recent activity",
    "risk_level": "LOW",
    "risk_explanation": "Having AWS IAM users with no recent activity can lead to several concerns:\n1. Security Risks: Inactive accounts can become targets for compromise, as they might not be closely monitored for unauthorized access.\n2. Resource Inefficiency: Maintaining inactive users can consume resources and add unnecessary clutter to the IAM system.\n3. Compliance Issues: Many compliance frameworks require regular review and deactivation of dormant accounts to reduce the risk of unauthorized access.\n4. Auditing Challenges: Inactive users can complicate audit trails, making it more difficult to track user activities and identify suspicious behavior.\n5. Potential for Outdated Access Permissions: If an inactive user eventually becomes active again, they might have outdated permissions that no longer align with current security policies or their role.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and deactivate or delete AWS IAM users with no activity in the last 90 days, ensuring compliance with security policies and reducing potential risks.",
    "description": "AWS IAM Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cbcac28b-bf3b-4996-897e-a8933c8b6587",
    "name": "Okta Users with no recent activity",
    "risk_level": "LOW",
    "risk_explanation": "This can be a security risk because they may represent unused or abandoned accounts that haven't been properly deactivated. These dormant accounts can be targeted by attackers, potentially exploiting weak credentials or forgotten vulnerabilities. They also pose a compliance risk, as they may still have access to sensitive resources.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and deactivate Okta accounts with no activity in the last 90 days.",
    "description": "Okta Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ef13db7c-07ea-45d8-ab8e-73b17ff594d6",
    "name": "Okta Users with no recent activity but assigned Okta apps",
    "description": "Okta Users with no activity in the last 90 days but assigned Okta apps",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaApp"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d173d92a-005b-4e7e-83c7-49d5843457e9",
    "name": "Okta Users with no recent activity but assigned Okta Groups",
    "description": "Okta Users with no activity in the last 90 days but assigned Okta Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cf01438a-e791-499a-904f-cad875bea378",
    "name": "Azure AD Users with no recent activity but assigned Azure AD Enterprise Apps",
    "risk_level": "LOW",
    "risk_explanation": "Azure AD Users with no recent activity but assigned Azure AD Enterprise Apps pose a cybersecurity risk due to:\n\n1. Dormant Credentials: Inactive users may still have valid credentials, providing attackers with potential access points.\n\n2. Unauthorized App Access: If attackers compromise these accounts, they can access associated enterprise apps, potentially compromising data or launching attacks.\n\n3. Stale Permissions: Inactive users with app access may retain unnecessary permissions, increasing the attack surface.\n\n4. Phishing Targets: Inactive users are more susceptible to phishing attacks, putting their app access credentials at risk.\n\n5. Lateral Movement: Attackers can exploit these accounts for lateral movement within the organization, escalating privileges.\n\n6. Compliance Gaps: Unused accounts may not undergo regular compliance checks, violating security and compliance policies.\n\n7. Resource Misuse: Attackers can misuse app access for malicious actions, evading detection.\n\n8. Identity Sprawl: Accumulation of inactive accounts complicates identity management and security efforts.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and disable or remove Azure AD users with no activity in the last 90 days and reassign necessary app access to active users.",
    "description": "Azure AD Users with no activity in the last 90 days but assigned Azure AD Enterprise apps",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADEnterpriseApplication"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cadc1560-08bf-43bd-a7ea-f48ea1655ce3",
    "name": "Azure AD Users with no recent activity but assigned Azure AD Groups",
    "risk_level": "LOW",
    "description": "Azure AD Users with no activity in the last 90 days but assigned Azure AD Groups",
    "risk_explanation": "Azure AD Users with no recent activity but assigned to Azure AD Groups can pose cybersecurity risks due to:\n\n1. Dormant Credentials: Inactive users may still have valid credentials, which attackers can exploit.\n\n2. Unauthorized Access: Attackers gaining control of these accounts can access group resources, potentially compromising data.\n\n3. Lateral Movement: Compromised accounts can be used for lateral movement within the organization, escalating privileges.\n\n4. Group Permissions: Dormant users may retain unnecessary group permissions, expanding the attack surface.\n\n5. Phishing Targets: Inactive users are often less vigilant and more susceptible to phishing attacks, which can lead to compromised accounts.\n\n6. Compliance Issues: Unused accounts may bypass regular compliance checks, leading to policy violations.\n\n7. Resource Misuse: Attackers can misuse group memberships for malicious actions, evading detection.\n\n8. Identity Sprawl: Accumulation of inactive accounts complicates identity management and security efforts.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and disable or remove Azure AD users with no activity in the last 90 days, and reassign necessary group permissions to active users.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b2cb10f3-89df-46f2-bb26-1e5cefbf0259",
    "name": "OneLogin Users with no recent activity but assigned OneLogin Apps",
    "description": "OneLogin Users with no activity in the last 90 days but assigned OneLogin apps",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OneLoginApp"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3cc2462a-bd77-440b-9077-25da6584967b",
    "name": "OneLogin Users with no recent activity",
    "description": "OneLogin Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d942db83-8045-4b4d-8ddf-54f7b01632ce",
    "name": "Snowflake Users with no recent activity",
    "description": "Snowflake Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "21f3a730-55d2-4162-9d0e-895c308325a6",
    "name": "Snowflake Users with no mapped Okta Users",
    "description": "Snowflake Users with no mapped Okta Users that are activated and do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "67545136-4951-4804-afef-bfe58b1e1aa4",
    "name": "Snowflake Users with no mapped Azure AD Users",
    "description": "Snowflake Users with no mapped Azure AD Users that are activated and do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6a7efb78-0699-4fe3-968d-7c3000f8a5d3",
    "name": "AWS RDS MySQL Users with no mapped Okta Users",
    "description": "AWS RDS MySQL Users with no mapped Okta Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "54955a06-dc17-4cc8-a31c-cfdf9649bddc",
    "name": "AWS RDS MySQL Users with no mapped Azure AD Users",
    "description": "AWS RDS MySQL Users with no mapped Azure AD Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsMySqlUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1c7e2836-eb64-42b3-ae3f-f51241e1e301",
    "name": "AWS RDS Postgres Users with no mapped Okta Users",
    "description": "AWS RDS Postgres Users with no mapped Okta Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0b59cafd-3984-4691-a9fa-a238b4ae14f3",
    "name": "AWS RDS Postgres Users with no mapped Azure AD Users",
    "description": "AWS RDS Postgres Users with no mapped Azure AD Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsPostgresUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a9728113-8a65-495b-bff6-9a1771269a74",
    "name": "Databricks Users with no mapped Okta Users",
    "description": "Databricks Users with no mapped Okta Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "10a6a1ef-a851-4ab2-ba84-2a608af3d7f1",
    "name": "Databricks Users with no mapped Azure AD Users",
    "description": "Databricks Users with no mapped Azure AD Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f2343f52-5979-439c-a5ab-2b5cd3de4fa9",
    "name": "AWS Redshift Users with no mapped Okta Users",
    "description": "AWS Redshift Users with no mapped Okta Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "255259ae-ca32-41eb-a14d-caf538588e02",
    "name": "AWS Redshift Users with no mapped Azure AD Users",
    "description": "AWS Redshift Users with no mapped Azure AD Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "admin",
              "not": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8f2aac39-cec4-4baf-8f48-7ab18c462a58",
    "name": "Salesforce Users with no mapped Okta Users",
    "description": "Salesforce Users with no mapped Okta Users that are activated and do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "63b1c0f5-77d8-435e-b862-8a97f238a3b0",
    "name": "Salesforce Users with no mapped Azure AD Users",
    "description": "Salesforce Users with no mapped Azure AD Users that are activated and do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c2fcf704-dbe5-40bc-b9f9-30242724ca8b",
    "name": "Trino Users with no mapped Okta Users",
    "description": "Trino Users with no mapped Okta Users that do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "11024535-d548-4b42-8496-e815bada7e0a",
    "name": "Trino Users with no mapped Azure AD Users",
    "description": "Trino Users with no mapped Azure AD Users that are activated and do not contain 'admin' in user name",
    "value_query": {
      "from_node_types": [
        {
          "type": "TrinoUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "37a56aaa-03cc-41b3-8d86-3de33a4918fa",
    "name": "Azure AD Users with Sharepoint access granted through Azure AD role",
    "description": "Azure AD Users with access to one or more Sharepoint sites granted through one of the Azure AD roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointSite"
              }
            ],
            "path_required_node_types": [
              {
                "type": "AzureADRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9505b453-1261-4e04-a5fa-b2539a57ddec",
    "name": "Azure Network Security Groups",
    "description": "Total number of Azure VM Network Security Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureNetworkSecurityGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "66e6ff8c-2a04-423c-a5e7-4e9b027c1aa7",
    "name": "Azure Virtual Machines",
    "description": "Total number of Azure VM Instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVirtualMachine",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3df770fe-af10-4995-96ad-19dcacc1af85",
    "name": "Azure Subnets",
    "description": "Total number of Azure VM Subnets",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureSubnet",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "906f99c3-fe0c-47f3-bbe1-c08011fee818",
    "name": "Azure Virtual Networks",
    "description": "Total number of Azure VM Virtual Networks",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVirtualNetwork",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5e080014-60f7-4fd8-9aac-5462efa399ff",
    "name": "Azure Network Security Groups allowing inbound HTTP traffic",
    "description": "Azure Network Security Groups with a rule allowing inbound HTTP traffic",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureNetworkSecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_inbound_traffic",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "31fe3b87-2fdd-4ea5-8110-5266c5d45309",
    "name": "Azure Network Security Groups allowing inbound SSH or RDP traffic from anywhere",
    "description": "Azure Network Security Groups with a rule allowing inbound SSH or RDP traffic from anywhere",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureNetworkSecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "ssh_or_rdp_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_all_inbound_traffic",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "312e3b87-2fdd-4ea5-8110-5266d5c45390",
    "name": "Azure Network Security Groups that allow all inbound traffic",
    "description": "Azure Network Security Groups with a rule allowing all inbound traffic",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict inbound traffic by configuring Network Security Groups to allow only necessary traffic from specific IP addresses or ranges.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureNetworkSecurityGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_all_inbound_traffic",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ],
    "risk_level": "CRITICAL"
  },
  {
    "id": "a4ef72fe-5178-4b74-8494-1bc7790c66db",
    "name": "Active Sharepoint Sites",
    "description": "Sharepoint Sites used in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "GTE",
              "property": "last_activity_date",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ],
      "sort_options": [
        {
          "node_type": "SharePointSite",
          "sort_by": "property",
          "property": "last_activity_date",
          "aggregate": true,
          "descending": true
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e44a04fb-6e8b-4524-86ec-bcc6d302ee80",
    "name": "Inactive Sharepoint Sites in the last 90 days",
    "description": "Sharepoint Sites not used in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_activity_date",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ],
      "sort_options": [
        {
          "node_type": "SharePointSite",
          "sort_by": "property",
          "property": "last_activity_date",
          "aggregate": false,
          "descending": false
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "129cb04b-4bf0-4af3-8f51-3b4ab5e0a370",
    "name": "Sharepoint Sites with no stats",
    "description": "Sharepoint Sites with no activity stats available",
    "value_query": {
      "from_node_types": [
        {
          "type": "SharePointSite",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_stats",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6fc2b0f4-4414-4b0d-9e4e-b0e72fad287f",
    "name": "Azure AD Users with SQL Server access",
    "description": "Azure AD Users with access to one or more SQL Server databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cf62b0f4-4414-4b0d-9e4e-b0e72fad277f",
    "name": "SQL Servers with Azure Active Directory access",
    "description": "SQL Server Instances with Active Directory Authentication (on Azure tenant) enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerInstance",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "server_type",
              "string_value": "azure_sql"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureTenant",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cd239b4c-d3e8-45c4-9214-97016674cc35",
    "name": "Azure AD Users with SQL Server Login Admin Access",
    "description": "Azure AD Users with Administrator access to SQL Server Login",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerLogin",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a3775561-7589-4a67-8bed-d10ba0b3fc6c",
    "name": "Active Directory Users with SQL Server Sysadmin role",
    "description": "Active Directory Users with SQL Server Sysadmin role",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "sysadmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d934d8e5-013d-4794-adb1-7adc7b04bbf3",
    "name": "Active Directory Users with SQL Server Serveradmin role",
    "description": "Active Directory Users with SQL Server Serveradmin role",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "serveradmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1f4db8fb-52e9-4583-8877-93dfbdd7d85f",
    "name": "Active Directory Users with SQL Server Securityadmin role",
    "description": "Active Directory Users with SQL Server Securityadmin role",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "securityadmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a0b60286-7892-473b-a2de-fc2cff29bbc5",
    "name": "Azure AD Users with SQL Server delete permissions",
    "description": "Azure AD Users with SQL Server delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ca3f762c-359e-4d81-ab41-95ef03b31c61",
    "name": "Azure AD Users with SQL Server access permissions",
    "description": "Azure AD Users with SQL Server read permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_read_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8786d6d2-80a1-4dc0-b65e-c17e159f6cde",
    "name": "Azure AD Users without strong passwords required",
    "risk_level": "CRITICAL",
    "risk_explanation": "Not enforcing strong passwords for Azure AD users poses security risks, including increased vulnerability to **password attacks** (brute force, password spraying), higher risk of **credential compromise**, and susceptibility to **credential stuffing attacks**. Weak passwords reduce account security, violate compliance standards, and expose organizations to legal consequences.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce strong password policies in Azure AD, including complexity requirements, minimum length, and regular password changes.",
    "description": "Azure AD Users without strong passwords required",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "password_policies",
                    "string_value": "DisableStrongPassword"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "11e1d8d8-82ba-4b1f-89d8-15d2e836ebc4",
    "name": "Azure AD Users without passwords expiration policy",
    "risk_level": "LOW",
    "risk_explanation": "If Azure AD users do not have a password expiration policy or if the policy is not enforced, it can pose several security risks:\n1. **Stale Credentials**: If users do not change their passwords regularly, compromised credentials may go unnoticed for extended periods. Attackers could use stolen credentials to gain unauthorized access to resources and sensitive data.\n2. **Increased Risk of Credential Stuffing Attacks**: Without password expiration, users might continue to use the same password across multiple services and platforms for a longer duration. If credentials are compromised on one platform, attackers could leverage the same credentials for unauthorized access elsewhere.\n3. **Reduced Resilience Against Phishing**: Periodic password changes can help mitigate the impact of successful phishing attacks. If a user falls victim to a phishing attack and unknowingly provides their credentials, regular password changes can limit the time during which the compromised credentials can be used.\n4. **Compliance Concerns**: Many regulatory standards and compliance frameworks require organizations to implement password policies, including password expiration. Non-compliance with these standards could lead to legal and regulatory consequences.\n5. **Weakened Overall Security Posture**: Password expiration policies are one layer of defense in a multi-layered security strategy. Without this policy, an organization might be relying solely on the strength of initial passwords and other security measures.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce a password expiration policy for all Azure AD users, ensuring regular password changes and compliance with regulatory standards.",
    "description": "Azure AD Users without password expiration policy",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "password_policies",
                    "string_value": "DisablePasswordExpiration"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "470c643c-ceac-4eb1-b459-98720da7403e",
    "name": "Azure AD Users with SQL Server write permissions",
    "description": "Azure AD Users with SQL Server write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "27ad85d0-96c8-4000-8dce-d9802b7c235e",
    "name": "Azure AD Service Principals with delegated API Access",
    "risk_level": "LOW",
    "risk_explanation": "Azure AD Service Principals with delegated API access can introduce security risks if not configured and managed properly. Below are details:\n1. **Security Principle Violation**: Service principals with delegated API access can violate the security principle of least privilege. If not carefully managed, they might end up with more permissions than necessary, increasing the risk of unauthorized access.\n2. **Limited User Context**: Delegated API access with service principals may lack the context of an individual user. This can make it challenging to trace and audit specific user actions, potentially hindering incident response and forensic analysis.\n3. **Long-lived Access**: Service principals, especially those with delegated access, might have long-lived tokens. If these tokens are compromised, the attacker could have extended unauthorized access, as token lifetimes might not be as short as those associated with user sessions.\n4. **Complexity in Managing Permissions**: Managing permissions for service principals with delegated access can become complex, especially as the number of service principals and associated APIs grows. This complexity increases the likelihood of misconfigurations and security oversights.\n5. **Difficulty in Revoking Access**: Revoking access for service principals with delegated permissions might not be as straightforward as with individual user accounts. This can create challenges in promptly responding to security incidents or changing access requirements.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement the principle of least privilege by regularly reviewing and minimizing permissions for service principals, enforce short-lived tokens and frequent rotation, enhance auditing and monitoring to trace actions back to specific service principals, simplify permission management through role-based access controls, and establish clear procedures for promptly revoking access when necessary.",
    "description": "Azure AD Service Principals with delegated API Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "property": "permissions"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "a2a080fa-5c34-43b4-a681-d7a229c3e8b6",
    "name": "SQL Server Database Users",
    "description": "Total number of local database Users on SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c865ed29-3a13-44b2-aaed-9c7dc55cab11",
    "name": "SQL Server Database Roles",
    "description": "Total number of local database roles on SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseRole"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a0c9675a-86cf-44c4-bff3-d213dd8c51f6",
    "name": "SQL Server Logins",
    "description": "Total local server logins on SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerLogin"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "591f9c62-2ba3-4257-9ece-9fd56d979e35",
    "name": "SQL Server Roles",
    "description": "Total local server roles on SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerRole"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0a8ac030-a159-4e65-a461-93ef095acc1a",
    "name": "SQL Server Server Logins that are deactivated",
    "description": "SQL Server local server logins (Users) that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerLogin",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d3386446-41fb-439e-b73d-3775b1fa3109",
    "name": "SQL Server Roles that are deactivated",
    "description": "SQL Server local roles that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bc23da6e-6a47-4bef-b149-318f83fad1e6",
    "name": "SQL Server Database Users with create permission",
    "description": "Local database Users with create permission in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE AGGREGATE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ASSEMBLY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ASYMMETRIC KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE CERTIFICATE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE CONTRACT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE DATABASE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE DATABASE DDL EVENT NOTIFICATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE DEFAULT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE EXTERNAL LANGUAGE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE EXTERNAL LIBRARY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE FULLTEXT CATALOG"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE FUNCTION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE MESSAGE TYPE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE PROCEDURE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE QUEUE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE REMOTE SERVICE BINDING"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ROLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ROUTE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE RULE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE SCHEMA"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE SERVICE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE SYMMETRIC KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE SYNONYM"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE TABLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE TYPE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE VIEW"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE XML SCHEMA COLLECTION"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "39e115d9-9a29-496a-a2a4-37bc91a13cdf",
    "name": "SQL Server Local server Users (login) with create permission",
    "description": "Local server Users with create permission in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerLogin"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ANY DATABASE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE AVAILABILITY GROUP"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE DDL EVENT NOTIFICATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE ENDPOINT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE SERVER ROLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "CREATE TRACE EVENT NOTIFICATION"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "02a398ea-f064-44a0-93a3-128e4a3dca88",
    "name": "SQL Server Database Users with delete permissions",
    "description": "Local database Users with delete permissions in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "DELETE"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "cf9064da-eacd-4111-8570-ae9b71c8aae5",
    "name": "SQL Server Database Users with drop permissions",
    "description": "Local database Users with drop permissions in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY APPLICATION ROLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY ASSEMBLY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY ASYMMETRIC KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY CERTIFICATE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY COLUMN ENCRYPTION KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY COLUMN MASTER KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY CONTRACT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE AUDIT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE DDL TRIGGER"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE EVENT NOTIFICATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE EVENT SESSION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE SCOPED CONFIGURATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATASPACE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EXTERNAL DATA SOURCE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EXTERNAL FILE FORMAT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EXTERNAL LANGUAGE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EXTERNAL LIBRARY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY FULLTEXT CATALOG"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY MASK"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY MESSAGE TYPE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY REMOTE SERVICE BINDING"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY ROLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY ROUTE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SCHEMA"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SECURITY POLICY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SENSITIVITY CLASSIFICATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SERVICE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SYMMETRIC KEY"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY USER"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "d1737e67-99a3-4b8f-a91b-4902f95ddda5",
    "name": "SQL Server Logins with drop permissions",
    "description": "Local server logins (Users) with drop permissions in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerLogin"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY AVAILABILITY GROUP"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY CONNECTION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY CREDENTIAL"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY DATABASE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY ENDPOINT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EVENT NOTIFICATION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY EVENT SESSION"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY LINKED SERVER"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY LOGIN"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SERVER AUDIT"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER ANY SERVER ROLE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER RESOURCES"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER SERVER STATE"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER SETTINGS"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "ALTER TRACE"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "97cd6582-7e00-4e86-bc6a-61b3e48a0948",
    "name": "SQL Server Database Users with write permissions",
    "description": "Local Database Users with write permissions in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabaseUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "d1ffc612-aef5-48e6-90c0-aeb30e9d410f",
    "name": "SQL Server Logins with write permissions",
    "description": "Local server Users (logins) with write permissions in SQL Server",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerLogin"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "b988776f-85ee-4427-bfdf-5ffc31f960b7",
    "name": "SQL Server Instances",
    "description": "Total number of SQL Server instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerInstance"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9614ed31-cb7d-4cfe-b37e-8a3c9c0a859c",
    "name": "SQL Server Services",
    "description": "Total number of SQL Server services",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerService"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ac807ba1-90c7-4c07-86d5-83f439ce68a7",
    "name": "SQL Server Databases",
    "description": "Total number of SQL Server databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabase"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8513c2ca-6b8b-4483-a65b-30b5b6ee2e85",
    "name": "SQL Server Databases with encrypted data",
    "description": "Total number of SQL Server databases with data encryption enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabase",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "encryption_enabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "db89b5d4-5483-422f-9ec3-b2bc2e065819",
    "name": "SQL Server Databases with non-encrypted data",
    "description": "Total number of SQL Server Databases with data encryption disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerDatabase",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "encryption_enabled",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b0bd9281-7515-4838-afb1-b0f28da03102",
    "name": "SQL Server Schemas",
    "description": "Total number of SQL Server Schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerSchema"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "34462d33-2018-462f-90bf-d33d22fb737f",
    "name": "SQL Server Tables",
    "description": "Total number of SQL Server Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerTable"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d6875af0-9a9f-4a64-a86c-f288f4a86b88",
    "name": "SQL Server Tables created in the last 24 hours",
    "description": "SQL Server Tables created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6230424b-fa41-4cf8-810b-3d770ce20694",
    "name": "SQL Server Tables modified in the last 24 hours",
    "description": "SQL Server Tables modified in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2df1eeff-0413-4123-8353-8341b9ab45b4",
    "name": "Google Users",
    "description": "Total number of Google Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "48fecdda-6319-46b7-802e-602d670b5729",
    "name": "Google Users who are granted Google Service Account Role",
    "description": "Google Users who are granted Google Service Account Role",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudServiceAccountBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "20036bee-96c6-40c1-b946-8d539b0d225f",
    "name": "Google Groups who are granted Google Cloud Roles",
    "description": "Google Groups who are granted Google Cloud Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9a109f3f-2b77-4087-9f5a-ec97d32eea79",
    "name": "Google Service Accounts which get access to resources via Google Group",
    "description": "Google Service Accounts which get access to resources via Google Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleWorkspaceGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3b11eeff-0413-4123-8353-8341b9ab45b4",
    "name": "Google Users with MFA disabled",
    "risk_level": "CRITICAL",
    "risk_explanation": "In general, with Multi-factor authentication (MFA) turned off user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Additionally, Google Workspace accounts often have access to a wide range of services and data, like emails, documents, and calendars. If an attacker gains access to one account, they can potentially access shared documents or send phishing emails from a trusted source, escalating the security breach within an organization. Thus, a compromised account without MFA protection can lead to a significant data breach. Finally, many industries and regulations require strong authentication methods to protect sensitive data. Not using MFA might lead to non-compliance with these standards, potentially resulting in legal and financial repercussions. Hence, a CRITICAL risk.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce mandatory MFA for all Google Workspace users and ensure compliance by conducting regular audits to identify and remediate non-compliant accounts.",
    "description": "Google Users with MFA disabled who are activated and created more than 30 days ago",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "94436464-edb9-4cab-8f92-f96a0b5a9e89",
    "name": "Google Groups",
    "description": "Total number of Google Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "eabbdb62-5e3c-45e3-ae3a-b0c1e548e924",
    "name": "Google Cloud Folders",
    "description": "Total number of Google Cloud Folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d5f46165-0ccc-4fd6-8aab-7c500e7a6fc0",
    "name": "Google Cloud Projects",
    "description": "Total number of Google Cloud Projects",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudProject",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e599391a-868a-4f6b-9fc3-0361e50166ec",
    "name": "Google Cloud Service Accounts",
    "description": "Total number of Google Cloud service Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "f45c28c3-9145-48f6-8fff-8d10b7e610fb",
    "name": "Active Directory Users created recently",
    "description": "Active Directory Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "152f35d1-9e34-4b69-87e8-4e1cff2962d4",
    "name": "Active Directory Groups created recently",
    "description": "Active Directory Groups created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c6968aff-5c1d-4805-b54c-5784b58251f4",
    "name": "Active Directory Managed Service Accounts created recently",
    "description": "Active Directory Managed Service Accounts created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryManagedServiceAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "created_at",
                    "string_value": "$COOKIE_RECENT_TIME"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "f209a2a0-a1e0-4a2d-af4b-d8be97fa7bb2",
    "name": "Active Directory Users",
    "description": "Total number of Active Directory Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "52b21ae7-6d32-48f7-906a-6d3c99f1d749",
    "name": "Active Directory Users with Admin permissions",
    "description": "Active Directory Users with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "1b938012-3d18-470b-ad6f-25efe0fd4e14",
    "name": "Active Directory Users with Admin permissions that are deactivated",
    "description": "Active Directory Users created more than 30 days ago that are deactivated but with Full Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "7cee463b-34ba-469f-b5e1-9d66a0d3c9cb",
    "name": "Active Directory Users that are Domain Admins",
    "description": "The Active Directory Users that are in the 'Domain Admins' group",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "domain_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "323cde3b-efdf-43bd-9d61-7928e5e7cc67",
    "name": "Active Directory Users that are deactivated but Domain Admins",
    "description": "Active Directory Users that are deactivated but in the 'Domain Admins' group",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Domain Admins"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "ddc054f5-7165-42b1-b0fa-e97ce701c43e",
    "name": "Active Directory Users that are Enterprise Admins but deactivated",
    "description": "Active Directory Users that are deactivated but in the 'Enterprise Admins' group",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Enterprise Admins"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "036ffc4e-7cda-4c53-ab71-1ea8975ab1b0",
    "name": "Okta Users that are deactivated and assigned Okta Groups with 'VPN' in name",
    "description": "Okta Users that are deactivated and assigned Okta Groups with 'VPN' in name",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "VPN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "deactivated_user_access"
    ]
  },
  {
    "id": "a40dcf3c-3ede-416a-a0b4-8266a810d658",
    "name": "Azure AD Users that are deactivated and assigned Azure AD Groups with 'VPN' in name",
    "description": "Azure AD Users that are deactivated and assigned Azure AD Groups with 'VPN' in the group name",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "VPN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "deactivated_user_access"
    ]
  },
  {
    "id": "7ef28692-0c6b-4e9f-bcd6-6e7cb533a145",
    "name": "Locked Active Directory Users",
    "description": "Locked Active Directory Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_locked",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f85a335e-7b9b-4a8a-a131-ace9781fe9db",
    "name": "Active Directory Users that are deactivated",
    "description": "Active Directory Users that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "180dca3a-a104-4f42-a3b4-c5b89fb49c9e",
    "name": "Active Directory Groups",
    "description": "Total number of Active Directory Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6d716410-2f8e-4c8c-8a72-00ab21ae82eb",
    "name": "Active Directory Security Groups",
    "description": "Total number of Active Directory Security Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_security_group",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "af2094b8-8b53-4bb1-b376-aff01fe2a24f",
    "name": "Active Directory System Groups",
    "description": "Total number of Active Directory System Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "System"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "da449f24-7ee3-4964-a06e-3edee4b0e0ef",
    "name": "Active Directory Global Groups",
    "description": "Total number of Active Directory Global Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Global"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2f46e71b-67cd-43b7-b44e-ab058d863c4c",
    "name": "Active Directory Domain Groups",
    "description": "Total number of Active Directory Domain Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Domain"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8ee59021-0acc-4da2-9c66-c97baa007e1a",
    "name": "Active Directory Universal Groups",
    "description": "Total number of Active Directory Universal Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Universal"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ec812cf0-bdf6-4f41-adb8-1ed5665db5ee",
    "name": "Active Directory App Basic Groups",
    "description": "Total number of Active Directory App Basic Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "App Basic"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2f96e176-24ae-478e-abc4-dc81c47b0031",
    "name": "Active Directory App Query Groups",
    "description": "Total number of Active Directory App Query Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "App Query"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "759ad7bd-5eb0-4efd-965b-7247517a2f6c",
    "name": "Active Directory OUs",
    "description": "Total number of Active Directory Organizational units",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryOrganizationalUnit",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "46b12c62-0888-4ccb-9b50-5c95039f4e18",
    "name": "Active Directory Domains",
    "description": "Total number of Active Directory Domains",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryDomain",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "878f7fb3-0ad4-4e7c-bb6d-46d778ae7bbe",
    "name": "Active Directory Managed Service Accounts",
    "description": "Total number of Active Directory Managed Service Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryManagedServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "9d6674c0-f6c0-4457-b504-9f9f36f941a9",
    "name": "Active Directory Grouped Managed Service Accounts",
    "description": "Total number of Active Directory Managed Service Accounts that are grouped",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryManagedServiceAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "grouped",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "cd27a199-c5d7-4a87-acbd-a3f02c087c09",
    "name": "GCP BigQuery Datasets",
    "description": "Total number of GCP BigQuery Datasets",
    "value_query": {
      "from_node_types": [
        {
          "type": "BigQueryDataset",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "40acbac0-4c61-4ee7-9fe2-3f400d6c9e8f",
    "name": "Active Directory Computers",
    "description": "Total number of Active Directory Computers",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryComputer",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "active_directory_domain",
              "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b49f0a7c-b2d9-4b42-985c-8ffe998d33e9",
    "name": "GCP BigQuery Tables",
    "description": "Total number of BigQuery tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "BigQueryTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f78e0faa-ed24-4f7b-9895-3133426eaf40",
    "name": "Active Directory Users with SQL Server access",
    "description": "Active Directory Users with access to one or more SQL Server databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1b54daeb-90cd-4f91-a5af-435c275f4324",
    "name": "Active Directory Users with no password required",
    "risk_level": "HIGH",
    "risk_explanation": "Setting the PASSWD_NOTREQD flag for a user account can pose several security risks:\n1. **Unauthorized Access**: If a user account does not require a password, it becomes easier for unauthorized individuals to gain access, especially if the account is known or easily guessable.\n2. **Weak Authentication**: Relying on accounts without passwords undermines the authentication process, making it simpler for attackers to exploit the account.\n3. **Increased Attack Surface**: If an account is used in services or applications, the lack of a password can provide an entry point for attacks, especially in environments with sensitive data or critical functions.\n4. **Compliance Violations**: Many regulatory frameworks require strong authentication measures. Accounts without passwords may lead to non-compliance with standards such as PCI-DSS, HIPAA, or GDPR.\n5. **Privilege Escalation**: If the account has elevated privileges, the risk of privilege escalation increases dramatically, potentially allowing attackers to perform actions that can compromise the entire system.\n6. **Propagation of Trust**: In environments with interrelated services, an account without a password might be leveraged to propagate trust across systems, leading to a wider breach.",
    "risk_remediation": "To mitigate these risks, it's advisable to avoid using the PASSWD_NOTREQD flag and to implement strong authentication mechanisms for all user accounts.",
    "description": "Total number of Active Directory Users with no password required",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LIST_ANY_ELEMENT_EQ",
              "property": "user_account_control",
              "string_value": "PASSWD_NOTREQD"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8f74e7f4-7212-40be-be40-520cfbeb1c3d",
    "name": "GCP BigQuery Datasets that are empty",
    "risk_level": "LOW",
    "description": "GCP BigQuery datasets containing no tables",
    "risk_explanation": "In Google Cloud Platform's (GCP) BigQuery, having datasets with no tables is not the best practice:\n1. **Resource Management**: Empty datasets can lead to unused resources, potentially contributing to unnecessary costs.\n2. **Access Control**: Empty datasets may inherit permissions, requiring careful review to ensure proper access controls and adhere to the principle of least privilege.\n3. **Query Performance**: While an empty dataset itself may not impact performance, numerous datasets could lead to increased metadata overhead during queries.\n\n4. **Data Governance**: Empty datasets should be considered in data governance practices, including monitoring access and auditing changes.\n\n5. **Project Organization**: Empty datasets might impact project clarity, emphasizing the importance of well-defined naming conventions and organizational guidelines.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and delete empty GCP BigQuery datasets to ensure efficient resource management, proper access control, and clear project organization.",
    "value_query": {
      "from_node_types": [
        {
          "type": "BigQueryDataset"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "1c17ed80-2648-457f-82fe-d81b260fa4b0",
    "name": "Google Cloud IAM Custom Roles not connected Users",
    "risk_level": "LOW",
    "risk_explanation": "Using Google Cloud IAM custom roles not connected to users can lead to:\n1. Lack of Accountability: Difficulty attributing actions to specific users, hindering auditing and incident response.\n2. Access Review Challenges: Complex access reviews, making it hard to ensure permissions align with business needs.\n3. Over-Privileged Access: Increased risk of users having more permissions than necessary, posing security risks.\n4. Complicated Role Management: Challenges in maintaining accurate and up-to-date access control information.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and connect all Google Cloud IAM custom roles to specific users, ensuring proper role assignment, accountability, and alignment with business needs.",
    "description": "The number of Google Cloud IAM custom roles not connected to a Google User",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "custom",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "4583a779-470d-4a66-b648-e574ad270d81",
    "name": "Google Groups with no active Users in 90 days",
    "description": "Google Groups that contain no Users active in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "GT",
                          "property": "last_login_at",
                          "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b8920ee0-3283-4f04-8f73-32ca3001a295",
    "name": "Google Groups without Users",
    "risk_level": "LOW",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and delete Google Groups that contain 0 users to minimize unnecessary access points and reduce attack surfaces.",
    "description": "Google Groups that contain 0 Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "reporting",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "dd47cdc5-bdb9-4f75-a312-4a0925fd324d",
    "name": "Google Cloud Users granted Owner role on any resource",
    "description": "Google Cloud Users granted Owner basic role on any resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "f4fd744c-a6ac-4410-9bb3-dc914b7e0da4",
    "name": "Google Service Accounts granted Owner role on any resource",
    "description": "Google Service Accounts granted Owner basic role on any resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "ec7a6930-0de9-4a53-ad1e-a27a2bf86dd6",
    "name": "Google Cloud Users granted Editor role on any resource",
    "description": "Google Cloud Users granted Editor basic role on any resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/editor"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "40e3589c-4f65-4558-8fae-3be3009091bb",
    "name": "Google Service Accounts granted Editor role on any resource",
    "description": "Google Service Accounts granted Editor basic role on any resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/editor"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "543e256a-2eb4-49fd-9fb7-90690a5adf20",
    "name": "Google Cloud Users granted Viewer role on any resource",
    "description": "Google Cloud Users granted Viewer basic role on any resource",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/viewer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "bbffedbe-a0cb-4fbd-a4f1-77b188869748",
    "name": "Google Cloud Users granted Service Account Key Admin role",
    "description": "Granting the roles/iam.serviceAccountKeyAdmin role to a User or Service Account that allows them to create, list, and delete keys for any Service Account in the project. This means that they could potentially access and modify sensitive resources or data that the service account has access to.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/iam.serviceAccountKeyAdmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account"
    ]
  },
  {
    "id": "a59926a4-172c-4493-b2d6-b796b756445e",
    "name": "Google Service Accounts granted Service Account Key Admin role",
    "risk_level": "LOW",
    "risk_explanation": "Granting the \"Service Account Key Admin\" role to Google Service Accounts can introduce security risks and operational challenges:\n1. Overly Permissive Access: The \"Service Account Key Admin\" role provides extensive permissions, including the ability to manage service account keys across the entire project. Granting this role to service accounts can result in over-privileged access, as it goes beyond what is typically needed for specific tasks.\n2. Increased Attack Surface: With the \"Service Account Key Admin\" role, compromise of a service account could have broader implications, potentially impacting the security of other service accounts and associated resources within the project.\n3. Risk of Unauthorized Key Creation: Service accounts with this role can create and manage keys for other service accounts. This capability could be misused, leading to the unauthorized creation of keys and potential abuse by malicious actors.\n4. Operational Complexity: Granting the \"Service Account Key Admin\" role to service accounts might result in operational complexity, as it requires careful management and monitoring to prevent accidental or malicious actions that could impact the security and stability of the project.\n5. Reduced Accountability: Assigning the \"Service Account Key Admin\" role to service accounts may make it challenging to attribute specific actions to individual users or entities, reducing accountability and hindering incident response efforts.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the \"Service Account Key Admin\" role to only those users or service accounts that absolutely require it, implement the principle of least privilege, and regularly audit role assignments to ensure compliance.",
    "description": "Granting the roles/iam.serviceAccountKeyAdmin role to a User or Service Account allows them to create, list, and delete keys for any Service Account in the project. This means that they could potentially access and modify sensitive resources or data that the Service Account has access to.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/iam.serviceAccountKeyAdmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "29d49531-c173-454a-9028-f43320acc669",
    "name": "Google Cloud Users with roles/Groups.member permission",
    "description": "Granting the roles/Groups.member permission to a user or service account allows them to add or remove members from any group in the project, which could potentially grant unintended access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/Groups.member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9cdde89c-1a74-4b17-8924-7eafba043ae5",
    "name": "Google Service Accounts with roles/Groups.member permission",
    "description": "Granting the roles/Groups.member permission to a user or service account allows them to add or remove members from any group in the project, which could potentially grant unintended access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "GoogleCloudIamRoleBinding",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "role_name",
                    "string_value": "roles/Groups.member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "79ee92a4-229e-4b5c-a1ad-bc48a03912c4",
    "name": "Google Cloud Users granted iam.serviceAccounts.actAs permission",
    "risk_level": "LOW",
    "risk_explanation": "Granting the iam.serviceAccounts.actAs permission to Google Cloud users can introduce significant security risks and challenges:\n1. Impersonation RiThe iam.serviceAccounts.actAs permission allows a user to impersonate a service account and perform actions on behalf of that service account. This capability poses a substantial security risk if not carefully managed, as it can lead to unauthorized access and potential abuse.\n2. Over-Privileged Access: Granting users the ability to act as any service account can result in over-privileged access. Users may gain access to sensitive resources and perform actions that go beyond their actual role or responsibilities.\n3. Difficulty in Monitoring and Auditing: Impersonation can make it challenging to monitor and audit user actions accurately. Tracking activities becomes more complex when users can act as different service accounts, potentially hindering security incident response and forensic analysis.\n4. Reduced Accountability: Allowing users to act as service accounts can reduce accountability, as it becomes harder to attribute specific actions to individual users. This lack of transparency can impede security investigations and audits.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the iam.serviceAccounts.actAs permission to only those users and service accounts that absolutely require it, implement the principle of least privilege, regularly audit permissions, and use logging and monitoring tools to track and attribute actions accurately.",
    "description": "An attacker who gains access to a user or service account with the iam.serviceAccounts.actAs permission can use it to impersonate another service account and potentially access sensitive information or perform unauthorized actions.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.serviceAccounts.actAs"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "3306891c-51f5-475e-b98e-5f3ef98daa9c",
    "name": "Google Service Accounts granted iam.serviceAccounts.actAs permission",
    "risk_level": "LOW",
    "risk_explanation": "Granting the iam.serviceAccounts.actAs permission to Google Service Accounts can introduce significant security risks and challenges:\n1. Impersonation RiThe iam.serviceAccounts.actAs permission allows a service account to impersonate other service accounts, potentially leading to unauthorized access and actions. If a service account is compromised, an attacker with this permission could escalate privileges and perform actions on behalf of other service accounts.\n2. Over-Privileged Access: Granting service accounts the ability to act as any other service account can result in over-privileged access. It allows a service account to perform actions that may go beyond its intended scope, leading to security and compliance issues.\n3. Difficulty in Auditing: Impersonation actions can complicate auditing and monitoring efforts. It becomes challenging to trace and attribute specific actions to the original service account, hindering accountability and making it difficult to conduct effective security reviews.\n4. Reduced Security Posture: Allowing service accounts to act as other service accounts broadens the attack surface. If one service account is compromised, the potential impact on the security posture of the entire project or organization increases.\n5. Potential for Abuse: Granting iam.serviceAccounts.actAs provides a powerful capability that could be abused. Malicious actors or unauthorized users gaining access to a service account with this permission could exploit it for unauthorized actions, data breaches, or disruption of services.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the iam.serviceAccounts.actAs permission to only those service accounts that absolutely require it, implement the principle of least privilege, regularly audit permissions, and use monitoring tools to track and log impersonation activities.",
    "description": "An attacker who gains access to a user or service account with the iam.serviceAccounts.actAs permission can use it to impersonate another service account and potentially access sensitive information or perform unauthorized actions.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.serviceAccounts.actAs"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6c0ca046-9e38-4733-992c-7839039be08b",
    "name": "Google Cloud Users granted role creation permission",
    "description": "An attacker who gains access to a user or service account with the iam.roles.create permission can use it to create a custom role with elevated permissions that they can later use to access sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.roles.create"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5b5e0cce-6d2b-438c-b692-70399be0e2f8",
    "name": "Google Cloud Users who can set IAM policies for a resource",
    "description": "An attacker who gains access to a user or service account with the iam.policy.set permission can use it to modify the policy for a resource to grant themselves or others access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.policy.set"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b233fc06-74e7-4b76-9ef8-f11fc879fc8d",
    "name": "Google Service Accounts who can set IAM policies for a resource",
    "description": "An attacker who gains access to a user or service account with the iam.policy.set permission can use it to modify the policy for a resource to grant themselves or others access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.policy.set"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "ba55357d-b3cd-4235-90f2-ce00bc42136b",
    "name": "Google Cloud Users who can attach an IAM role to Users and Groups",
    "description": "An attacker who gains access to a user or service account with the iam.roles.update permission can use it to modify the permissions associated with an existing role and potentially gain access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.roles.update"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e042a724-3da1-48e6-ae11-e115fbd73a0e",
    "name": "Google Service Accounts who can attach an IAM role to Users and Groups",
    "description": "An attacker who gains access to a user or service account with the iam.roles.update permission can use it to modify the permissions associated with an existing role and potentially gain access to sensitive resources or data.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam.roles.update"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "53d55273-7833-4271-8502-7da97c2d2a56",
    "name": "Google Cloud Users that are suspended",
    "description": "Number of Google Cloud Users marked as suspended",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "suspended",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "81711efb-6a9e-41d5-8043-2aff0cb105fa",
    "name": "Google Cloud Users that are archived",
    "description": "Number of Google Cloud Users marked as archived",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8ad82633-bb0c-4fa0-92be-74a95086ae7b",
    "name": "Google Users with no group assigned",
    "description": "Google Users that do not belong to a group",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceGroup"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9c33fee1-629f-4fbe-a519-492e6f34dfeb",
    "name": "Google Users with Admin permissions",
    "description": "Google Users that have Full Administrator permissions. Meaning that they have the Administrator setting enabled.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "461606b1-a7fb-44df-9bad-275fdb12d8fb",
    "name": "Google Cloud Storage buckets with uniform bucket-level access disabled",
    "description": "Google Cloud Storage buckets with uniform bucket-level access disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudStorageBucket",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "uniform_bucket_level_access_enabled",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5b434191-d85b-409c-94bb-57f5f4644f20",
    "name": "Google Cloud Key Rings",
    "description": "Total number of Google Cloud Keys Rings in all regions combined",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKeyRing",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "57f397c6-7ad7-439f-adee-e3cc74ad0a8c",
    "name": "Google Cloud Keys",
    "description": "Total number of Google Cloud Keys in all regions combined",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKey",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "f162c284-7b6e-4e08-827d-278f8cd0a833",
    "name": "Google Cloud Keys without purpose",
    "description": "Google Cloud Keys that have their purpose set to CRYPTO_KEY_PURPOSE_UNSPECIFIED",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKey",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "purpose",
                    "string_value": "crypto_key_purpose_unspecified"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "88180115-bafa-4851-8fc5-30b1c8721241",
    "name": "Google Cloud Symmetric Keys",
    "description": "Google Cloud Keys that have their purpose set to ENCRYPT_DECRYPT",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKey",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "purpose",
                    "string_value": "encrypt_decrypt"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f2352ff2-4b97-4295-9a6f-08963b34323c",
    "name": "Google Cloud Asymmetric with Signing Keys",
    "description": "Google Cloud Keys that have their purpose set to ASYMMETRIC_SIGN",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKey",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "purpose",
                    "string_value": "asymmetric_sign"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2e5bebe2-2cea-43a4-8bb2-b4a4d978ae5e",
    "name": "Google Cloud Asymmetric with Decrypt Keys",
    "description": "Google Cloud Keys that have their purpose set to ASYMMETRIC_DECRYPT",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudKMSKey",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "purpose",
                    "string_value": "asymmetric_decrypt"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f8bd11fa-9a44-444a-a844-0f6417c61a57",
    "name": "Active Directory Users with SQL Server write permissions",
    "description": "Active Directory Users with SQL Server write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "eb11ffc4-2ee8-4a2b-a5de-fcaf3958448b",
    "name": "Active Directory managed service accounts with SQL Server access",
    "description": "Active Directory managed service accounts with access to one or more SQL Server databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryManagedServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "2a01de1a-2443-4166-9d8c-f40d037269bd",
    "name": "Active Directory managed service accounts with SQL Server write permissions",
    "description": "Active Directory managed service accounts with SQL Server write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryManagedServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServer"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "63868c83-f457-4fe3-aaf0-ffff76b77bb8",
    "name": "SQL Server Tables created recently",
    "description": "SQL Server Tables created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerTable",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6c54ed70-db86-4108-be62-3e205dbb0c85",
    "name": "SQL Server Views created recently",
    "description": "SQL Server Views created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "SqlServerView",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7b2f6395-3235-4645-a626-e73059af30dd",
    "name": "Google Cloud VMs",
    "description": "Total number of Google Cloud Compute VMs",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualMachine",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "54085399-89d2-4679-a23b-22a45ab93ff0",
    "name": "Google Cloud VPCs",
    "description": "Total number of Google Cloud Compute VPCs",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualNetwork",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "7b6d54ba-1c0c-4cb1-b7fd-6479a6bab054",
    "name": "Google Cloud default VPCs",
    "description": "Total number of Google Cloud Compute VPCs that are configured using default settings",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualNetwork",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "default"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "04e8c93a-6418-470b-8f46-07b1e43e6f8a",
    "name": "Google Cloud custom VPCs",
    "description": "Total number of Google Cloud custom VPCs that are configured using custom settings",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualNetwork",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "custom",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "797e5a26-aa0f-490d-bac9-c87810424962",
    "name": "Google Cloud VPCs that are usable",
    "description": "Google Custom VPCs that are usable. Must have at least one subnetwork to be usable",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualNetwork",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "usable",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0f9e7860-ee4b-4f25-b979-266186b67cf4",
    "name": "Google Cloud Custom VPCs that are unusable",
    "description": "Google Cloud VPCs that are unusable. Must have at least no subnetworks to be unusable",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeVirtualNetwork",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "usable",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5967315e-1374-48df-8011-10f3664fae5a",
    "name": "Google Cloud Subnets",
    "description": "Total number of Google Cloud Compute Subnets",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeSubnet",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "32f35ed7-3a44-460e-baca-3e0c8c24f5a3",
    "name": "Google Cloud network Interfaces",
    "description": "Total number of Google Cloud Compute Network Interfaces",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeNetworkInterface",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c614bc52-5c9c-49f5-b0d8-d0dd8d5ba3b7",
    "name": "Google Cloud Network Interfaces with External Access",
    "risk_level": "LOW",
    "risk_explanation": "\"Google Cloud Network Interfaces with External Access\" pose a security risk because they expose potentially sensitive resources to the internet, increasing the attack surface. Without proper access controls and firewall rules, these interfaces can be targets for malicious actors seeking to exploit vulnerabilities or conduct unauthorized access. Exposed network interfaces may lead to data breaches, service disruptions, or compromise of critical infrastructure. To mitigate this risk, organizations must implement strict security policies, configure access controls, and employ network security best practices to limit external access to only what is necessary, protecting their resources from potential threats and breaches.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict external access by configuring firewall rules to allow only necessary traffic, implement strict access controls, and regularly audit network interfaces for compliance with security policies.",
    "description": "Google Cloud Compute Network Interfaces with External Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeNetworkInterface",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "external_access",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "010fb0e1-1863-42a5-a1ee-e04435835548",
    "name": "Google Cloud Compute Network Interfaces without External Access",
    "description": "Google Cloud Compute Network Interfaces without External Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudComputeNetworkInterface",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "external_access",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "394c7160-c00b-4f8d-ae2e-d21ccd38a292",
    "name": "Snowflake Users with ACCOUNTADMIN access",
    "description": "Snowflake Users that can assume the ACCOUNTADMIN role",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "ACCOUNTADMIN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "created_at": "2023-12-16T20:54:12.09723-05:00",
    "description": "Snowflake User that are Human",
    "id": "20c24c31-e923-4d38-886e-f8887c1c9637",
    "name": "Snowflake User that are Human",
    "result_type": "number",
    "risk_level": "NONE",
    "updated_at": "2023-12-16T20:54:12.097231-05:00",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "human"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "8749de0b-4a59-4355-a7c5-0536d22c1f48",
    "name": "Snowflake Non-Human Users",
    "description": "Snowflake Users that are not Human",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "not": true,
              "property": "user_type",
              "string_value": "human"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "created_at": "2023-12-16T20:55:10.443945-05:00",
    "description": "Snowflake Users that are Service Accounts",
    "id": "b1ad5e79-38c4-4036-a327-9d3561798fa5",
    "name": "Snowflake Users that are Service Accounts",
    "result_type": "number",
    "risk_level": "NONE",
    "updated_at": "2023-12-16T20:55:10.443945-05:00",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service account"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "service_account",
      "best_practice"
    ]
  },
  {
    "id": "9721df37-761d-4063-a2e7-9daf1d38e3c4",
    "name": "Snowflake Users with account Admin access but no email set",
    "risk_level": "LOW",
    "risk_explanation": "Granting Snowflake users account admin access without associated email addresses can introduce several challenges and security risks:\n1. Lack of Accountability: Without associated email addresses, it becomes difficult to tie specific account admin actions to individual users. This lack of accountability hinders auditing and tracking of user activities, making it challenging to identify who performed certain actions.\n2. Inability to Notify and Communicate: Email addresses are commonly used for user notifications, communication, and alerts. Users without email addresses may miss important messages or notifications related to system updates, security alerts, or other critical information.\n3. Limited Password Recovery Options: An associated email address is often used as a means of recovering passwords or facilitating account recovery in case of a forgotten password. Users without associated email addresses may face challenges in regaining access to their accounts if they forget their passwords.\n4. Security Concerns: Account admin access grants significant privileges, and without associated email addresses, it becomes harder to communicate security-related information, such as alerts about suspicious activities or potential security breaches.\n5. Inefficient User Management: Managing users without associated email addresses can be less efficient. Email addresses are commonly used for user identification, communication, and coordination, and not having this information may complicate user management tasks.\n6. Difficulty in Compliance Monitoring: Compliance standards often require the ability to trace and monitor user activities. Lack of associated email addresses makes it more challenging to demonstrate compliance with audit and regulatory requirements.",
    "risk_remediation": "Adhering to the best identity security and governance practices, ensure that all Snowflake users with ACCOUNTADMIN access have a valid email address set for accountability, communication, password recovery, security notifications, efficient user management, and compliance monitoring.",
    "description": "Snowflake Users that can assume the ACCOUNTADMIN role but do not have an email set. It is a best practice to have email for account recovery purposes.",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "email",
              "string_value": ""
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "ACCOUNTADMIN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "best_practice"
    ]
  },
  {
    "id": "86ed995a-e68d-4a3b-a96f-fe5be8a5a8f8",
    "name": "Snowflake Service Accounts with Account Admin access",
    "description": "Snowflake service accounts that can assume the ACCOUNTADMIN role",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service account"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "ACCOUNTADMIN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account"
    ]
  },
  {
    "id": "a56173ad-66d6-43a8-acd9-99ce4cd4cc9e",
    "name": "Snowflake Users with a default role of Account Admin",
    "risk_level": "HIGH",
    "risk_explanation": "Assigning the default role of 'Account Admin' to users in Snowflake can raise several significant concerns:\n1. Security Risks: Assigning 'Account Admin' to many users increases the risk of security breaches.\n2. Violates Least Privilege: This role grants more permissions than typically necessary, going against the least privilege principle.\n3. Audit Challenges: Monitoring and auditing changes is difficult when multiple users have high-level access.\n4. Risk of Unintended Changes: Users with extensive access might inadvertently alter important settings or data.\n5. Compliance Issues: Broad high-level access can conflict with regulatory compliance standards.",
    "risk_remediation": "Adhering to the best identity security and governance practices, assign users the least privilege necessary for their roles and regularly review and adjust permissions to ensure compliance and security.",
    "description": "Snowflake Users that have the ACCOUNTADMIN role set as their default role",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "default_role",
              "string_value": "ACCOUNTADMIN"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "privileged_access"
    ]
  },
  {
    "id": "65b32589-4bbf-40fd-ab02-cb3781b4ff09",
    "name": "Snowflake Roles without users assigned",
    "description": "Snowflake Roles with no users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "b912661a-e43e-4107-aa40-67208f1298b2",
    "name": "Snowflake Roles with no active users",
    "description": "Snowflake Roles with users assigned that have no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3dba4c94-631b-4e3d-8969-8d2db0f5dbc8",
    "name": "Google Cloud Roles with no active users",
    "description": "Google Cloud Roles with no users who have activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "description": "Okta Users that are deactivated but mapped to Snowflake Users",
    "id": "7cc12ae6-adeb-4b43-b2ee-8a1bf271eca4",
    "labels": [
      "deactivated_user_access"
    ],
    "name": "Okta Users that are deactivated and have Snowflake access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a941ff82-4e97-46d0-9198-a35a8d3ad0cc",
    "name": "Okta Users that are deactivated and have Salesforce Administrator access",
    "description": "Okta Users that are deactivated but mapped to the Salesforce 'System Administrator' profile",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "9117b2d0-ba38-48d1-b097-7638a2e32443",
    "name": "Snowflake Users without a default role",
    "risk_level": "LOW",
    "risk_explanation": "When Snowflake users don't have a default role assigned, it leads to several issues:\n1. Operational Inefficiency: Users without a default role must manually select an appropriate role each time they log in or execute tasks. This can be time-consuming and lead to reduced productivity.\n2. User Confusion: New or less experienced users might be unsure which role to select, leading to confusion and potential errors.\n3. Delayed Access: In the absence of a default role, users might experience delays in accessing necessary resources until they select the correct role.\n4. Increased Administrative Overhead: Admins may have to spend more time assisting users in selecting the right role, increasing the administrative burden.\n5. Potential for Incorrect Role Selection: Users might inadvertently choose a role with either too many or too few privileges, leading to security risks or hindered access to necessary functions.",
    "risk_remediation": "Adhering to the best identity security and governance practices, assign a default role to each Snowflake user based on their job function and access requirements to ensure operational efficiency, reduce user confusion, and minimize administrative overhead.",
    "description": "Snowflake Users with no default role set",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "property": "default_role",
              "not": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "4590a607-9e22-4b42-a936-092c7663e30b",
    "name": "Snowflake Users with no permissions",
    "risk_level": "LOW",
    "risk_explanation": "Having Snowflake users with no permissions can lead to several issues:\n1. Limited Functionality: Users with no permissions cannot perform any actions in Snowflake, rendering them unable to contribute to or access any data or projects.\n2. Increased Administrative Burden: Administrators may need to constantly manage permissions for these users, adding to their workload whenever these users need access.\n3. User Frustration: Users without permissions may experience frustration and delays, as they must request access each time they need to perform tasks.\n4. Inefficiency: The need to constantly request and grant access can lead to inefficiencies and delays in workflows and project timelines.\n5. Underutilization of Resources: Users with no permissions are underutilized resources, as they are unable to independently use Snowflake's capabilities.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and update user permissions to ensure all Snowflake users have appropriate access based on their roles and responsibilities, and remove any users who no longer require access.",
    "description": "Snowflake Users that do not have any permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "126a19af-9c45-43cc-a9a3-6b5c55546fb0",
    "name": "Snowflake Roles with no permissions",
    "risk_level": "LOW",
    "description": "Snowflake Roles that do not have any permissions",
    "risk_explanation": "Having roles in Snowflake with no permissions can lead to several issues:\n1. Redundancy and Confusion: Roles without permissions serve no practical purpose and can confuse users and administrators regarding their function and use.\n2. Inefficiency in Role Management: Administrators may waste time managing or reviewing these roles, which contribute nothing to security or operational efficiency.\n3. Complexity in Access Control: These roles add unnecessary complexity to the access control system, making it harder to understand and manage the overall permissions structure.\n4. Potential for Errors: The existence of such roles might lead to errors, like mistakenly assigning users to a non-functional role, thereby restricting their access.\n5. Underutilization of Snowflake Capabilities: Roles are meant to streamline access control and permissions management. Roles without permissions fail to leverage this aspect of Snowflake, underutilizing its capabilities.",
    "risk_remediation": "Adhering to the best identity security and governance practices, identify and remove Snowflake roles with no permissions to streamline role management, reduce complexity, and prevent potential errors.",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "fc9a4ff3-b553-4196-a6e4-6ac42de8f2ed",
    "name": "Snowflake Schemas without Managed Access enabled",
    "risk_explanation": "Not enabling Managed Access on Snowflake schemas can lead to several issues:\n1. Lack of Access Control: Without Managed Access, the control over who can access or modify the schema and its objects is less granular. This can lead to unauthorized access or modifications.\n2. Security Risks: The absence of Managed Access means that any user with access to the database can potentially create, alter, or drop objects within the schema, increasing the risk of accidental or malicious changes.\n3. Difficulty in Enforcing Data Governance: It becomes challenging to enforce data governance policies when access to schemas is not tightly controlled.\n4. Potential for Data Leakage: Without Managed Access, sensitive data within schemas might be more easily accessed by unauthorized users, leading to data leakage risks.\n5. Complexity in Managing Permissions: Administrators might have to implement and manage more complex and less efficient security models to compensate for the lack of Managed Access features.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable Managed Access on Snowflake schemas to centralize privilege management and ensure granular control over access and modifications.",
    "description": "Managed Access schemas centralize privilege management with the schema owner. This prevents object owners from granting further permissions on their objects to other roles.",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeSchema",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_managed_access",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "711dddeb-1234-443a-95dd-a0200de6ab5d",
    "name": "AWS IAM Users with programmatic access usage",
    "description": "Applications should be accessing resources via IAM roles, not IAM user access keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "programmatic_access_count",
                    "number_value": "0"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6083c8e0-144f-4d7c-b11b-074955e497bd",
    "name": "Snowflake Users with SYSADMIN permissions in Snowflake",
    "description": "Snowflake Users with SYSADMIN role in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "SYSADMIN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "90f82d0a-7907-43b5-90c9-519391f30587",
    "name": "Snowflake Users with Security Admin permissions in Snowflake",
    "description": "Snowflake Users with SECURITYADMIN role in Snowflake",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "SECURITYADMIN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5c8a3ce3-aba8-4cd0-9082-f01b9ccf6630",
    "name": "AWS IAM Users with with the iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions",
    "risk_level": "LOW",
    "risk_explanation": "Granting AWS IAM users both iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions can pose several risks:\n1. Elevated Privilege Risks: Users with iam:UpdateAssumeRolePolicy can alter the trust policies of roles, potentially granting access to unauthorized users or services. Combined with sts:AssumeRole, they could assume CRITICALly privileged roles not intended for their use.\n2. Security Breach Potential: If such a user's credentials are compromised, attackers could escalate privileges within the AWS environment, leading to significant security breaches.\n3. Audit and Tracking Challenges: Tracking changes made by users with these permissions can be difficult, complicating security audits and obscuring the source of unauthorized changes.\n4. Complex Access Control: Managing users with these broad permissions increases the complexity of access control and requires meticulous oversight to prevent misuse.\n5. Policy Circumvention: Users could potentially bypass intended access restrictions set up through IAM policies, undermining the security architecture.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions to a limited set of highly trusted administrative accounts, implement strict monitoring and logging of these permissions, and enforce multi-factor authentication (MFA) for these accounts.",
    "description": "An attacker with the iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions would be able to change the assume role policy document of any existing role to allow them to assume that role.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateAssumeRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "sts:AssumeRole"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "282585ec-496f-47d9-bba6-c768c05d4f51",
    "name": "AWS IAM Users with an inline policy that has iam:* for any resource",
    "description": "IAM Users have privilege to do everything in the AWS account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "Deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "document",
                          "string_value": "iam:*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "AwsIamPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "inline",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "d138fcda-fcde-4612-b9ef-39740af962e3",
    "name": "AWS IAM Policies that has iam:* for any resource",
    "risk_level": "LOW",
    "risk_explanation": "Granting iam:* permissions for any resource in AWS IAM policies can lead to significant issues:\n1. Excessive Permissions: This grants unrestricted access to all IAM actions, allowing the creation, modification, or deletion of users, roles, and policies, which could compromise security.\n2. Security Risks: If such a policy is assigned to a user or role, it increases the risk of both accidental and malicious actions that could severely impact the AWS environment.\n3. Violation of Least Privilege Principle: Best practices in security management recommend adhering to the least privilege principle. Granting iam:* on all resources violates this principle by providing more access than necessary.\n4. Potential for Unauthorized Access: With broad IAM permissions, a user or role could escalate their privileges or grant access to others inappropriately.\n5. Audit and Compliance Challenges: Such wide-ranging permissions make it difficult to track and audit actions within the environment, potentially leading to compliance issues.\n6. Difficulty in Managing Access Control: It becomes challenging to manage and understand access control when permissions are so broadly defined.",
    "risk_remediation": "Adhering to the best identity security and governance practices, replace iam:* permissions with more granular, role-specific permissions that adhere to the principle of least privilege, ensuring users and roles have only the necessary permissions required for their tasks.",
    "description": "These IAM policies enable users / roles attached to it to do everything in the AWS account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamPolicyStatement",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "Deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "effect",
                          "string_value": "deny",
                          "not": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "document",
                          "string_value": "iam:*"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "resource",
                          "string_value": "*"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "c221923b-c178-4ea8-bb84-18b9decc3579",
    "name": "AWS IAM Roles with with the iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions",
    "risk_level": "LOW",
    "risk_explanation": "Assigning both iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions to AWS IAM roles can pose significant risks:\n1. Privilege Escalation: The iam:UpdateAssumeRolePolicy permission allows a role to change the trust policy of any IAM role, potentially granting access to unauthorized entities. Combined with sts:AssumeRole, it can lead to privilege escalation where the role assumes higher privileges than intended.\n2. Security Vulnerabilities: If a role with these permissions is compromised, attackers could modify role policies to gain broader access, creating a significant security vulnerability.\n3. Complexity in Access Control: Managing roles with such powerful permissions is complex and can lead to configuration errors, inadvertently granting more access than necessary.\n4. Audit and Compliance Issues: It's challenging to track and audit the actions performed by roles with these permissions, potentially leading to difficulties in maintaining compliance with security standards.\n5. Potential for Policy Misconfiguration: There's a risk of misconfiguring trust policies, which could unintentionally expose sensitive resources or services.",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict the assignment of both iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions to highly privileged roles only, implement strict monitoring and logging of role changes, and enforce the principle of least privilege by regularly reviewing and auditing IAM policies and roles.",
    "description": "An attacker with the iam:UpdateAssumeRolePolicy and sts:AssumeRole permissions would be able to change the assume role policy document of any existing role to allow them to assume that role.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamGroupedPermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "iam:UpdateAssumeRolePolicy"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "sts:AssumeRole"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "8fbdfaf4-2120-4300-b6bf-7fda34a1bf7b",
    "name": "AWS IAM Users with programmatic access used recently",
    "description": "Applications should be accessing resources via IAM roles, not IAM user access keys. These access keys have been used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "programmatic_last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ad76593a-eecb-4019-bf62-70ae6ba1430a",
    "name": "AWS IAM Users with programmatic access not recently used",
    "description": "Applications should be accessing resources via IAM roles, not IAM user access keys. Additionally, these access keys aren't being actively used in last 90 days and are candidates for deletion.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "programmatic_last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0237fd31-2d72-4616-8170-1ca55c802475",
    "name": "Azure AD Users with Cloud Application Administrator permissions",
    "description": "If a threat actor obtains access to a Cloud Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these permissions, the actor can add alternative authentication material for direct access to resources using this credential.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Cloud Application Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "123bc195-ebf4-4f41-a4a7-6506f90365bb",
    "name": "Azure AD Guest Users with Cloud Application Administrator permissions",
    "description": "If a threat actor obtains access to a Cloud Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these permissions, the actor can add alternative authentication material for direct access to resources using these credentials.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Cloud Application Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "887152de-5414-4f32-837d-862d7c3bfaa1",
    "name": "Azure AD Users with Cloud Application Administrator permissions that are deactivated",
    "description": "Azure AD User created more than 30 days ago that are deactivated but have Cloud Application Administrator permissions. If a threat actor obtains access to a Cloud Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these permissions, the actor can add alternative authentication material for direct access to resources using these credentials.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Cloud Application Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "61e231a4-94ae-4025-8b6c-5ecd70035c0f",
    "name": "Azure AD Service Principals (Enterprise Apps) with Owner permissions",
    "description": "Azure AD Service Principals (Enterprise Apps) assigned Owner RBAC role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "privileged_access",
      "nonhuman_identity"
    ]
  },
  {
    "id": "16abd86f-8e39-4b81-ae43-07bb35eb8fe3",
    "name": "Azure AD Service Principals (Enterprise Apps) with User Access Administrator permissions",
    "description": "Azure AD Service Principals (Enterprise Apps) assigned User Access Administrator RBAC role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "User Access Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "ce821b68-0a9a-476b-9016-ad6c182e4985",
    "name": "Active Directory Users with SQL Database access that are deactivated",
    "description": "Active Directory Users with SQL Database access that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SqlServerDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "759a806f-5736-4e62-ac36-e280e185eea4",
    "name": "Google Groups without activated Users",
    "description": "Google Groups containing 0 activated Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "suspended",
                    "bool_value": false
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "bc27b509-4180-48e4-8bed-92ea758c403b",
    "name": "AWS IAM unused customer-managed policies",
    "description": "AWS IAM customer-managed policies that are not attached to a principal",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "inline",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customer_managed",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "attachment_count",
                    "number_value": "0"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "permissions_boundary_usage_count",
                    "number_value": "0"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e511dfbb-9a7c-418b-b804-efbf1cc7c023",
    "name": "AWS Accounts",
    "description": "Total number of AWS Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsAccount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f1a47dfd-46d4-484d-b104-cb4ebb936db9",
    "name": "GCP Organizations",
    "description": "Total number of GCP Organizations",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudOrganization",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9f30d72f-170f-4528-b0d1-bd1fa775cdba",
    "name": "Azure AD Guest Users assigned to 'Owner' role",
    "description": "Azure Guest Users assigned to 'Owner' role",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "f4465253-b530-4e90-8ba5-ff7aa88e0689",
    "name": "Azure AD Guest Users with Global Admin permissions",
    "description": "Azure Guest Users with Global Administrator permissions",
    "risk_remediation": "Adhering to the best identity security and governance practices, remove Global Administrator permissions from Azure AD Guest Users and assign least privilege roles based on necessity.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "guest",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Global Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "guest_user_access"
    ],
    "risk_level": "HIGH"
  },
  {
    "id": "e67868b0-a1a1-4a70-9888-0696fd0b70a6",
    "name": "Azure AD Users with Global Admin permissions",
    "description": "Azure Users with Global Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Global Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "dabd83a6-ccbd-4f85-b648-48acd45f7657",
    "name": "Snowflake nested roles",
    "description": "Snowflake roles that are assigned to other roles, creating a hierarchy",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "hierarchical_level",
              "number_value": "0"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "63066106-4ae2-471a-9e2e-6d1daca02719",
    "name": "AWS RDS instances with AWS IAM DB Authentication enabled",
    "description": "AWS RDS instances with AWS IAM DB Authentication enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsInstance",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "iam_authentication_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8c580323-e6ae-4364-90fe-30be3560abcd",
    "name": "AWS RDS instances with AWS IAM DB Authentication disabled",
    "description": "AWS RDS instances with AWS IAM DB Authentication disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "RdsInstance",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "iam_authentication_enabled",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2d857995-c2e8-4151-9070-bf0a976f4d41",
    "name": "Azure AD Users with direct permissions to SharePoint Folders, bypassing Azure AD Groups",
    "description": "This can be a sign of misconfigured permission mappings. It becomes challenging to track and control permissions when they are granted directly rather than through a group.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointFolder"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "AzureADGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1f827c56-13b3-476e-8b6a-a9c8e2283663",
    "name": "AWS EC2 Instances with IAM Role attached",
    "description": "AWS EC2 Instances with IAM Role instance profiles attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2Instance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "529b507f-4859-41cf-9022-959cf0a078f8",
    "name": "AWS EC2 Instances with IAM Role attached that grant Admin permissions",
    "description": "AWS EC2 Instances with IAM Role instance profiles attached that grant Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "EC2Instance",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "full_admin",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "aws_account_id",
                          "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "1b49ab50-fb76-45a4-b383-cde24b54040c",
    "name": "Okta Users with Google Cloud Storage delete permissions",
    "description": "Okta Users with Google Cloud Storage delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "1a909cc9-ada3-4f96-940e-3f8a5dbcd9fa",
    "name": "Okta Users with GCP BigQuery Table write permissions",
    "description": "Okta Users with GCP BigQuery write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "fd680759-6ab9-482e-a939-f6c58a01dfa9",
    "name": "Okta Users with GCP BigQuery Table delete permissions",
    "description": "Okta Users with GCP BigQuery Table delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "a99f3181-15b4-4743-80e6-dbc6dfcc26b6",
    "name": "Okta Users with access to Google Cloud Storage buckets that have uniform bucket-level access disabled",
    "description": "Okta Users with access to Google Cloud Storage buckets that have uniform bucket-level access disabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "uniform_bucket_level_access_enabled",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "71b1f9eb-e09e-43b0-b2bf-75df633f449c",
    "name": "Okta Users with access to Google Cloud KMS keys with decrypt permissions",
    "description": "Okta Users with access to Google Cloud KMS keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "33af044e-4320-4113-82af-8fdc8820598b",
    "name": "Okta Users with access to Azure Key Vault keys with decrypt permissions",
    "description": "Okta Users with access to Azure Key Vault keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "68895923-61e6-496d-8105-63ceb9db157f",
    "name": "Okta Users with access to AWS KMS keys with decrypt permissions",
    "description": "Okta Users with access to AWS KMS keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "5cc12ee6-f0f0-48b6-b2c2-97292dd9b309",
    "name": "Azure AD Users with access to Azure Key Vault keys with decrypt permissions",
    "description": "Azure AD Users with access to Azure Key Vault keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b4fc037a-fe27-468c-bae2-de8b36013d9c",
    "name": "Azure AD Users with access to AWS KMS Keys with decrypt permissions",
    "description": "Azure AD Users with access to AWS KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b6fc8e79-a98b-46e6-829b-e97e4b210d3d",
    "name": "OneLogin Users with access to Azure Key Vault keys with decrypt permissions",
    "description": "OneLogin Users with access to Azure Key Vault keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "37bc3d58-f43e-4c1f-b5cf-f7bdd47ac8c8",
    "name": "OneLogin Users with access to AWS KMS Keys with decrypt permissions",
    "description": "OneLogin Users with access to AWS KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6d88d76d-4ef1-4d5f-938c-361bad67d492",
    "name": "Active Directory Users with access to Azure Key Vault Keys with decrypt permissions",
    "description": "Active Directory Users with access to Azure Key Vault Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "86fdd04a-508d-4470-9af9-b2d7420acd86",
    "name": "Active Directory Users with access to AWS KMS Keys with decrypt permissions",
    "description": "Active Directory Users with access to AWS KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "kms:Decrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "d9b4c160-e9d9-4e32-a961-dfd62cf3390b",
    "name": "Okta Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "description": "Okta Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "1559c951-9e19-4e56-973e-7d0cc0eb1cba",
    "name": "OneLogin Users with access to Google Cloud KMS Keys with decrypt permissions",
    "description": "OneLogin Users with access to Google Cloud KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "d23d215f-98b7-4e29-a55e-a84409ab35e9",
    "name": "OneLogin Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "description": "OneLogin Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "71ff12b7-3335-4569-b137-fe068b390daa",
    "name": "Active Directory Users with access to Google Cloud KMS Keys with decrypt permissions",
    "description": "Active Directory Users with access to Google Cloud KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "15805b32-2433-4e79-a43b-f8f944b97b22",
    "name": "Active Directory Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "description": "Active Directory Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "cd8c8424-04a7-4e06-ae75-86d55a23e97e",
    "name": "Azure AD Users with access to Google Cloud KMS Keys with decrypt permissions",
    "description": "Azure AD Users with access to Google Cloud KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6df7c81d-7e7f-40dc-9b33-260c625400e1",
    "name": "Azure AD Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "description": "Azure AD Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "06d5508c-f057-4c06-8ad1-b46f7b7cea54",
    "name": "Google Users with access to Google Cloud KMS Keys with decrypt permissions",
    "description": "Google Users with access to Google Cloud KMS Keys with decrypt permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecrypt"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "d4e53bd1-2360-4f94-8f7d-fca2970d63fd",
    "name": "Google Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "description": "Google Users with access to Google Cloud KMS Keys with decrypt permission via delegation",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "605ffa98-f040-4a87-abea-d6271f8f3551",
    "name": "Google Service Accounts with GCP BigQuery delete permissions",
    "description": "Google Service Accounts with GCP BigQuery delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "9cda04db-01d1-45eb-8afb-62f58e1156d9",
    "name": "AWS Service Principals with S3 delete permissions",
    "description": "AWS Service Principals with delete permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "1605f7e1-fdca-4ad6-94a4-e81d5f7b7c64",
    "name": "AWS Service Principals with Redshift delete permissions",
    "description": "AWS Service Principals with delete permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "4de918e8-3834-4332-b6ce-f3c163e38342",
    "name": "AWS Service Principals with S3 update permissions",
    "description": "AWS Service Principals with update permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "1e71160c-2c4b-4cd8-a86c-f9806107d7e8",
    "name": "AWS Service Principals with Redshift update permissions",
    "description": "AWS Service Principals with update permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b3e1799d-c494-467f-826b-0b03da106311",
    "name": "AWS IAM Users with S3 delete permissions",
    "description": "AWS IAM Users with delete permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "93e6454b-0e52-4877-9a4c-cf31fee60b39",
    "name": "AWS IAM Users with S3 update permissions",
    "description": "AWS IAM Users with update permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "4c8dd6ae-3954-408b-bbf1-79f873e4ab4a",
    "name": "AWS IAM Users with RDS Postgres update permissions",
    "description": "AWS IAM Users with update permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "941eadf8-d49c-4ad8-996d-07cc58d01b38",
    "name": "AWS IAM Users with RDS Postgres delete permissions",
    "description": "AWS IAM Users with delete permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "54493b5e-7aa4-4c5b-841b-2da728d13e68",
    "name": "AWS IAM Users with Redshift update permissions",
    "description": "AWS IAM Users with update permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "e66c5ebc-0d3f-4752-aa06-e1db94a71b43",
    "name": "AWS IAM Users with Redshift delete permissions",
    "description": "AWS IAM Users with delete permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "e5aba405-6bca-4806-8b72-6d26fed40e5f",
    "name": "AWS IAM Users with RDS MySQL update permissions",
    "description": "AWS IAM Users with update permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "482d2189-a9a5-4357-ae08-6dc94635103d",
    "name": "AWS IAM Users with RDS MySQL delete permissions",
    "description": "AWS IAM Users with delete permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "975edb4e-230c-4759-a5cc-3a051365bdd5",
    "name": "AWS IAM Users with KMS update permissions",
    "description": "AWS IAM Users with update permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "91e37a18-0b4c-49c8-8d86-c1b6aa49cdab",
    "name": "AWS IAM Users with KMS delete permissions",
    "description": "AWS IAM Users with delete permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "30364070-665f-4e2b-ae26-b24c85f395a5",
    "name": "AWS IAM Roles with S3 delete permissions",
    "description": "AWS IAM Roles with delete permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "f300f690-91c9-4bfd-bd71-eeb399fdce82",
    "name": "AWS IAM Roles with S3 update permissions",
    "description": "AWS IAM Roles with update permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "f0022a49-490c-46ef-b2b1-7a7fb927dd4c",
    "name": "AWS IAM Roles with RDS Postgres update permissions",
    "description": "AWS IAM Roles with update permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "be27a8ec-506f-4308-ad22-7df248601bde",
    "name": "AWS IAM Roles with RDS Postgres delete permissions",
    "description": "AWS IAM Roles with delete permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "b8684770-97ae-4de5-9dca-7dbb2120784e",
    "name": "AWS IAM Roles with Redshift update permissions",
    "description": "AWS IAM Roles with update permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "b08252ad-79f1-495f-b0a0-93cab28217cc",
    "name": "AWS IAM Roles with Redshift delete permissions",
    "description": "AWS IAM Roles with delete permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "c54e7c64-3ff1-4737-bcaa-ef0d1b4dd9b7",
    "name": "AWS IAM Roles with RDS MySQL update permissions",
    "description": "AWS IAM Roles with update permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "53c09e93-eea5-4cd3-96a3-bfcb6f842e2f",
    "name": "AWS IAM Roles with RDS MySQL delete permissions",
    "description": "AWS IAM Roles with delete permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "2fca4c2e-4c3c-49ae-982d-9a6cc334cfa3",
    "name": "AWS IAM Roles with KMS update permissions",
    "description": "AWS IAM Roles with update permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "e4e1563d-6904-4faa-a84f-7f035eb54a06",
    "name": "AWS IAM Roles with KMS delete permissions",
    "description": "AWS IAM Roles with delete permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "965373dc-7c92-41f3-a265-5afe6d55d6bb",
    "name": "Okta Users with S3 delete permissions",
    "description": "Okta Users with delete permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "2cca3a00-e7d9-4996-a60e-6f85602536a3",
    "name": "Okta Users with S3 update permissions",
    "description": "Okta Users with update permissions on all objects in an S3 bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "9ec113e9-7075-4aa5-bb96-c4690019004c",
    "name": "Okta Users with RDS Postgres update permissions",
    "description": "Okta Users with update permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "91f96fed-50b0-4f89-b057-24dc2bc1e7c0",
    "name": "Okta Users with RDS Postgres delete permissions",
    "description": "Okta Users with delete permissions on RDS Postgres databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "9cc2c152-de08-4dfd-ac44-cff9a0f0ec54",
    "name": "Okta Users with Redshift update permissions",
    "description": "Okta Users with update permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "02f9482c-3cb1-46e6-80ba-ddca12f75ca5",
    "name": "Okta Users with Redshift delete permissions",
    "description": "Okta Users with delete permissions on Redshift databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RedshiftDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "fcf4f5c6-82d0-40bf-9ee8-5d360987500d",
    "name": "Okta Users with RDS MySQL update permissions",
    "description": "Okta Users with update permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "d96de6d7-a541-4908-ae52-f5c8ed3d6036",
    "name": "Okta Users with RDS MySQL delete permissions",
    "description": "Okta Users with delete permissions on RDS MySQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "b3696227-75d3-4dab-9d98-57c2f2a49810",
    "name": "Okta Users with KMS update permissions",
    "description": "Okta Users with update permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "4dfd7f74-ad53-44b2-8f67-8521e800c49f",
    "name": "Okta Users with KMS delete permissions",
    "description": "Okta Users with delete permissions on AWS KMS Customer Managed Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KmsCmk",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "1de33f6a-4a79-4ee0-b64b-541139d2daed",
    "name": "Azure AD Users with Sharepoint update permissions",
    "description": "Azure AD Users with update permissions on Sharepoint folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointFolder",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "c9d96965-6978-4fed-afde-649fa8c59da6",
    "name": "Azure AD Users with Sharepoint delete permissions",
    "description": "Azure AD Users with delete permissions on Sharepoint folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointFolder",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "78e726a1-060e-4e09-b831-b654e567e4af",
    "name": "Azure AD Users with update permissions on Azure Blob Storage",
    "description": "Azure AD Users with update permissions on Azure Blob Storage",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureBlobContainer",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "fb3ac386-26a2-483a-9a07-cd71afd8731c",
    "name": "Azure AD Users with delete permissions on Azure Blob Storage",
    "description": "Azure AD Users with delete permissions on Azure Blob Storage",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureBlobContainer",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "e44aa0c5-a545-4ee8-80bf-a5eda28a9854",
    "name": "Azure AD Users with update permissions on Azure Datalake",
    "description": "Azure AD Users with update permissions on Azure Datalake directories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeDirectory",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "c0c637d9-b50f-4557-a797-de5d798532b6",
    "name": "Azure AD Users with delete permissions on Azure Datalake",
    "description": "Azure AD Users with delete permissions on Azure Datalake directories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeDirectory",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "212ffc22-2634-4445-b953-d5bb8531ab3c",
    "name": "Azure AD Users with update permissions on Azure Keys",
    "description": "Azure AD Users with update permissions on Azure Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "96f65ecc-1189-4478-aeb2-2cc3ea8d764e",
    "name": "Azure AD Users with delete permissions on Azure Keys",
    "description": "Azure AD Users with delete permissions on Azure Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "507a62a5-7d63-4455-abdf-4145b58b11ca",
    "name": "Azure AD Enterprise Applications with Sharepoint update permissions",
    "description": "Azure AD Enterprise Applications with update permissions on Sharepoint folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointFolder",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "d102ebfe-b248-4126-98c4-0ff42a58e1c7",
    "name": "Azure AD Enterprise Applications with Sharepoint delete permissions",
    "description": "Azure AD Enterprise Applications with delete permissions on Sharepoint folders",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SharePointFolder",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "275c5920-138e-47ee-8f20-c88956afd4cc",
    "name": "Azure AD Enterprise Applications with update permissions on Azure Blob Storage",
    "description": "Azure AD Enterprise Applications with update permissions on Azure Blob Storage",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureBlobContainer",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3046265d-03d2-4e90-a79c-c0bef2f0d157",
    "name": "Azure AD Enterprise Applications with delete permissions on Azure Blob Storage",
    "description": "Azure AD Enterprise Applications with delete permissions on Azure Blob Storage",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureBlobContainer",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "8983b92d-639d-4ccb-b982-909afe537bae",
    "name": "Azure AD Enterprise Applications with update permissions on Azure Datalake",
    "description": "Azure AD Enterprise Applications with update permissions on Azure Datalake directories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeDirectory",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "ae3caf63-a6d5-4d1e-a725-dacec6800eb3",
    "name": "Azure AD Enterprise Applications with delete permissions on Azure Datalake",
    "description": "Azure AD Enterprise Applications with delete permissions on Azure Datalake directories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeDirectory",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6a788548-984f-4837-923a-2d76d617e9aa",
    "name": "Azure AD Enterprise Applications with update permissions on Azure Keys",
    "description": "Azure AD Enterprise Applications with update permissions on Azure Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "9e72be93-da35-40d4-877a-34048b258115",
    "name": "Azure AD Enterprise Applications with delete permissions on Azure Keys",
    "description": "Azure AD Enterprise Applications with delete permissions on Azure Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "6b5b43a4-1109-4e39-9bc2-adf0a5e72d1b",
    "name": "Google Users with update permissions on Google Storage Bucket",
    "description": "Google Users with update permissions on Google Storage Bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "c854af8f-915c-48dc-b422-ca09aa818000",
    "name": "Google Users with delete permissions on Google Storage Bucket",
    "description": "Google Users with delete permissions on Google Storage Bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "200f4699-b76d-4942-95ad-bc31398c786f",
    "name": "Google Users with update permissions on BigQuery Tables",
    "description": "Google Users with update permissions on BigQuery Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "03ed1ddf-585d-4d1c-8c48-55853f9bd106",
    "name": "Google Users with delete permissions on BigQuery Table",
    "description": "Google Users with delete permissions on BigQuery Table",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "3066a39b-4b8d-4238-819c-cce307668cd8",
    "name": "Google Users with update permissions on KMS Keys",
    "description": "Google Users with update permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "e553bfc9-f02b-4de9-bbf6-4b5d337aa1ad",
    "name": "Google Users with delete permissions on KMS Keys",
    "description": "Google Users with delete permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "cc426750-0550-4e0e-924a-60175fdaa036",
    "name": "Okta Users with update permissions on Google Storage Bucket",
    "description": "Okta Users with update permissions on Google Storage Bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "66df89f9-0c91-4ac3-81b1-6bba35c5d4e3",
    "name": "Okta Users with update permissions on KMS Keys",
    "description": "Okta Users with update permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "318f07c1-82b3-44e3-a97e-3c3600458655",
    "name": "Okta Users with delete permissions on KMS Keys",
    "description": "Okta Users with delete permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "da5d901d-b51d-436a-a6ac-194413454fa7",
    "name": "Google Service Accounts with update permissions on Google Storage Bucket",
    "description": "Google Service Accounts with update permissions on Google Storage Bucket",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "2faed48e-b310-4bc3-a1bc-933d84f461bc",
    "name": "Google Service Accounts with update permissions on BigQuery Tables",
    "description": "Google Service Accounts with update permissions on BigQuery Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "BigQueryTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "972037d5-7a91-40f2-90b5-bb8f2b97eee8",
    "name": "Google Service Accounts with update permissions on KMS Keys",
    "description": "Google Service Accounts with update permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "2ba387f2-1eb0-4115-a613-8614c9566965",
    "name": "Google Service Accounts with delete permissions on KMS Keys",
    "description": "Google Service Accounts with delete permissions on KMS Keys",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudKMSKey",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b421b5ab-ee13-4939-8318-fb93532df803",
    "name": "Okta Users with update permissions on Snowflake Databases",
    "description": "Okta Users with update permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "673cf8a3-0a33-4b25-9c5c-b788d5486cc7",
    "name": "Okta Users with delete permissions on Snowflake Databases",
    "description": "Okta Users with delete permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "16893fee-46bb-4346-b9f4-0b94e7710c21",
    "name": "Azure AD Users with update permissions on Snowflake Databases",
    "description": "Azure AD Users with update permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "84510a77-1087-48de-8d98-abef6d7f6487",
    "name": "Azure AD Users with delete permissions on Snowflake Databases",
    "description": "Azure AD Users with delete permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "45d77fca-6b2d-4cf8-b853-f9ee07f0b215",
    "name": "Snowflake Users with update permissions on Snowflake Databases",
    "description": "Snowflake Users with update permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "dd72d895-29d7-4514-95b9-ad2b9aff36f2",
    "name": "Snowflake Users with delete permissions on Snowflake Databases",
    "description": "Snowflake Users with delete permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "0ee8b7de-7848-4410-aed5-305966d4fb7a",
    "name": "Snowflake Roles with update permissions on Snowflake Databases",
    "description": "Snowflake Roles with update permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "6d396595-9b81-4e22-9b9b-823a971c7a53",
    "name": "Snowflake Roles with delete permissions on Snowflake Databases",
    "description": "Snowflake Roles with delete permissions on Snowflake Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "d75b1482-a8b3-4d05-ad5d-dc719831a9b8",
    "name": "Okta Users with update permissions on Salesforce Objects",
    "description": "Okta Users with update permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "1185c241-d57b-4913-b9f1-b5ae3c971423",
    "name": "Okta Users with delete permissions on Salesforce Objects",
    "description": "Okta Users with delete permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ce8957e9-35a7-4f32-879d-eb5821c6677a",
    "name": "Azure AD Users with update permissions on Salesforce Objects",
    "description": "Azure AD Users with update permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "263aa031-b59d-4e91-adac-4e9676eb1bbc",
    "name": "Azure AD Users with delete permissions on Salesforce Objects",
    "description": "Azure AD Users with delete permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "60aa421a-05e9-4924-a8ec-f72a9c3e4940",
    "name": "Salesforce Users with update permissions on Salesforce Objects",
    "description": "Salesforce Users with update permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "50b2ce42-0455-4c80-a4dc-3390eb066065",
    "name": "Salesforce Users with delete permissions on Salesforce Objects",
    "description": "Salesforce Users with delete permissions on Salesforce Objects",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceObject"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "abfbf01b-b7f8-4964-89e9-bffb8b39ad5a",
    "name": "External AWS AssumeRole relationship without setting ExternalID",
    "description": "External to Veza AWS accounts that can AssumeRole to one AWS account in Veza without setting ExternalID",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LIST_ALL_ELEMENTS_IN",
                    "property": "accounts_assumed_by",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST",
                    "not": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "trust_policy",
                    "string_value": "sts:ExternalId",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0825f0fa-9697-4ae7-aa2c-d3dc44b9359f",
    "name": "Google Service Accounts with Google Cloud Storage delete permissions",
    "description": "Google Service Accounts with Google Cloud Storage delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudStorageBucket",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b05401e5-77c4-4443-a0aa-915d140fc477",
    "name": "Azure Storage Accounts",
    "description": "Total number of Azure Storage Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureStorageAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "59204485-b462-4305-a9d0-77f37db8589f",
    "name": "Azure Blob Containers",
    "description": "Total number of Azure Blob Containers in Storage Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureBlobContainer",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d3004fcf-88a6-4216-baa2-dabd07dc09aa",
    "name": "Azure Blob Containers with container and blob data public read access",
    "description": "Total Azure Blob Containers with container and blob data public read access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureBlobContainer",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "public_access_enabled",
                    "string_value": "container"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "74a46e38-c499-4604-8161-e5fa080a37e9",
    "name": "Azure Blob Containers with blob data public read access",
    "description": "Total Azure Blob Containers with blob data public read access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureBlobContainer",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "public_access_enabled",
                    "string_value": "blob"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "3848cf17-ca8f-4316-9c40-98bdd2269585",
    "name": "Azure Blob Containers with no public read access",
    "description": "Total Azure Blob Containers with no public read access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureBlobContainer",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "public_access_enabled",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6c491b34-4b07-4475-afde-190fc453696a",
    "name": "Azure Blob Containers with data lake enabled",
    "description": "Azure Blob Containers with data lake enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureBlobContainer",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_lake_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2154cf21-71ee-4ab4-8471-52e2f66cb672",
    "name": "Azure Storage Accounts with public access",
    "description": "Azure Storage Accounts that allow public access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureStorageAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_blob_public_access",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "21aa4383-5fd5-40cc-9478-54bf126a923b",
    "name": "Azure Storage Accounts with shared key access",
    "description": "Azure Storage Accounts that allow shared key access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureStorageAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_shared_key_access",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9df9c3bd-a78e-43e7-82a6-26f4d961e0eb",
    "name": "Azure Storage Accounts with https traffic only enabled",
    "description": "Azure Storage Accounts with https traffic only enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureStorageAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "enable_https_traffic_only",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7c94f5b5-a020-448c-82cf-9d0bea263e69",
    "name": "Azure Storage Accounts with data lake enabled",
    "description": "Azure Storage Accounts with data lake enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureStorageAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_lake_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "025e828d-b25f-4872-aab9-cd7772b38055",
    "name": "Azure AD Users with Datalake Filesystem WRITE permissions",
    "description": "Azure AD Users with Datalake Filesystem WRITE permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeFilesystem",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "2df3a3b1-97a9-4f07-9a39-07aaca65588b",
    "name": "Azure AD Users with Datalake Filesystem READ permissions",
    "description": "Azure AD Users with Datalake Filesystem READ permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureDataLakeFilesystem",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_read_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9fa70727-f399-4bbb-b2e3-55cafa6ff576",
    "name": "Azure Vaults",
    "description": "Total number of Azure Vaults",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVault",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a56ca449-d4dd-4845-b614-c45046b6d259",
    "name": "Azure Vaults with RBAC enabled",
    "description": "Azure Vaults with RBAC Authorization model enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVault",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "rbac_authorization_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0a7c383d-a853-46ce-8c11-42af14bfe3e4",
    "name": "Azure Vaults with Purge Protection",
    "description": "Azure Vaults with Purge Protection Enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVault",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "purge_protection_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2de33c44-807e-4986-bbe1-02e90fa51e2b",
    "name": "Azure Vaults with Disk Encryption",
    "description": "Azure Vaults with Disk Encryption Enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVault",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "disk_encryption_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b802aa67-8f29-4700-965f-e5d6c21a7ed2",
    "name": "Azure Vaults with Deployment Enabled",
    "description": "Azure Vaults with Deployment Enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureVault",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "deployment_enabled",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d05895ea-ec98-4ded-a2bf-a4223b0d4bb1",
    "name": "Azure Keys",
    "description": "Azure Keys in all vaults",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureKey",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "acca7679-40d7-40e1-84f6-b16c1ce84094",
    "name": "Azure Keys with export enabled",
    "description": "Azure Keys that are exportable",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureKey",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "exportable",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "60f340e5-97e1-40e9-88ce-27f6dfd5314a",
    "name": "Azure Secrets",
    "description": "Total number of Azure Secrets in all vaults",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureSecret",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "b2d3ac0f-104d-4e5d-a9aa-a5ec008fd66c",
    "name": "Azure Certificates",
    "description": "Total number of Azure Certificates in all vaults",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureCertificate",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ]
  },
  {
    "id": "53f585b9-363c-40ef-889e-1ac7dd74c5bd",
    "name": "Oracle Cloud Groups without Users",
    "description": "Oracle Cloud Groups that contain 0 Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OracleCloudIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_ORACLE_CLOUD_TENANCY_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OracleCloudIamUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "8e9224e2-67ea-40cb-ac5a-cc788ffc4cb6",
    "name": "Oracle Cloud Users that are deactivated",
    "description": "Oracle Cloud Users that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OracleCloudIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_ORACLE_CLOUD_TENANCY_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_disabled",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2004da53-838c-4ddc-bc95-47ab04ce6364",
    "name": "Oracle Cloud Users that are not federated",
    "description": "Oracle Cloud Users not marked as federated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OracleCloudIamUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_ORACLE_CLOUD_TENANCY_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "federated",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7bbcaa73-d741-48cb-8417-dd254fe1eb6b",
    "name": "Oracle Cloud Users with no group assigned",
    "description": "Oracle Cloud Users that do not belong to a group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OracleCloudIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_ORACLE_CLOUD_TENANCY_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OracleCloudIamGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "All Domain Users",
                    "not": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "767fa41c-7b81-44d1-bd01-cd9870199f64",
    "name": "Oracle Cloud Groups without activated Users",
    "description": "Oracle Cloud Groups that contain 0 activated Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OracleCloudIamGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_ORACLE_CLOUD_TENANCY_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OracleCloudIamUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_disabled",
                    "bool_value": false
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "d4f33322-b0fb-4200-b616-d72117674cb6",
    "name": "Snowflake Users with dormant access to databases",
    "description": "Snowflake Users that have not accessed any databases they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": false
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "874893eb-6690-4a70-863a-8a8aca4d3f48",
    "name": "Snowflake Users with dormant access to tables",
    "description": "Snowflake Users that have not accessed any tables they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": false
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3d418bc1-f03c-4ba8-8d18-9eef68db2541",
    "name": "Snowflake Users with dormant access to views",
    "description": "Snowflake Users that have not accessed any views they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": false
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeView"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "37563e37-2a90-4b65-8923-3918e8088a41",
    "name": "Snowflake roles with dormant access to databases",
    "description": "Snowflake roles that have not accessed any databases they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c44a444e-94f6-4751-bc8e-20248a89d99e",
    "name": "Snowflake roles with dormant access to tables",
    "description": "Snowflake roles that have not accessed any tables they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "248dd884-9145-486d-b6e6-668264ec2a98",
    "name": "Snowflake roles with dormant access to views",
    "description": "Snowflake roles that have not accessed any views they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeView"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e44d0abe-08d9-4747-bfed-5b92c190b94e",
    "name": "AWS IAM users with dormant access to S3 buckets",
    "description": "AWS IAM users that have not accessed any S3 buckets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "89ac7b34-f251-4749-bc84-3484ee613822",
    "name": "AWS IAM users with dormant access to Secrets Manager secrets",
    "description": "AWS IAM users that have not accessed any Secrets Manager secrets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SecretsManagerSecret"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "58f9b6ab-4bc1-45cd-8221-c56c85461c1d",
    "name": "AWS IAM roles with dormant access to S3 buckets",
    "description": "AWS IAM roles that have not accessed any S3 buckets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3650b812-2ca1-4b82-83e2-f36f6b4a4fb2",
    "name": "AWS IAM roles with dormant access to Secrets Manager secrets",
    "description": "AWS IAM roles that have not accessed any Secrets Manager secrets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SecretsManagerSecret"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "664bdb39-4e4c-4d47-a0cd-088c9690828a",
    "name": "Okta Users that have not accessed any of the Apps assigned to them",
    "description": "Okta Users that have not accessed any of the Apps assigned to them",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaApp"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "19a119c2-e1cf-4416-98cd-58e0f816df75",
    "name": "Okta users with dormant access to AWS S3 buckets",
    "description": "Okta users that have not accessed any AWS S3 buckets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a30ba4d5-0ddd-4f73-a383-833f1b6185a9",
    "name": "Okta users with dormant access to AWS Secrets Manager secrets",
    "description": "Okta users that have not accessed any AWS Secrets Manager secrets they have permissions on",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 0,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SecretsManagerSecret"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9394f184-a442-4f01-8cec-fbf082c6b884",
    "name": "Databricks Workspaces",
    "description": "Total number of Databricks Workspaces",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksWorkspace"
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "18b0e463-0f22-4b0d-b4bf-760d9c45f202",
    "name": "Databricks local users",
    "description": "Total number of Databricks local users",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser"
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cbefde20-59c5-418a-b3b2-1de81945c9d3",
    "name": "Databricks Local Users that are deactivated",
    "description": "Total number of Databricks Local Users that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_disabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "920055a1-6413-4d9e-8fdd-f163d49f35f7",
    "name": "Databricks Users with Workspace Admin permissions",
    "description": "Databricks Users with Workspace Administrator permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "full_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "1c962fe1-d5c2-4139-a174-3ce49b8bba49",
    "name": "Databricks Local Users with delete permissions",
    "description": "Databricks Local Users with delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "41f9febb-8a13-4f48-8a65-87d92ef9cade",
    "name": "Databricks Local Users with write permissions",
    "description": "Databricks Local Users with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "41d4b6da-5ac9-4709-ace9-3b9867091e6b",
    "name": "Databricks Groups",
    "description": "Total number of Databricks Local Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "21bfc617-5806-4c9c-9e8c-73d33b7dbf34",
    "name": "Databricks Catalogs",
    "description": "Total number of Databricks Catalogs",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksCatalog"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4f249918-3277-410e-8e02-48fe072c8836",
    "name": "Databricks Schemas",
    "description": "Total number of Databricks Schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksSchema"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "73b2a029-9d41-47fa-ac64-77bd5d343b7f",
    "name": "Databricks Tables",
    "description": "Total number of Databricks Tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksTable"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3defe142-35cd-4841-b28f-a22d0c393dce",
    "name": "Databricks Views",
    "description": "Total number of Databricks Views",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksView"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "00dcd7a2-2df8-49f0-ad51-cd7167216bda",
    "name": "Databricks Users with OWN privilege on an object",
    "description": "Databricks Users with OWN privilege on an object",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "OWN"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6cb917f7-b5ed-434c-8ee1-26448b022422",
    "name": "Azure AD Users with Databricks access",
    "description": "Azure AD Users with access to one or more Databricks resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d37a221d-3314-4785-afa4-10186679d834",
    "name": "Azure AD Users with Databricks write permissions",
    "description": "Azure AD Users with Databricks data write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_write_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "bb76dbd2-da4c-46b4-a1c9-d035173ff33d",
    "name": "Azure AD Users with Databricks delete permissions",
    "description": "Azure AD Users with delete permissions in Databricks",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "edb2787f-eb7a-4311-bb50-4425832478b0",
    "name": "Azure AD Users with Databricks workspace owner permissions",
    "description": "Azure AD Users with workspace owner permissions in Databricks",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DatabricksUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "full_admin",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "04a11976-a3bb-495b-9254-f128c18028dc",
    "name": "Databricks Groups without Users",
    "description": "Databricks Groups with no Users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DatabricksUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "ce4a1a62-3981-42e2-bc03-1bdf1eec033c",
    "name": "Databricks Users with no permissions",
    "risk_level": "LOW",
    "risk_explanation": "Having Databricks users with no permissions can lead to several challenges:\n1. Limited Functionality: Users without permissions cannot perform any actions or access any data in Databricks, significantly limiting their ability to contribute or collaborate.\n2. Increased Administrative Burden: Administrators may need to frequently update permissions for these users, adding to their workload each time access is required.\n3. User Frustration and Inefficiency: Users may experience frustration and delays as they must request access for every task, leading to inefficiencies in project workflows.\n4. Underutilization of Databricks: Users without permissions are unable to utilize the features and capabilities of Databricks, leading to underutilization of the platform's potential.\n5. Potential for Workflow Bottlenecks: The need for constant permission requests and approvals can create bottlenecks in project timelines and workflows.",
    "risk_remediation": "Adhering to the best identity security and governance practices, review and assign appropriate permissions based on user roles and responsibilities, ensuring that all users have the necessary access to perform their tasks efficiently.",
    "description": "Databricks Users that do not have any permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "DatabricksUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Databricks"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice"
    ]
  },
  {
    "id": "4f8b648d-ece0-4caa-bf8a-1f3a9cb8d41a",
    "name": "Salesforce Users",
    "description": "Total number of Salesforce Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9ee421ad-0dec-418a-a08d-a31c063c24d5",
    "name": "Salesforce regular Groups",
    "description": "Total number of Salesforce regular Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Regular"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "96f62092-f137-491c-9938-bcd5950b1ec7",
    "name": "Salesforce Accounts",
    "description": "Total number of Salesforce Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "37a89ab4-a165-422e-88ef-afb1f4129b2b",
    "name": "Salesforce permission sets without Users attached",
    "description": "Salesforce permission sets not attached to any Salesforce Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "6e3d99b8-cc13-4a7f-a1cb-4713a8b1cf5d",
    "name": "Salesforce Profiles without Users attached",
    "description": "Salesforce Profiles without Users attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "b14e4916-ec32-4d27-8e9d-af25b1e76124",
    "name": "Salesforce Users not in any regular Groups",
    "description": "Salesforce Users not in any regular Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceGroup",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Regular"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "46cc9ae4-128f-47eb-8b8a-e2d274d3cca4",
    "name": "Salesforce Regular Groups without users",
    "description": "Salesforce Regular Groups with no active users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceGroup",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "group_type",
                    "string_value": "Regular"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "no_assigned_users"
    ]
  },
  {
    "id": "64214793-e711-4166-8499-94dbf1d8812e",
    "name": "Salesforce Users that have not logged-in recently",
    "description": "Salesforce Users that are activated and have not logged-in in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fb1f0c09-c0d0-4f2e-adbf-86089975dd7c",
    "name": "Salesforce Users with ModifyAllData access",
    "description": "Salesforce Users who can modify all data",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "c18774c3-09e8-42c4-b50b-52ef7af11c09",
    "name": "Salesforce Users with ViewAllData access",
    "description": "Salesforce Users who can view all data",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "viewalldata"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8d8933f3-13ff-46ee-be88-1b23691499db",
    "name": "Salesforce Users with ViewAllRecords account access",
    "description": "Salesforce Users who can view all accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "SalesforceAccount.viewallrecords"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "819fa6f1-840f-451b-8371-a9aa5368602a",
    "name": "Salesforce Users with ModifyAllRecords account access",
    "description": "Salesforce Users who can modify all accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "SalesforceAccount.modifyallrecords"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7d6444e8-43ab-49e0-86d8-94a701f1b377",
    "name": "Salesforce Users with the System Administrator profile",
    "description": "Salesforce Users with the System Administrator profile",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceProfile",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "6544110b-06ef-4d53-a634-a6056d469528",
    "name": "Salesforce Permission sets that grant ModifyAllData access",
    "description": "Salesforce Permission sets that grant modify all data access",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "modifyalldata"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "89e6e691-d386-45b6-b91a-840bb04b92d9",
    "name": "Salesforce Permission sets that grant ViewAllData access",
    "description": "Salesforce Permission sets that grant view all data access",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "viewalldata"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0b3c738e-7457-4c33-9f4d-f6476018043a",
    "name": "Salesforce permission sets that grant ViewAllRecords access to accounts",
    "description": "Salesforce permission sets that grant view all records access to accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "SalesforceAccount.viewallrecords"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fccfcd92-b596-4c19-9a0e-5f92415bfd29",
    "name": "Salesforce Permission sets that grant ModifyAllRecords access to accounts",
    "description": "Salesforce Permission sets that grant modify all records access to accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "SalesforceAccount.modifyallrecords"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b34cf428-3c92-45fc-9808-8f9c0b83ac37",
    "name": "Box users with Admin privileges on enterprise",
    "description": "A list of Box users who have an Administrator or Co-Administrator role on enterprise",
    "value_query": {
      "from_node_types": [
        {
          "type": "BoxUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "full_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e3f2af34-dbb3-45c2-b20f-ab2c0017e4f7",
    "name": "Box Folders accessible by external collaborators",
    "risk_level": "LOW",
    "risk_explanation": "This is a security risk because it exposes sensitive data to individuals outside your organization's control. External collaborators may inadvertently mishandle or share confidential information, leading to data breaches or leaks. An organization cannot extend it's oversight to External Collaborators. Without proper oversight, it's challenging to ensure these collaborators adhere to your organization's security policies. Additionally, their devices or accounts may be compromised, potentially granting unauthorized access to your data.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, restrict access to Box Folders to internal users only, implement strict access review processes, and enforce data-sharing policies that require managerial approval for any external collaboration.",
    "description": "A list of Box Folders owned by users who are part of the enterprise, accessible by those who are not",
    "value_query": {
      "from_node_types": [
        {
          "type": "BoxFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_external_collaborators",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "578113bc-78b7-48ee-8b90-9295617e1521",
    "name": "ServiceNow Users",
    "description": "Total number of ServiceNow Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "61a754a0-00f6-4cdc-ac56-1637777adeb3",
    "name": "ServiceNow Groups",
    "description": "Total number of ServiceNow Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "37004d0b-52bd-4186-9f84-91a6b7813119",
    "name": "ServiceNow Groups without users",
    "description": "ServiceNow Groups not containing any users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "99a1de24-0251-4901-9f69-7c6f5b9874a0",
    "name": "ServiceNow Groups without active users",
    "risk_level": "LOW",
    "risk_explanation": "Having ServiceNow groups without active users can lead to several issues:\n1. Resource Wastage: Groups without active users consume system resources unnecessarily, leading to clutter and inefficiency in the system.\n2. Management Overhead: Maintaining and auditing these groups adds unnecessary overhead for administrators, as they have to manage groups that serve no operational purpose.\n3. Confusion and Inefficiency: The presence of inactive groups can cause confusion for users and administrators, making it harder to identify and use relevant, active groups efficiently.\n4. Security and Compliance Risks: Inactive groups might still be tied to permissions or roles, posing a risk if they are not regularly reviewed and cleaned up, potentially leading to security and compliance issues.\n5. Hinders Accurate Reporting and Analysis: Having inactive groups can skew reporting and analytics within ServiceNow, leading to inaccurate insights about user activities and group utilization.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and remove ServiceNow groups without active users to eliminate resource wastage, reduce management overhead, prevent confusion, mitigate security and compliance risks, and ensure accurate reporting and analysis.",
    "description": "ServiceNow Groups with no active users",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "969c77ad-8e7e-4ace-bca2-fcaaff50f826",
    "name": "ServiceNow Users that have not logged-in recently",
    "risk_level": "LOW",
    "risk_explanation": "These pose a security risk because dormant accounts are potential targets for unauthorized access. These accounts may have weak passwords or be forgotten, making them susceptible to compromise. Additionally, they can still have access to sensitive data and systems, potentially leading to data breaches, misuse or non-compliance.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, deactivate or remove ServiceNow accounts that have not logged in within the last 90 days and implement a regular review process to identify and address dormant accounts.",
    "description": "ServiceNow Users that are activated and have not logged-in in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e47fd3b1-eb1d-4a72-8d05-d0097dc551ac",
    "name": "ServiceNow Users with the Admin role",
    "description": "ServiceNow Users with the Administrator role",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "cc32de82-3c72-408c-8134-482a149aea51",
    "name": "Okta Users with ServiceNow access",
    "description": "Okta Users with access to one or more ServiceNow instances",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "493d2a2e-943f-4da5-9623-fd010e3d7431",
    "name": "Okta Users with ServiceNow Admin role",
    "description": "Okta Users with ServiceNow Administrator tole in ServiceNow",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "2b7b8216-d50a-4104-b8e2-e229aba0684a",
    "name": "Okta Users with ServiceNow Admin role that are deactivated",
    "description": "Okta Users created more than 30 days ago that are deactivated but with Administrator role in ServiceNow",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ServiceNowRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "4c833875-9b00-44db-8717-64a2f641fc85",
    "name": "ServiceNow Users with MFA disabled",
    "risk_level": "CRITICAL",
    "risk_explanation": "With Multi-factor authentication (MFA) turned off user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Additionally, ServiceNow can contain critical business data, including customer information, business operations details, and potentially confidential corporate data. If an attacker gains access to one ServiceNow account, they can potentially access shared documents or send phishing emails from a trusted source, escalating the security breach within an organization. Thus, a compromised account without MFA protection can lead to a significant data breach. Finally, many industries and regulations require strong authentication methods to protect sensitive data. Not using MFA might lead to non-compliance with these standards, potentially resulting in legal and financial repercussions. Hence, a CRITICAL risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce mandatory MFA for all ServiceNow users, especially those accounts created more than 30 days ago, and regularly audit compliance.",
    "description": "ServiceNow Users without Multifactor authentication (MFA) enabled who are activated and created more than 30 days ago",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "7151d218-ff34-4bec-92bd-20c89fe99468",
    "name": "ServiceNow Service Accounts",
    "description": "ServiceNow Users with 'Web Service Access Only' flag enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "web_service_access_only",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "956ad6ba-4687-42cc-ba76-5f05fd0f15ee",
    "name": "ServiceNow Service Accounts that are deactivated",
    "description": "ServiceNow Users with 'Web Service Access Only' flag enabled and are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "web_service_access_only",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "6b107aef-f5cf-4d36-b30d-0d79144394ca",
    "name": "ServiceNow Internal Integration Users",
    "description": "ServiceNow Users with 'Internal Integration User' flag enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceNowUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "internal_integration_user",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "05b099e1-d4be-4b72-b765-c71707b7551e",
    "name": "AWS Cognito Identity Pools that allow unauthenticated identities",
    "description": "AWS Cognito Identity Pools that allow unauthenticated identities by providing a unique identifier and AWS credentials for users who do not authenticate with an identity provider.",
    "value_query": {
      "from_node_types": [
        {
          "type": "CognitoIdentityPool",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allows_unauthenticated_identities",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fb8fee61-0709-4fe8-9374-47a8124c5b0c",
    "name": "AWS IAM Roles that can be assumed by AWS Cognito Identity Pool identities",
    "description": "AWS IAM Roles that can be assumed by AWS Cognito Identity Pool identities, including authenticated or unauthenticated roles, and those that are based on rules.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "CognitoIdentityPool",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                }
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "AwsIamEffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "be851476-54ae-4a64-a58a-30ad7ff0c330",
    "name": "AWS IAM Users with Lambda permissions",
    "description": "AWS IAM Users with permissions on AWS Lambda.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "LambdaResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a1d06d1c-1545-4628-8b96-6b4c6078176d",
    "name": "AWS IAM Roles with Lambda permissions",
    "description": "AWS IAM Roles with permissions on AWS Lambda.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "LambdaResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "839c83b7-9d7d-49b5-bd3c-7c75e3e54e46",
    "name": "GitHub Users",
    "description": "Total number of GitHub Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6d7d1c45-09ba-46f6-bb5c-b5583c490776",
    "name": "GitHub Outside Collaborators",
    "description": "Total number of GitHub Outside Collaborator",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "guest",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0759ad10-0978-4e98-b32d-3ee5e2986310",
    "name": "GitHub Organization Members",
    "description": "Total number of GitHub Users that are members of an organization",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "guest",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "88d9ec53-58f0-46db-936c-963560c453a6",
    "name": "GitHub Users with Organization Admin",
    "description": "GitHub Users who have Administrator role on the organization",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubOrganization"
              }
            ],
            "path_required_node_types": [
              {
                "type": "GithubRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "adbfcbfb-331f-4e13-8c53-90cfa95e30ee",
    "name": "GitHub Users with Repository Admin",
    "description": "GitHub Users who have Administrator role on the repository",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ],
            "path_required_node_types": [
              {
                "type": "GithubRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2c28ef08-a56b-483a-b2d2-c9c331d9a3b5",
    "name": "GitHub Public Repositories",
    "description": "GitHub Organization repositories that are not set to private, and accessible to everyone",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "private",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3d2a40fb-be6a-429b-9a81-8d771a6d196f",
    "name": "GitHub Public Repositories Excluding Forks",
    "description": "GitHub Organization repositories that are public and not forked from an upstream repository",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "private",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "fork",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a72ab1de-c93b-4c2f-8c15-b7b7cc3b46e2",
    "name": "Okta Users with GitHub access",
    "description": "Okta Users with GitHub access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "d501b38a-477d-4a7c-9c1d-f74bf123edc6",
    "name": "GitHub Users without Okta Identity",
    "description": "GitHub Users not connected to an Okta Identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "977f11d3-4651-4a46-acfc-5b5d62fdbfbc",
    "name": "GitHub Users with inactive Okta Identity",
    "description": "GitHub users connected to Staged, Suspended, or Deactivated Okta Identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "okta"
      }
    ],
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "dfd63277-501c-4384-bed0-c57c55f9520c",
    "name": "Azure AD Users with GitHub access",
    "description": "Azure AD Users with GitHub access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GithubPersonalAccount"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "d31f5de6-103e-4a21-a647-ac302e829f95",
    "name": "GitHub Users without Azure AD Identity",
    "description": "GitHub Users not connected to an Azure AD Identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number"
  },
  {
    "id": "ab689f7d-0017-4865-906c-8d42f21da6dc",
    "name": "GitHub Users with inactive Azure AD Identity",
    "description": "GitHub users connected to a deactivated Azure AD Identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "azure_tenant_id",
                          "string_value": "$COOKIE_AZURE_TENANT_LIST"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "is_active",
                          "bool_value": false
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "supported_idps": [
      {
        "name": "azure"
      }
    ],
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a0f1f97c-93e3-43c0-9806-0ddc64795b3e",
    "name": "GitHub Repositories without branch protection rules",
    "risk_level": "LOW",
    "risk_explanation": "\"GitHub repositories without branch protection rules\" pose a security risk because they lack essential safeguards for code integrity and security. Without branch protection rules, any contributor can push changes directly to critical branches, including the default one, without oversight or review. This increases the risk of introducing vulnerabilities, unauthorized code modifications, or accidental disruptions. Branch protection rules enable organizations to enforce code review processes, restrict access, and prevent force pushes, ensuring that only approved and reviewed changes are merged. By neglecting these rules, repositories are more susceptible to security breaches, data loss, and code quality issues, making them a significant security concern.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement branch protection rules on all critical branches to enforce code review processes, restrict access, and prevent unauthorized changes.",
    "description": "GitHub Repositories with no branch protection rules in place.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_branch_protection_rules",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "281aeded-fb39-41cd-8aa2-4ea8ca55fb6d",
    "name": "GitHub Repositories that allow force push on default branches",
    "risk_level": "LOW",
    "risk_explanation": "\"GitHub repositories that allow force push on default branches\" are a security risk because they enable the overwriting of commit history and can be exploited to remove critical code, inject malicious changes, or cover up security breaches. Force pushing can erase the history of important changes, making it difficult to detect and mitigate security issues or track code modifications. This lack of transparency can lead to data loss, vulnerabilities, and unauthorized alterations, posing a significant security threat. To enhance security, organizations should restrict force pushing on default branches, use branch protection rules, and encourage best practices for code management to maintain the integrity of their repositories.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, disable force push on default branches and implement branch protection rules to maintain repository integrity.",
    "description": "GitHub Repositories that allow force push on default branches such as main and master.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "default_allow_force_push",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "dcaa06b0-7bb0-4ecb-a66c-ac0333cf59f5",
    "name": "GitHub Repositories that allow default branch deletion",
    "risk_level": "LOW",
    "risk_explanation": "This is a security risk because such repositories can lead to data loss, disruption, and unauthorized code changes. Malicious actors or accidental deletions of the default branch can disrupt the project's development, potentially leading to downtime or loss of critical code. Furthermore, it can enable attackers to remove the code history, making it harder to track changes or identify security vulnerabilities.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, configure repository settings to prevent the deletion of default branches and enforce branch protection rules.",
    "description": "GitHub Repositories that allow default branches such as main and master to be deleted.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "default_allow_delete",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "e3b9f63e-2a9b-4b78-8f4d-084e79042752",
    "name": "GitHub Repositories that allow merges to default branches without pull request approval",
    "risk_level": "LOW",
    "risk_explanation": "\"GitHub repositories that allow merges to default branches without pull request approval\" pose a security risk because they bypass code review and quality control processes. This can lead to unchecked and potentially malicious code changes being merged into critical branches, increasing the likelihood of introducing vulnerabilities, bugs, or unauthorized modifications. Without proper oversight, it becomes challenging to maintain code quality, track changes, and enforce security best practices.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce branch protection rules that require pull request approval before merging into default branches.",
    "description": "GitHub Repositories that allow merges to default branches such as main and master without pull request approval.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "default_require_pull_request_approval",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "f8e26e4e-52a5-499d-a36b-07d796272832",
    "name": "GitHub Public Repositories that allow forking",
    "description": "GitHub Repositories that are public and allow forking.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "private",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allow_forking",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "ef611278-5338-4744-82ae-a18cf694cacc",
    "name": "GitHub Organizations with disabled MFA",
    "description": "GitHub Organizations with disabled Multifactor Authentication.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubOrganization",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "mfa_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration",
      "mfa_disabled"
    ]
  },
  {
    "id": "2023e7f7-0c09-47ba-8f88-44ddca1dbde7",
    "name": "GitHub Repositories with secret scanning disabled",
    "risk_level": "LOW",
    "risk_explanation": "\"GitHub Repositories with secret scanning disabled\" are a security risk because they fail to identify and protect sensitive information, like API keys and passwords, present in the code. This omission leaves repositories vulnerable to potential exploitation by malicious actors who can discover and misuse these secrets. Secret scanning is a critical security measure that proactively identifies and helps remediate exposed secrets, reducing the risk of data breaches and unauthorized access. Disabling it increases the likelihood of security incidents, putting an organization's data and reputation at risk. To bolster security, organizations should enable and regularly maintain secret scanning in their GitHub repositories to promptly address any exposed secrets.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable secret scanning on all GitHub repositories and regularly review scan results to promptly address any exposed secrets.",
    "description": "GitHub Repositories with secret scanning disabled.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "secret_scanning_enabled",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "4db80040-0a50-4d94-9c7e-7f0a08ce078a",
    "name": "GitHub Repositories with vulnerability alerts disabled",
    "risk_level": "LOW",
    "risk_explanation": "\"GitHub repositories with vulnerability alerts disabled\" are a security risk because they miss critical information about known security vulnerabilities in their code dependencies. Without these alerts, developers may inadvertently use outdated or vulnerable libraries, exposing the repository to potential attacks or breaches. Vulnerability alerts provide early warnings, allowing organizations to prioritize and apply necessary patches or updates promptly. Disabling these alerts increases the likelihood of security incidents and leaves the repository and its users at risk. To enhance security, organizations should enable and act upon vulnerability alerts in their GitHub repositories, helping to mitigate known risks and maintain a more secure codebase.\n",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable and regularly monitor GitHub vulnerability (Dependabot) alerts for all repositories to ensure timely identification and remediation of security vulnerabilities in code dependencies.",
    "description": "GitHub Repositories with vulnerability (Dependabot) alerts disabled.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "vulnerability_alerts_enabled",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "73acd592-6825-4f68-95c5-be7ca809e357",
    "name": "GitHub Security Advisories",
    "risk_level": "LOW",
    "risk_explanation": "GitHub Security Advisories are notifications that provide crucial information about security vulnerabilities in open-source software projects hosted on GitHub. They help maintain security by:\n\nInforming Users: Advisories inform users about vulnerabilities, their severity, and affected versions, ensuring they are aware of potential risks.\n\nGuidance: They offer guidance on how to remediate vulnerabilities, such as updating to patched versions or applying temporary fixes.\n\nNotifications: Users can subscribe to receive advisory notifications, keeping them up-to-date on security issues in their dependencies.\n\nIntegration: Advisories can be integrated into automated workflows, making it easier for organizations to track and address vulnerabilities in their software stack.\n\nOverall, GitHub Security Advisories enhance transparency, awareness, and proactive management of security issues, contributing to more secure software development and usage.",
    "risk_remediation": "Adhering to the best identity security and governance practices, ensure that all development teams subscribe to GitHub Security Advisories, integrate advisories into automated CI/CD workflows, and promptly apply recommended patches or mitigations to maintain secure software development.",
    "description": "List of GitHub repository security advisories.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubSecurityAdvisory"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "a2f15c1d-6881-4624-a781-91c39b148e16",
    "name": "AWS IAM Users with EKS permissions",
    "description": "AWS IAM Users with permissions on AWS EKS.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EksResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "435ce339-a9e8-450b-baa2-3d7807eaa41c",
    "name": "AWS IAM Roles with EKS permissions",
    "description": "AWS IAM Roles with permissions on AWS EKS.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EksResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "787eacc6-2952-4a41-a49e-cc24a8441af7",
    "name": "AWS EKS Clusters with public endpoint access",
    "description": "AWS EKS Clusters with public access to Kubernetes API server endpoint",
    "value_query": {
      "from_node_types": [
        {
          "type": "EksCluster",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "aws_account_id",
                    "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "endpoint_public_access",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7c8fa390-2ca8-4a63-b179-29e8c4634ecc",
    "name": "Salesforce Users not tied to an identity provider",
    "risk_level": "LOW",
    "risk_explanation": "1. **Weaker Authentication Controls and Password**: IdPs typically support stronger authentication mechanisms, such as Multi-Factor Authentication (MFA) and stronger passwords. Users not tied to an IdP might rely on simpler, less secure authentication methods as well as could have weaker passwords, making users more susceptible to common security pitfalls like phishing attacks and increase the risk of unauthorized access.\n\n2. **Inconsistent Application of Security Policies Due to Lack of Centralized Management**: Lack of IdP can lead to inconsistencies and gaps in the management of user identities and access controls. An IdP allows for centralized management, ensuring uniform enforcement of security policies. E.g. it might be challenging to revoke accesses once an employee leaves the organization without IdPs creating security risks.\n\n3. **Difficulty in Tracking and Auditing**: Without the centralized logging and tracking of user access and activities in Idps, auditing is more challenging, potentially leading to delayed detection of suspicious activities or security breaches.\n\n6. **Increased Risk of Shadow IT**: Without a centralized IdP, users might create unauthorized accounts or use unofficial methods to access systems, leading to unmonitored and potentially insecure access points.\n\n7. **Compliance Issues**: For organizations subject to regulatory compliance, lacking an IdP can make it harder to enforce and demonstrate compliance with standards that require robust identity and access management controls.",
    "risk_remediation": "Adhering to the best identity security and governance practices, integrate all Salesforce users with a centralized identity provider (IdP) to enforce stronger authentication mechanisms, ensure consistent application of security policies, facilitate tracking and auditing, mitigate shadow IT risks, and maintain regulatory compliance.",
    "description": "Total number of Salesforce Users that are not attached to an identity provider",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "0fb70e73-a406-4283-908c-752105458b74",
    "name": "Salesforce Organizations without organization-wide MFA enabled",
    "risk_level": "CRITICAL",
    "risk_explanation": "Not turning on organization-wide MFA in Salesforce introduces significant security risks, potentially leading to unauthorized access, data breaches, compliance violations, and reputational damage. Implementing MFA is a fundamental security measure that helps organizations mitigate these risks and protect sensitive information.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable organization-wide MFA for all Salesforce Organizations.",
    "description": "Total number of Salesforce Organizations without organization-wide MFA enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceOrganization",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "require_mfa_all_users",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "mfa_disabled",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "533e06f1-c790-4b4e-96f4-814bff31e33d",
    "name": "Salesforce Organizations with Security Health Check Score marked poor or worse",
    "risk_level": "HIGH",
    "risk_explanation": "The Security Health Check Score in Salesforce is a tool that assesses the security posture of your Salesforce organization based on various security settings and configurations. If the Security Health Check Score is marked as \"poor\" or worse, it indicates that there are issues or vulnerabilities that need attention.",
    "risk_remediation": "Adhering to the best identity security and governance practices, review and address the identified security settings and configurations in Salesforce to improve the Security Health Check Score, ensuring compliance with recommended security standards.",
    "description": "Total number of Salesforce Organizations with Security Health Check Score marked poor or worse",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceOrganization",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "security_health_check_score",
              "number_value": "70"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "00cf46a4-fec7-4f5b-af40-919af37eafc9",
    "name": "Salesforce Organizations without Setup Audit Trail enabled",
    "risk_level": "LOW",
    "risk_explanation": "Salesforce Organizations without the Setup Audit Trail enabled are at risk due to limited visibility into changes made within the system, compliance non-compliance, difficulty in detecting unauthorized actions, and challenges in incident response and forensics. Enabling the Setup Audit Trail is crucial for tracking changes, maintaining accountability, preventing insider threats, and ensuring security and compliance in the Salesforce environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enable the Setup Audit Trail in all Salesforce Organizations to ensure visibility into changes, maintain accountability, and enhance security and compliance.",
    "description": "Total number of Salesforce Organizations without Setup Audit Trail enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceOrganization",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "setup_audit_trail_enabled",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "b04e2398-8d4c-4c3f-acc0-29ffa723685b",
    "name": "Salesforce profiles that bypass organization wide MFA",
    "risk_level": "LOW",
    "risk_explanation": "With Multi-factor authentication (MFA) turned off Salesforce user accounts rely solely on passwords for security. This makes them more vulnerable to various attack methods such as phishing, brute force, or credential stuffing. Additionally, Salesforce often contains sensitive corporate data, including customer information, sales data, and business analytics. If an attacker gains access to one account, they can potentially access customer documents or send phishing emails from a trusted source, escalating the security breach within an organization. Thus, a compromised account without MFA protection can lead to a significant data breach. Finally, many industries and regulations require strong authentication methods to protect sensitive data. Not using MFA might lead to non-compliance with these standards, potentially resulting in legal and financial repercussions. Hence, a CRITICAL risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce organization-wide MFA for all Salesforce profiles and regularly audit compliance to ensure no profiles are bypassing this requirement.",
    "description": "Total number of Salesforce organizations that bypass organization wide MFA",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "bypass_mfa",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "mfa_disabled",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "804e0306-eb94-4442-976a-6bb853b658e4",
    "name": "Salesforce security health check risks that are rated as high or medium risk",
    "risk_level": "CRITICAL",
    "risk_explanation": "High and medium risks often indicate vulnerabilities that could be exploited by cybercriminals rather easily. These vulnerabilities can range from insufficient password policies to insecure API settings, leaving the system open to unauthorized access and making users more susceptible to social engineering and phishing attacks. Moreover, Salesforce is a repository of sensitive data, including customer information, sales data, and business processes. Further, these security risks could lead to data leakage, loss, or corruption, with severe consequences for business operations and customer trust. Finally, many organizations are subject to data protection regulations like GDPR, HIPAA, or CCPA. Security risks in Salesforce, if not mitigated, could result in non-compliance with these regulations, leading to legal penalties and fines.",
    "risk_remediation": "Adhering to the best identity security and governance practices, conduct a comprehensive review of the Salesforce security health check, prioritize and address high and medium risks by implementing stronger password policies, securing API settings, and ensuring compliance with relevant data protection regulations.",
    "description": "Total number of Salesforce security health check risks that are rated as high or medium risk",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceSecurityHealthCheckRisk",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "risk_type",
              "string_value": "MEETS_STANDARD",
              "not": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "saas_misconfiguration"
    ]
  },
  {
    "id": "bef6ea76-5a49-4e25-8f01-f6d25882ae6a",
    "name": "Veza Local Users",
    "description": "Total number of Veza Local Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d371fdf4-da47-4a29-9604-8bee824472e0",
    "name": "Veza Local Users with Admin role",
    "description": "Veza Local Users with Administrator role",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "VezaRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "64c6eca8-ff33-4320-8868-b53cef443694",
    "name": "Veza Local Users that have not logged-in recently",
    "description": "Veza Local Users that are activated and have not logged-in in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fdf9aa9d-3b7b-46f1-9b18-78b8afaeb6f4",
    "name": "Veza Teams without active users",
    "risk_level": "LOW",
    "description": "Veza Teams with no active users",
    "risk_explanation": "Having Veza Local Teams without active users can lead to several issues:\n1. Inefficient Resource Utilization: Teams without active users occupy space and resources in the Veza system without contributing to productivity or collaboration.\n2. Administrative Overhead: Maintaining these inactive teams requires administrative effort that could be better used on active elements of the system.\n3. Potential Security Risks: Inactive teams might still be linked to access controls and permissions. If not properly managed, they can become a security risk, especially if their access rights are not regularly reviewed and updated.\n4. Confusion and Clutter: The presence of inactive teams can create confusion for users and administrators, making it harder to navigate and manage the system effectively.\n5. Data and Reporting Inaccuracy: Inactive teams can skew data and reports, leading to inaccurate assessments of team usage, collaboration levels, and resource needs.\n6. Missed Opportunities for Optimization: Not regularly auditing and cleaning up these teams means missing opportunities to optimize and streamline the organization's Veza environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and delete Veza Teams without active users to ensure efficient resource utilization, reduce administrative overhead, mitigate potential security risks, eliminate confusion and clutter, improve data accuracy, and optimize the Veza environment.",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaTeam"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "VezaUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "0dcc9490-8caf-4dd4-ba5b-58d8725365e7",
    "name": "Veza Local Teams",
    "description": "Total number of Veza Local Teams",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaTeam"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "7b245b5c-6702-4796-abdd-0b7478d7c007",
    "name": "Veza Local Users that are deactivated",
    "description": "Total number of Veza Local Users that are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "VezaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "79849fd6-1ffe-48ca-962d-16543a7b5726",
    "name": "AWS Secrets Manager secrets that haven't been rotated for 90 days",
    "risk_level": "LOW",
    "risk_explanation": "Not rotating AWS Secrets Manager secrets for over 90 days can lead to several issues:\n1. Increased Security RiStatic secrets are more vulnerable to being compromised over time. Regular rotation helps prevent unauthorized access from undetected security breaches.\n2. Non-Compliance with Best Practices: Best security practices and compliance standards often require regular rotation of credentials to minimize risks.\n3. Potential for Obsolete Secrets: Secrets that aren't rotated might become outdated, potentially referencing decommissioned services or accounts.\n4. Audit and Compliance Challenges: Lack of rotation can be a red flag in security audits, indicating potential non-compliance with internal policies or external regulations.\n5. Missed Opportunity for Automation Checks: Regular rotation helps ensure that automation mechanisms (like those for updating credentials across services) are functioning properly.\n6. Reduced Response Effectiveness: In the event of a breach, unrotated secrets can make it harder to contain and resolve the issue swiftly.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated secret rotation policies in AWS Secrets Manager to ensure secrets are rotated at least every 90 days.",
    "description": "AWS Secrets that haven't been rotated for 90 days, or were created more than 90 days ago and have never been rotated",
    "value_query": {
      "from_node_types": [
        {
          "type": "SecretsManagerSecret",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_rotated_date",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "nonhuman_identity"
    ]
  },
  {
    "id": "241a7b2a-e1c6-4b84-b1de-b36762566517",
    "name": "AWS IAM Users with permissions to delete Secrets Manager secrets",
    "description": "AWS IAM Users with permissions to delete Secrets Manager secrets",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SecretsManagerResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "eecdb492-9889-41b4-85a5-0a68dd736d1f",
    "name": "AWS IAM Users with permissions to create ECR Private Repositories",
    "description": "AWS IAM Users with ecr:CreateRepository permissions on ECR Private Registry",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EcrPrivateRegistry"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "ecr:CreateRepository"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "130d5b2f-8800-4ea7-a5d4-a8fd697670f6",
    "name": "AWS IAM Users with permissions to create ECR Public Repositories",
    "description": "AWS IAM Users with ecr-public:CreateRepository permissions on ECR Public Registry",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EcrPublicRegistry"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "ecr-public:CreateRepository"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "788337da-c11e-494e-99ae-aeb235cd23bd",
    "name": "AWS IAM Users with permissions to put image into ECR Private Repositories",
    "description": "AWS IAM Users with ecr:PutImage permissions on ECR Private Repositories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EcrPrivateRepository"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "ecr:PutImage"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "ee2b8cfb-fde4-438a-af1b-be6ec6d21f06",
    "name": "AWS IAM Users with permissions to put image into ECR Public Repositories",
    "description": "AWS IAM Users with ecr-public:PutImage permissions on ECR Public Repositories",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "EcrPublicRepository"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "ecr-public:PutImage"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "2601f051-cfa4-45dd-96c5-89303bfcf610",
    "name": "AWS ECR Public Repositories",
    "description": "A list of pubic AWS ECR Repositories",
    "value_query": {
      "from_node_types": [
        {
          "type": "EcrPublicRepository",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "public_access"
    ]
  },
  {
    "id": "0f7c4887-fbfe-493f-8e9c-04283f369772",
    "name": "Workday Workers",
    "description": "Total number of Workday Workers",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdayWorker"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a212c46e-a6e4-4c9c-810e-5022a9f6d527",
    "name": "Workday Accounts",
    "description": "Total number of Workday Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdayAccount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ca2bf3fe-d849-4ca6-b314-a5ee2cbef180",
    "name": "Workday Security Groups",
    "description": "Total number of Workday Security Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdaySecurityGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "10a7d408-736a-4510-8973-78196a2fc3d6",
    "name": "Workday Security Groups without Workday Accounts",
    "description": "Workday Security Groups not containing any Workday Account",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdaySecurityGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "WorkdayAccount"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "d831be91-1464-4f24-96bb-952e14fa7873",
    "name": "Workday Security Groups without active Workday Account",
    "description": "Workday Security Groups with no active Workday Account",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdaySecurityGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "WorkdayAccount",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "0407fffb-20dc-4f4a-87bd-9edfd0ae1d9b",
    "name": "Workday Accounts that have not logged-in recently",
    "description": "Workday Accounts that are activated and have not logged-in in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdayAccount",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a9a0f898-65ad-443d-ad71-b19ed7800d07",
    "name": "Workday Implementer Accounts",
    "description": "Workday Accounts with 'Implementer' user flag enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdayAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_implementer",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ade54c0d-309d-4796-983b-fafc0447bec1",
    "name": "Workday Developer Accounts",
    "description": "Workday Accounts with 'Developer' user flag enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "WorkdayAccount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_developer",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c9cc36ca-798b-48f5-86d7-97a730b3cfc0",
    "name": "MongoDB Atlas Users with permission to create database deployments",
    "description": "MongoDB Atlas Users with permission to create database deployments",
    "value_query": {
      "from_node_types": [
        {
          "type": "MongoDbAtlasUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MongoDbAtlasProjectRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_CONTAINS",
                    "property": "permissions",
                    "string_value": "create_database_deployment"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions"
    ]
  },
  {
    "id": "dcda7450-62b5-4eb9-9c0f-fcf412ba5b3c",
    "name": "MongoDB Users with delete permissions",
    "description": "MongoDB Users with delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "MongoDbUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MongoDbResource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_delete_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "fa18498f-9c31-4df4-9e3c-940a8000a7ae",
    "name": "AWS IAM Roles with AWS EKS Kubernetes Cluster permissions",
    "description": "AWS IAM Roles with permissions on Kubernetes Cluster running on AWS EKS.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "KubernetesResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "72193a11-a3bf-4d35-965a-89e3ef0cd064",
    "name": "Azure AD Enterprise Application with delete privileges on PostgreSQL databases",
    "description": "Azure AD Enterprise Application with delete privileges on PostgreSQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "efbb75d1-158a-40e0-8e11-6f7a2bc29f5a",
    "name": "Azure AD Enterprise Application with delete privileges on PostgreSQL schemas",
    "description": "Azure AD Enterprise Application with delete privileges on PostgreSQL schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLSchema"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "c59106b4-ae1f-4880-808f-95dbeb0af774",
    "name": "Azure AD Enterprise Application with delete privileges on PostgreSQL tables",
    "description": "Azure AD Enterprise Application with delete privileges on PostgreSQL tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLTable"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "c2c609cc-9a2f-4d5b-bf11-0c3a905f6120",
    "name": "Azure AD Group with delete privileges on PostgreSQL databases",
    "description": "Azure AD Group with delete privileges on PostgreSQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "74fc7575-6343-4727-aded-f830b3270d07",
    "name": "Azure AD Group with delete privileges on PostgreSQL schemas",
    "description": "Azure AD Group with delete privileges on PostgreSQL schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLSchema"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "3611d4cb-76b5-47d8-9189-0a013488f084",
    "name": "Azure AD Group with delete privileges on PostgreSQL tables",
    "description": "Azure AD Group with delete privileges on PostgreSQL tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLTable"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "867e6b91-eb04-4efa-9490-e83d2f80777c",
    "name": "Azure AD Users with delete privileges on PostgreSQL databases",
    "description": "Azure AD Users with delete privileges on PostgreSQL databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "ff3258f6-eae1-42c3-a5db-7ce7839d2a30",
    "name": "Azure AD Users with delete privileges on PostgreSQL schemas",
    "description": "Azure AD Users with delete privileges on PostgreSQL schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLSchema"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "bace1a1a-b4f5-4d5b-b160-1db11219655d",
    "name": "Azure AD Users with delete privileges on PostgreSQL tables",
    "description": "Azure AD Users with delete privileges on PostgreSQL tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLTable"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "8746a0e5-9ea5-4145-b720-2d58a57b3b9b",
    "name": "PostgreSQL Super Users",
    "description": "PostgreSQL Super Users can perform any kind of operation in PostgreSQL instance",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_super_user"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "write_permissions",
      "privileged_access"
    ]
  },
  {
    "id": "11cf88e4-0f5f-4df3-a74a-f20b858cebd6",
    "name": "Raw PostgreSQL users with delete permissions on PostgreSQL databases",
    "description": "PostgreSQL users that do not belong to any Azure principal (user, group or application) with delete permissions on databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "not": true,
              "property": "external_account_type",
              "string_value": ""
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "8748de3b-d30d-4a88-94ef-5fe8931de1f0",
    "name": "Raw PostgreSQL users with delete permissions on PostgreSQL schemas",
    "description": "PostgreSQL users with delete permissions that do not belong to any Azure principal (user, group or application)",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "not": true,
              "property": "external_account_type",
              "string_value": ""
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLSchema"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "a2c97d7d-249d-45d3-80e6-1d45bcae099a",
    "name": "Raw PostgreSQL users with delete permissions on PostgreSQL tables",
    "description": "PostgreSQL users with delete permissions that do not belong to any Azure principal (user, group or application)",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "not": true,
              "property": "external_account_type",
              "string_value": ""
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "job_run_details"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "747b64d4-a673-46e6-a189-cb633eb8add8",
    "name": "Raw unprivileged PostgreSQL Users with delete permissions on PostgreSQL tables",
    "description": "PostgreSQL users that do not belong to any Azure principal and are not administrative, but have delete permissions on PostgreSQL tables nonetheless.",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "external_account_type",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "azure_superuser"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "azuresu"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_super_user"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLTable",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "job_run_details"
                  }
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions"
    ]
  },
  {
    "id": "d0c879c0-637e-4e8c-9360-cc00390cc3ab",
    "name": "Azure AD Users with Private Link Service write or delete permissions",
    "description": "Azure AD Users with Private Link Service write or delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzurePrivateLinkService"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_write_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "delete_permissions"
    ]
  },
  {
    "id": "5a5b254e-cacf-49ed-a96f-ecff3a79027c",
    "name": "Azure AD Users with Private Endpoint write or delete permissions",
    "description": "Azure AD Users with Private Endpoint write or delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzurePrivateEndpoint"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_write_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "delete_permissions"
    ]
  },
  {
    "id": "864e913f-e1a8-4b30-8e90-59eac2d2b111",
    "name": "Azure AD Users with AKS Managed Cluster write permissions",
    "description": "Azure AD Users with AKS Managed Cluster write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAKSManagedCluster"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "data_write_privilege"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "write_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "64d057bc-8b18-46bd-904b-35c84d5a8995",
    "name": "Azure AD Users with AKS Managed Cluster delete permissions",
    "description": "Azure AD Users with AKS Managed Cluster delete permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureAKSManagedCluster"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "data_delete_privilege"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "delete_permissions",
      "nonhuman_identity"
    ]
  },
  {
    "id": "866dc6fb-c5bf-431c-bb6c-6cc717f0c5a3",
    "name": "Snowflake Users with Database Access",
    "description": "Snowflake Users that have permissions to access Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "29415002-cdc5-4f93-ab69-be06f574abc5",
    "name": "Snowflake Users with Schema Access",
    "description": "Snowflake Users that have permissions to access Schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeSchema"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "description": "Snowflake Users that have permissions to access Tables",
    "id": "1722e06b-6ba6-4266-90af-670f8bc57507",
    "name": "Snowflake Users with Table Access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Roles that have permissions to access Tables",
    "id": "af04c12c-0c72-4255-9347-2fd366ab9c23",
    "name": "Snowflake Roles with Table Access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Users that have roles",
    "id": "e055a5a2-9d2f-42b2-8ba1-b7a743b420b6",
    "name": "Snowflake Users with Roles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Users with Privileged Roles as Default",
    "id": "02ca13b7-0d29-4480-ba00-819f6f89fc4a",
    "name": "Snowflake Users with Privileged Roles as Default",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "default_role",
                    "string_value": "SYSADMIN"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "has_password"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "description": "Snowflake Users with Privileged Roles as Default and MFA Disabled",
    "id": "d53a7215-cff9-4782-941d-ee677dc83a99",
    "name": "Snowflake Users with Privileged Roles as Default and MFA Disabled ",
    "risk_remediation": "Adhering to the best identity security and governance practices, enforce MFA for all users and review privileged roles to ensure they are assigned based on the principle of least privilege.",
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ],
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "default_role",
                    "string_value": "SYSADMIN"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "has_password"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "mfa_enabled"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "description": "Active Directory Users that are deactivated but mapped to Snowflake Users",
    "id": "34990760-f524-457f-b385-e2a6c4e4e0bb",
    "labels": [
      "deactivated_user_access"
    ],
    "name": "Active Directory Users that are deactivated and have Snowflake Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Users that are deactivated but mapped to Snowflake Users",
    "id": "07f30e04-b630-40c7-9440-42e9631b9c9f",
    "labels": [
      "deactivated_user_access"
    ],
    "name": "Azure AD Users that are deactivated and have Snowflake access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fe27a6db-8c13-4b19-8c3f-f105e3b503b4",
    "name": "Snowflake Inert Users",
    "description": "Snowflake Users that have access to Schemas but aren't using that access",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeSchema"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0db3fd81-372b-48ea-bce6-0ad95f267acc",
    "name": "Snowflake Super Users",
    "description": "Snowflake Users who have access to greater than 30% of schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeSchema",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 30
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3dcd23fc-a422-4b2e-be12-f3616fea3bc7",
    "name": "Snowflake Users with Default Roles",
    "description": "Snowflake Users who have a Role(s) that was created by the System",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "property": "default_role"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e2ec299b-5c3e-435c-acdd-e45d23b8e93e",
    "name": "Snowflake Users with Privileged Roles",
    "description": "Snowflake Users that are in Roles that have privileged access - ACCOUNTADMIN, ORGADMIN, and SYSADMIN",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole",
                "root_condition": {
                  "parent_condition": {
                    "or": true,
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "ORGADMIN"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "ACCOUNTADMIN"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "SYSADMIN"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c962cf0e-0b7b-4ba7-be93-5622a4523a7a",
    "name": "Snowflake Users with Privileged Role as Default Role",
    "description": "Snowflake Users who have a Role of SysAdmin as there default role",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "default_role",
              "string_value": "SYSADMIN"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "839b3f2d-b0bc-47bc-96ba-8511ea98d84b",
    "name": "Snowflake Inert Roles",
    "description": "Snowflake Roles that aren't being used by any Snowflake User",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f70cb8c3-c56d-4d94-b6d9-9277b3bfc80d",
    "name": "Snowflake Super Roles",
    "description": "Snowflake Roles which have more than 4 levels of child roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "path_summary_node_types": {
      "nodes": [
        {
          "node_type": "SnowflakeRole"
        }
      ]
    },
    "path_summary_count_conditions": {
      "conditions": [
        {
          "fn": 3,
          "value": 4
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "388d2720-2683-4905-86ed-faf65ef8a461",
    "name": "Snowflake Roles with Database Access",
    "description": "Snowflake Roles that have permissions to access Databases",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "445c9a88-5e59-4515-8fa9-a1f20129b347",
    "name": "Snowflake Roles with Schema Access",
    "description": "Snowflake Roles that have permissions to access Schemas",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeSchema"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "de6fd848-ffc2-4f26-8d1c-685e7319129b",
    "name": "Ping Identity Users",
    "description": "Total number of Ping Identity Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9e558a2c-0cd1-49b7-9c61-07d6810f91e6",
    "name": "Ping Identity Users with MFA disabled",
    "description": "Ping Identity Users without Multifactor Authentication (MFA) enabled who are activated and created more than 30 days ago",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "id": "2fe63090-2831-43e1-8214-c6fb771b92ad",
    "name": "Ping Identity Groups",
    "description": "Total number of Ping Identity Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a5189de2-adac-4cd2-aadb-5437c2b915d8",
    "name": "Ping Identity Groups with no active users in 90 days",
    "description": "The Ping Identity Groups without any users who have been active in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PingOneUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "67b7f578-9cac-45a8-abba-749082e4281b",
    "name": "Ping Identity Groups without activated users",
    "description": "Ping Identity Groups with no activated users",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PingOneUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e36ee51a-b772-4f16-b21c-6f35f2af8466",
    "name": "Ping Identity Groups without Users",
    "description": "Ping Identity Groups without any User",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PingOneUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "68737302-bfd2-4ac5-8845-5a0f47e50b70",
    "name": "Ping Identity Groups created recently",
    "description": "Ping Identity Groups created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f8cdfc37-248b-4aaf-a08c-22ea769e738a",
    "name": "Ping Identity Users created recently",
    "description": "Ping Identity Users created in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f75abdcc-2109-4660-b439-1e7f5702f90a",
    "name": "Ping Identity Users updated recently",
    "description": "Ping Identity Users updated in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "updated_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ce8bc0f0-6f71-4829-8977-80d08d79aabf",
    "name": "Ping Identity Users used recently",
    "description": "Ping Identity Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "23cf2df2-06bd-4134-9aa4-2172a5f3fda2",
    "name": "Ping Identity Users with no recent activity",
    "description": "Ping Identity Users with no activity in the last 90 days",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0697554c-1883-41f2-8534-b5d667192d9b",
    "name": "Ping Identity Users with no recent activity but assigned Ping Identity Applications",
    "description": "Ping Identity Users with no activity in the last 90 days but assigned Ping Identity Applications",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PingOneApplication"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fca1d692-c391-48f3-a1aa-4f3a96abba89",
    "name": "Ping Identity Users with no recent activity but assigned Ping Identity Groups",
    "description": "Ping Identity Users with no activity in the last 90 days but assigned Ping Identity Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PingOneGroup"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5c78d20f-6e6e-43d2-8572-276bdaae18cf",
    "name": "Google Workspace users with Google Cloud Run permissions",
    "description": "Google Workspace users with permissions on Google Cloud Run.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRunResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "343039ad-8fc7-49e6-90a9-52d299dcaf23",
    "name": "Google Cloud IAM roles with Google Cloud Run permissions",
    "description": "Google Cloud IAM roles with permissions on Google Cloud Run.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudRunResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "bb3b38d1-5d22-4e70-be8c-960e0380fda7",
    "name": "Google Cloud Run services with allowed unauthenticated invocation",
    "description": "Google Cloud Run services that can be invoked without authentication.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRunServiceInstance",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "allows_unauthenticated_invocation",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0e583252-4536-4a9f-955b-561b2c4c5171",
    "name": "Salesforce Users that map to Okta Users",
    "description": "Salesforce Users that map to Okta Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "23e9dbb3-2b21-4176-b341-e7cf49821069",
    "name": "Salesforce Profiles that map to Salesforce Users",
    "description": "Salesforce Profiles that map to Salesforce Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3f271f67-b0a1-4166-8ae9-4e99c07e4a67",
    "name": "Salesforce Profiles",
    "description": "Total number of Profiles in Salesforce",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7195cae3-f207-42b6-a062-f24b3cec5d18",
    "name": "Salesforce PermissionSets that have Salesforce Users",
    "description": "Salesforce PermissionSets that have Salesforce Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforcePermissionSet",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7fa360a3-a1ff-42e4-a2a8-3e8b8eb8abf5",
    "name": "Salesforce Users that map to Azure AD Users",
    "description": "Salesforce Users that map to Azure AD Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ade435e4-c8b3-407e-b2e4-d16f94db13a1",
    "name": "Salesforce Users that map to Active Directory Users",
    "description": "Salesforce Users that map to Active Directory Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b5f93fc1-911c-4c78-bb3c-e53a80c612d2",
    "name": "Salesforce Profiles that have Salesforce PermissionSets With Admin Permissions that are connected to Salesforce Users",
    "description": "Salesforce Profiles that have Salesforce PermissionSets With Admin Permissions that are connected to Salesforce Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "domain",
                    "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "6f13793d-1868-423f-bd40-aa5c93a3bdde"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f4bb97c5-ab96-48dc-9179-a271bd2f45bb",
    "name": "Salesforce Profiles that have Salesforce PermissionSets With ModifyAll Permissions",
    "description": "Salesforce Profiles that have Salesforce PermissionSets With ModifyAll Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "6544110b-06ef-4d53-a634-a6056d469528"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ],
        "and_op_type": 1
      }
    },
    "result_type": "number"
  },
  {
    "id": "f8862692-be38-4bcc-9b34-4298cf805cdb",
    "name": "Salesforce Profiles that have Salesforce PermissionSets With ViewAllData Permissions",
    "description": "Salesforce Profiles that have Salesforce PermissionSets With ViewAllData Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "89e6e691-d386-45b6-b91a-840bb04b92d9"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ],
        "and_op_type": 1
      }
    },
    "result_type": "number"
  },
  {
    "id": "6f13793d-1868-423f-bd40-aa5c93a3bdde",
    "name": "Salesforce Profiles that have Salesforce PermissionSets With Admin Permissions",
    "description": "Salesforce profiles that contain one of the Admin permissions i.e. viewAllData or modifyAllData",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "domain",
              "string_value": "$COOKIE_SALESFORCE_DOMAIN_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforcePermissionSet",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "modifyalldata"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_CONTAINS",
                          "property": "permissions",
                          "string_value": "viewalldata"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e7600abd-9bbc-4512-9d6b-87875a392a0b",
    "name": "NetSuite Users",
    "description": "All NetSuite local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0c4bd387-3186-4acb-b6be-c4ad03d72c44",
    "name": "NetSuite Deactivated Users",
    "description": "Accounts in NetSuite that have been deactivated. These accounts can be reactivated by an administrator",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "69730970-e511-49e5-93d3-8edafe926384",
    "name": "NetSuite Administrators",
    "description": "Number of users who have been granted the Administrator role in NetSuite",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.NetSuite.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.NetSuite.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2f188323-4253-4f31-aa20-ad55be209764",
    "name": "NetSuite Roles with Users",
    "description": "NetSuite roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.NetSuite.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "bfc9c089-5d1e-4f33-a9cc-f4a074773d34",
    "name": "NetSuite Users Last Login 90 days",
    "description": "NetSuite users with last login 90 days in the past.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "17495971-9430-4AD8-B061-A8CF78B2A5E9",
    "name": "NetSuite Subsidiaries with Users",
    "description": "NetSuite Subsidiaries with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.Subsidiary.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.NetSuite.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "42566c06-5a20-44e6-80f5-a01ff25ae7c8",
    "name": "Deactivated Azure AD Users with NetSuite Access",
    "description": "Azure AD Users who are deactivated that have an active NetSuite User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.NetSuite.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "67777dbc-9cdd-4bec-a93d-494e29c7fa4e",
    "name": "Deactivated Okta Users with NetSuite Access",
    "description": "Okta Users who are deactivated that have an active NetSuite User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.NetSuite.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "689eb4b6-0aa6-4c66-8dfb-b959e476d29b",
    "name": "NetSuite Roles with access to all Subsidiaries",
    "description": "NetSuite roles where subsidiary access is set to 'all'",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.NetSuite.Role",
          "root_condition": {
            "leaf_condition": {
              "property": "customprop_accessible_subsidiaries",
              "fn": "EQ",
              "string_value": "all"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fcca16e1-2b3f-4aaf-bcc8-e7760400c532",
    "name": "Google Workspace users with Google Kubernetes Engine permissions",
    "description": "Google Workspace users with permissions on Google Kubernetes Engine.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleKubernetesEngineResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ffc655a5-8dac-442d-9767-58b58e68c5f9",
    "name": "Google Kubernetes Engine clusters with control plane global access enabled",
    "description": "Google Kubernetes Engine clusters with enabled global access to control plane.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleKubernetesEngineCluster",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "provider_id",
                    "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "master_global_access_enabled",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d0ba95cd-f861-4f52-832d-17ab771fda93",
    "name": "Dynamics 365 Users",
    "description": "Total number of Dynamics 365 Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0e3079e0-e86f-4b03-ba02-08e10275dfbc",
    "name": "Dynamics 365 Teams",
    "description": "Total number of Dynamics 365 Teams",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365Team"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6b5bf2c1-5229-4583-9a74-83c374694d0e",
    "name": "Dynamics 365 Teams without users",
    "description": "Dynamics 365 Teams not containing any users",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365Team"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365User"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "924e312a-4b47-49e7-93b9-83a46effe6d4",
    "name": "Dynamics 365 Teams without active users",
    "risk_level": "LOW",
    "description": "Dynamics 365 Teams with no active users",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly audit and remove or deactivate Dynamics 365 Teams with no active users.",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365Team"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365User",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "no_assigned_users"
    ]
  },
  {
    "id": "b830e247-1656-44da-b040-8dc7c762cfd1",
    "name": "Dynamics 365 Users with the Admin role",
    "description": "Dynamics 365 Users with the System Administrator role",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365SecurityRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "7f7e1eb9-f3b3-4913-8aa5-2bdf49efd680",
    "name": "Azure AD Users with Dynamics 365 access",
    "description": "Azure AD Users  with access to one or more Dynamics 365 environments",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "10d2ae88-dcb6-45d3-a40e-25b13b099137",
    "name": "Azure AD Service Principals with Dynamics 365 access",
    "description": "Azure AD Service Principals  with access to one or more Dynamics 365 environments",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "3a12e952-e935-4b63-9288-1728fa2e248c",
    "name": "Azure AD Users with Dynamics 365 Admin role",
    "description": "Azure AD Users with Dynamics System Administrator role in Dynamics 365",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365SecurityRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "f2a24c3f-2abd-4450-a74b-bf0d768171c2",
    "name": "Azure AD Users with Dynamics 365 Admin role that are deactivated",
    "description": "Azure AD Users created more than 30 days ago that are deactivated but with System Administrator role in Dynamics 365",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Dynamics365SecurityRole",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "deactivated_user_access"
    ]
  },
  {
    "id": "54f434ca-192f-4269-8c20-8b9f3e16cab8",
    "name": "Dynamics 365 Service Accounts",
    "description": "Dynamics 365 Users with 'Non-Interactive' access mode",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "access_mode",
              "string_value": "Non-Interactive"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "9503e167-c72f-4464-bede-342b286cd2da",
    "name": "Dynamics 365 Service Accounts that are deactivated",
    "description": "Dynamics 365 Users with 'Non-Interactive' access mode and are deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "Dynamics365User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "access_mode",
                    "string_value": "Non-Interactive"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "292c6e62-4c82-4437-bc65-161bf1839e2a",
    "name": "Google Workspace users with permissions on Google Cloud SQL resources",
    "description": "Google Workspace users with permissions on Google Cloud SQL resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "provider_id",
              "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "GoogleCloudSqlResource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b4e02a83-6542-4106-99aa-04702bf83bf9",
    "name": "Google Shared Drives",
    "description": "Google Shared Drives discovered by Veza",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemMount"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0ab36bab-eb63-454a-8f62-0f4afb2b0d63",
    "name": "Google Shared Drives shared with Anyone",
    "description": "Google Shared Drives shared with Anyone (public)",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemMount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_shared_anyone",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "e45ff712-6cf6-48aa-890c-b52c1ab7dc53",
    "name": "Google Shared Drives with manager controlled Sharing Settings",
    "description": "Google Shared Drives where the drive manager can change the sharing settings",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemMount",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_admin_managed_restrictions",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "322e0bda-46ed-44cc-90fe-70e14d7f7bd3",
    "name": "Google Shared Drives with public folders",
    "description": "Google Shared Drives that contain a top level folder shared to the anyone.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemMount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemFolder",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_shared_anyone",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "fa647c4d-0c5c-4e96-be15-ad0ace65c6eb",
    "name": "Google Drive Folders shared with Anyone",
    "description": "Google Drive folders with shared with anyone (public)",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemFolder",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_shared_anyone",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "34c7a6cf-bcb5-4f86-ba1e-8a9082af6bbe",
    "name": "Google Drive Folders writeable by Anyone",
    "description": "Google Drive folders with shared with Anyone with write permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Google Drive.FileSystemFolder",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_shared_anyone",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_anyone_role",
                    "string_value": "writer"
                  }
                }
              ],
              "or": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "guest_user_access"
    ]
  },
  {
    "id": "414c7afb-6328-4e72-9bdb-fc056772bc57",
    "name": "Google Users with excessive access to shared Google Drives",
    "description": "Google users with access to over 50% of shared drives",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemMount",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 50
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "49fe5cc3-0a59-4691-874f-d37d1ce18670",
    "name": "Deactivated Azure AD Users with Google Shared Drive Access",
    "description": "Azure AD Users who are deactivated that have access to a Google Shared Drive",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "operator": 1,
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemMount"
              }
            ],
            "has_relation": true
          },
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemFolder"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "8cb5b005-2a64-4f01-9b70-3cb71dde7961",
    "name": "Deactivated Okta Users with Google Shared Drive Access",
    "description": "Okta Users who are deactivated that have access to a Google Shared Drive",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "operator": 1,
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemMount"
              }
            ],
            "has_relation": true
          },
          {
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemFolder"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "description": "Total number of OneLogin Groups",
    "id": "627b72ca-6d58-4c0a-91bd-4bbdc4ebfb59",
    "name": "OneLogin Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginGroup"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of IDP Groups that have deactivated users",
    "id": "449a2f49-2780-47d9-924e-430efd9f1003",
    "name": "IDP Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "Active directory Groups that have deactivated users",
    "id": "18727324-4bea-4248-b867-0d9f2bb001d6",
    "name": "Active Directory Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "OneLogin Groups that have deactivated users",
    "id": "0c463bfa-b64e-4d56-a375-3d1c27c7b5b7",
    "name": "OneLogin Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "Azure AD Groups that have deactivated users",
    "id": "a547ff9d-1e3f-4097-9e0a-6af6a9bc8252",
    "name": "Azure AD Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "Okta Groups that have deactivated users",
    "id": "6f9368c7-7ede-467e-9651-535a5cf4bd84",
    "name": "Okta Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "IDP Users who are inactive and have linked applications",
    "id": "52cbfc12-aaa0-4328-a483-d4db5fd68285",
    "name": "IDP Users who are inactive and have linked applications",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "IdPApplication"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "description": "IDP Users who are guest users",
    "id": "425005a5-bda3-4e76-b2ff-cda807700254",
    "name": "IDP Users who are guest users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "guest"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Local Users that are mapped to inactive IDP Users",
    "id": "f56687f4-2a2b-4af3-9560-e656069ce2fb",
    "name": "Local Users that are mapped to inactive  IDP Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "LocalUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of IDP Applications that have IDP Users",
    "id": "5e88611d-c025-4e24-a164-bd18e7316383",
    "name": "IDP Applications that have IDP Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPApplication"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Users across all IDPs who have full Admin permissions",
    "id": "db98971f-8a37-4bbf-a98a-cd9c66059431",
    "name": "IDP Users who are full Admins",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "full_admin"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Databases across all systems",
    "id": "1f63757a-274e-45a7-9c33-c112caa08b34",
    "name": "Databases",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Database"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Tables across all systems.",
    "id": "0938edf4-bbfd-4509-a100-83e1a9d172af",
    "name": "Tables",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Table"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Schemas across all systems",
    "id": "a726b429-794d-4a53-a185-8d87da431e0a",
    "name": "Schemas",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Schema"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Storage buckets",
    "id": "70ee5102-cefe-4b77-b896-76c6e26e0396",
    "name": "Storage buckets",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Bucket"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Google Cloud Roles",
    "id": "de3117ed-d3ca-444d-b820-d3ccc5547da6",
    "name": "Google Cloud Roles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Custom Application integrations",
    "id": "8fe7008b-3443-4cf0-b2c0-83e542e0afd0",
    "name": "Custom Applications",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "CustomApplication"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Salesforce User Roles",
    "id": "233d1f67-ce23-425c-8d47-5f59ca3e172b",
    "name": "Salesforce User Roles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUserRole"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Github Roles",
    "id": "c13e0cbf-18cd-4e4f-8ba4-254f9a63c815",
    "name": "Github Roles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Github.Role"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "64ff55ab-a96c-4a1d-95e4-e6a2eecb7ec4",
    "name": "Confluence Cloud users not managed by Atlassian",
    "description": "Users that are not found in Atlassian Cloud Admin but do exist in Confluence Cloud",
    "labels": null,
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluence Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Atlassian Cloud Admin.PrincipalUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fdfb50ae-3927-4831-aeaa-ebed3a015399",
    "name": "Jira Cloud users not managed by Atlassian",
    "description": "Users that are not found in Atlassian Cloud Admin but do exist in Jira Cloud",
    "labels": null,
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Atlassian Cloud Admin.PrincipalUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1b36e2a3-7d86-4f2e-96a9-8c8a109d6f78",
    "name": "Jamf Pro Users",
    "description": "All Jamf Pro Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8080fee8-bd67-4cb1-8e01-efec7c9852d5",
    "name": "Jamf Pro Active Users",
    "description": "Active Accounts in Jamf Pro",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f2131dda-dd51-48dd-8531-58bd3ec0774e",
    "name": "Jamf Pro Deactivated Users",
    "description": "Accounts in Jamf Pro that have been deactivated. These accounts can be reactivated by an administrator",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3c4d2e1f-5a6b-7d8e-9f1a-0b2c3d4e5f6a",
    "name": "Jamf Pro Administrators",
    "description": "Number of users who have been granted the Administrator role in Jamf Pro",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Jamf Pro.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9373f924-06d0-2cde-9a87-cd657b50d630",
    "name": "Jamf Pro Groups",
    "description": "All Jamf Pro Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a4a1f50d-9cc8-43e3-8447-8ee569eaf951",
    "name": "Jamf Pro Roles with Users",
    "description": "Jamf Pro roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6bb584b5-f57c-4bc6-9ab4-9f33a7fc3c22",
    "name": "Jamf Pro Groups with Users",
    "description": "Jamf Pro Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9a843dbe-524d-40e7-9ac6-cf2b8ea1d3fc",
    "name": "Jamf Pro Users Related to Okta Users",
    "description": "Jamf Pro Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cbe7d8f9-3a2b-41c5-96e0-7f8d2a9b0c1d",
    "name": "Jamf Pro Users Not Related to Okta Users",
    "description": "Jamf Pro Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fa89ad2f-2f4e-4417-baeb-231860ca7a7f",
    "name": "Deactivated Okta Users with Jamf Pro Access",
    "description": "Okta Users who are deactivated that have an active Jamf Pro User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "d53702c9-e3fc-4069-a031-3e1139de5405",
    "name": "Jamf Pro Users Related to Azure AD Users",
    "description": "Jamf Pro Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e37305e5-0245-4d22-a4c1-41af4acd74be",
    "name": "Jamf Pro Users Not Related to Azure AD Users",
    "description": "Jamf Pro Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d57cfdc2-5131-48bc-a899-f3bce851f4c0",
    "name": "Site Resources of Jamf Pro users",
    "description": "Jamf Pro Projects with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.Site.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6284a406-87c6-4cec-ab00-74a3ad1f08c8",
    "name": "Site Resources of Jamf Pro Groups",
    "description": "Jamf Pro Projects with Groups who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jamf Pro.Site.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jamf Pro.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "764c7e15-096f-4b58-bbe6-90d0bcbe9b3f",
    "name": "Privacera Users",
    "description": "All Privacera local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Privacera.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "adcd64f4-c43d-4c6a-a1ac-e6b55030c1c5",
    "name": "Privacera Active Users",
    "description": "Users in Privacera that have been active.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Privacera.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2cc5cb78-827c-4fac-b2c8-1f1a8e670b65",
    "name": "Privacera Deactivated Users",
    "description": "Users in Privacera that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Privacera.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d3f9964c-096f-4e74-9140-e3ef48c7c09c",
    "name": "Privacera Administrators",
    "description": "Number of users who have been granted the Administrator role in Privacera",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Privacera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Privacera.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Privacera.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0291e319-8fed-4935-bd34-1c2871be2c45",
    "name": "Privacera Roles with Users",
    "description": "Privacera roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Privacera.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Privacera.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f8254a9e-9002-46bf-9e49-1e157ab9fe09",
    "name": "Deactivated Azure AD Users with Privacera Access",
    "description": "Azure AD Users who are deactivated that have an active Privacera User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Privacera.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "b8c7e2ca-e5f6-4067-9018-a1a764d9e25f",
    "name": "Deactivated Okta Users with Privacera Access",
    "description": "Okta Users who are deactivated that have an active Privacera User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Privacera.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "3ae9b270-9817-4f5d-a131-4153cdc049e8",
    "name": "Slack Users",
    "description": "All Slack local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4e6aeb06-7c91-436e-8df2-900a6a59d0b3",
    "name": "Slack Groups",
    "description": "All Slack local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "59e98753-7635-4fc0-9705-ba268b62cf78",
    "name": "Slack Groups with Users",
    "description": "Slack Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Slack.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cac5f907-36cb-4632-85e5-1babbe7cb873",
    "name": "Slack Roles with Users",
    "description": "Slack roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Slack.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a05af821-aac7-44bd-be4c-bf886305e2fb",
    "name": "Slack Administrators",
    "description": "Number of users who have been granted the Global Admin role in Slack",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Slack.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Slack.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Primary Owner"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Owner"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "13470c05-14b6-4541-a832-9296c2328fd2",
    "name": "Slack Active Users",
    "description": "Active Accounts in Slack",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5ee3e1d5-78ff-4ce6-8629-af2cb8fefed6",
    "name": "Slack Deactivated Users",
    "description": "Deactivated Accounts in Slack",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "34e9bfae-fff3-4e25-aa3a-2d5c38da548b",
    "name": "Slack Deleted Users",
    "description": "Accounts in Slack that have been Deleted.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_deleted",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bbd70baf-c43e-4ee5-8dce-d9b4472cf887",
    "name": "Slack Users with MFA disabled",
    "description": "Slack Users without Multifactor Authentication (MFA) enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_has_mfa",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ]
  },
  {
    "description": "Total number Slack Roles with Permissions",
    "id": "daacf9a1-9d89-458d-9f3d-67f82f298700",
    "name": "Slack Roles with Permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.Slack.Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "54177621-08a0-47b1-8dfa-b25dc392cc8e",
    "name": "Slack Users Related to Okta Users",
    "description": "Slack Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fcab1ee7-5418-401c-ae91-f3b60e022ee6",
    "name": "Slack Users Not Related to Okta Users",
    "description": "Slack Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "09a365ff-9720-494a-834a-5f35208c7431",
    "name": "Slack Users Related to Azure AD Users",
    "description": "Slack Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8aadf9d2-f7b7-463e-a069-aae0ff621183",
    "name": "Slack Users Not Related to Azure AD Users",
    "description": "Slack Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "76478a1c-df0c-4c85-9dc4-610d9acf1752",
    "name": "Deactivated Okta Users with Slack Access",
    "description": "Okta Users who are deactivated that have an active Slack User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Slack.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "c077d930-4f80-4b3b-903e-a87e205500e8",
    "name": "Deactivated Azure AD Users with Slack Access",
    "description": "Azure AD Users who are deactivated that have an active Slack User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Slack.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "cb9325d3-f9f3-4f63-a423-8cf9e3037a79",
    "name": "Slack ServiceAccount Users",
    "description": "Slack Users with ServiceAccount",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Slack.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service_account"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "13c53dfb-6f68-4def-be65-1b1e1c2ef304",
    "name": "Expensify Users",
    "description": "All Expensify local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "723476ec-ceb4-42d8-9bb5-dbeeb4b68ee6",
    "name": "Expensify Administrators",
    "description": "Number of users who have been granted the Administrator role in Expensify",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Expensify.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Expensify.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "efe86623-2856-480b-8732-bc7d3e5e1b2c",
    "name": "Expensify Auditors",
    "description": "Number of users who have been granted the Auditor role in Expensify",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Expensify.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Expensify.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "auditor"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2d23d976-19d0-4bc9-b7bd-914fa8043555",
    "name": "Expensify Groups",
    "description": "All Expensify local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fefb27f3-484e-4380-8be0-57094f8a2487",
    "name": "Expensify Groups with Users",
    "description": "Expensify groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Expensify.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d19eae4a-71e4-4265-ab9e-51239828a87c",
    "name": "Expensify Roles with Users",
    "description": "Expensify roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Expensify.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4234451d-0a9e-4a90-80af-aa5c4855331d",
    "name": "Expensify Users Related to Okta Users",
    "description": "Expensify Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ab4add96-938e-4b86-afc4-f33fa037acc0",
    "name": "Expensify Users Not Related to Okta Users",
    "description": "Expensify Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6be66a3f-58ba-4fd6-ba6b-402db6af0893",
    "name": "Expensify Users Related to Azure AD Users",
    "description": "Expensify Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4638d0aa-9271-4cef-b673-2a1947845ef0",
    "name": "Expensify Users Not Related to Azure AD Users",
    "description": "Expensify Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Expensify.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fee5a974-5b9e-4c1e-948a-f0c9d8a5cb72",
    "name": "Concur Users",
    "description": "All Concur local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6a2f8658-19a7-4ee8-82d6-b7347a26aff4",
    "name": "Concus Roles with Users",
    "description": "Concur roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Concur.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b3f7db69-8f33-4f6b-b592-7a9c8cf4da6f",
    "name": "Concur Active Users",
    "description": "Active Accounts in Concur",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "101f0124-2f4f-4e6f-8a5c-7f6a8cf4b7f5",
    "name": "Concur Deactivated Users",
    "description": "Accounts in Concur that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6f8e0123-7f3d-4e5f-8a4b-6e7f9c8cf4a6",
    "name": "Concur Administrators",
    "description": "Number of users who have been granted the Administrator role in Concur",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Concur.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Concur.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Employee Administrator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Invoice Tax Administrator"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7e9f0122-6e2c-4d5e-8a3a-5e6f8c8cf497",
    "name": "Concur Users Related to Okta Users",
    "description": "Concur Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8d9e0121-5d1b-4c4e-8a29-4d5f7c8cf388",
    "name": "Concur Users Not Related to Okta Users",
    "description": "Concur Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9c9d0120-4c0a-3b3d-8a18-3c4e6c8cf279",
    "name": "Deactivated Okta Users with Concur Access",
    "description": "Okta Users who are deactivated that have an active Concur User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Concur.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "9c0d0120-4c0a-3b3d-8b18-3c4e6a8cf279",
    "name": "Concur Users Related to Azure AD Users",
    "description": "Concur Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ad9c011f-3b09-2a2c-8a07-2b3d5b8cf16a",
    "name": "Concur Users Not Related to Azure AD Users",
    "description": "Concur Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "bc9b011e-2a08-191b-8a96-1a2c4a8cf051",
    "name": "Deactivated Azure AD Users with Concur Access",
    "description": "Azure AD Users who are deactivated that have an active Concur User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Concur.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "3c930116-0200-0103-8a0e-02042a8cf009",
    "name": "Delegate users of Concur users",
    "description": "Concur Delegate with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Concur.Delegate.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Concur.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2f4073fa-456f-4f29-9920-4b2dd9424dc6",
    "name": "Anaplan Users",
    "description": "All Anaplan local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0aa36171-f0d4-4adb-8675-ef3c5ec2a9a2",
    "name": "Anaplan Active Users",
    "description": "Active Accounts in Anaplan",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ea4ca520-4ef8-48e9-beb6-ddb8edb96ee0",
    "name": "Anaplan Deactivated Users",
    "description": "Accounts in Anaplan that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9a193f89-4382-451c-8e3f-8cd2610ad5c8",
    "name": "Anaplan Roles with Users",
    "description": "Anaplan roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3e762d2b-c9a3-4375-93bc-bf8656e98632",
    "name": "Workspace users of Anaplan users",
    "description": "Anaplan Workspace with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ee0a1470-3501-43b8-aa57-26cf3917d729",
    "name": "Anaplan Workspaces with Disabled Anaplan Users",
    "description": "Anaplan Workspaces with Disabled Anaplan Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "26e56ca0-d9a9-4e10-8439-f67e21217d39",
    "name": "Disabled Anaplan Workspaces with Users assigned",
    "description": "Disabled Anaplan Workspaces with Users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.Workspace.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "762240f0-aba6-4fd1-837d-5e8e09c90945",
    "name": "Model users of Anaplan users",
    "description": "Anaplan Models with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.Model.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2c4ab270-de7c-4342-9640-5ce1477f4653",
    "name": "Locked Anaplan Models",
    "description": "Anaplan Models with active state as LOCKED",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.Model.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_active_state",
              "string_value": "LOCKED"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "97a01234-4e81-4519-b8ea-f59983453690",
    "name": "Archived Anaplan Models with Users Assigned",
    "description": "Models with active state ARCHIVED with Users Assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.Model.Resource",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_active_state",
                    "string_value": "ARCHIVED"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "44a6e900-c9be-4cf9-85a1-25c7ac9d89ae",
    "name": "Anaplan Users Not Active Recently",
    "description": "Number of Anaplan users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "898998af-6997-4d25-9a74-2fa8db598f21",
    "name": "Anaplan Model Member",
    "description": "Number of users who have been granted the Model Member role in Anaplan",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Anaplan.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Model Member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e9c8d6ce-410c-4b5c-8f47-7b7fdf1e2009",
    "name": "Anaplan Workspace Member",
    "description": "Number of users who have been granted the Workspace Member role in Anaplan",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Anaplan.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Workspace Member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d32a74e3-19a4-4dac-8936-5aa86d2215e0",
    "name": "Anaplan Users Related to Okta Users",
    "description": "Anaplan Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b61f178-3793-4ec4-9fe5-d995fe8ce867",
    "name": "Anaplan Users Not Related to Okta Users",
    "description": "Anaplan Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "88f4b3e3-b0df-4bf1-a20a-5d523592cef1",
    "name": "Deactivated Okta Users with Anaplan Access",
    "description": "Okta Users who are deactivated that have an active Anaplan User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "1a641f16-ab3a-4d6d-84e2-171a986a8e8c",
    "name": "Anaplan Users Related to Azure AD Users",
    "description": "Anaplan Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ccce2acd-5e08-4fe3-9342-3715ccd2c6cf",
    "name": "Anaplan Users Not Related to Azure AD Users",
    "description": "Anaplan Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Anaplan.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "02b36c69-d87b-4141-876b-9ee26f590a57",
    "name": "Deactivated Azure AD Users with Anaplan Access",
    "description": "Azure AD Users who are deactivated that have an active Anaplan User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Anaplan.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "1428bb41-2123-45fe-a692-43e0bdd4751d",
    "name": "Oracle EPM Users",
    "description": "All Oracle EPM local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "40ae6694-47f4-423b-a4e6-34096624c2cf",
    "name": "Oracle EPM Roles with Users",
    "description": "Oracle EPM roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "527505da-321b-4713-9391-aee14ecc770b",
    "name": "Oracle EPM IDM Roles with Users",
    "description": "Number of users who have access to IDM role in Oracle EPM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Oracle EPM.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_is_idm_role",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f215ad7a-daca-41a6-aa38-769cf1d0541a",
    "name": "Oracle EPM Non IDM Roles with Users",
    "description": "Number of users who do not have access to IDM role in Oracle EPM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Oracle EPM.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_is_idm_role",
                    "bool_value": false
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a93021f9-ea29-4090-9eb4-9d072d2f20d9",
    "name": "Oracle EPM Roles",
    "description": "Total number of Oracle EPM Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "86be0d7e-522c-44ff-a514-3c0e3664ab0a",
    "name": "Oracle EPM IDM Roles",
    "description": "Total number of Oracle EPM IDM Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.Role",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_idm_role",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "df4ced1a-7aaa-4c36-9ce3-087b25005323",
    "name": "Oracle EPM Non IDM Roles",
    "description": "Total number of Oracle EPM Non IDM Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.Role",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_idm_role",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "de91262f-d110-4e67-8c5e-e40070dcefa6",
    "name": "Oracle EPM Identity Domain Administrator",
    "description": "Number of users who have been granted the Identity Domain Administrator role in Oracle EPM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Oracle EPM.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Identity Domain Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "42678213-c7a9-4b43-ac25-a3dba800d232",
    "name": "Oracle EPM Service Administrator",
    "description": "Number of users who have been granted the Service Administrator role in Oracle EPM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Oracle EPM.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Service Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d7df2ab7-eaeb-4e15-874c-58683fa6ea54",
    "name": "Oracle EPM Active Users",
    "description": "Active Accounts in Oracle EPM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d42bd444-7bc0-4938-81d5-ca589dad4517",
    "name": "Oracle EPM Deactivated Users",
    "description": "Accounts in Oracle EPM that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8e13394c-537e-4d73-b09f-303400fde586",
    "name": "Oracle EPM Users Related to Okta Users",
    "description": "Oracle EPM Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0db14332-9757-444a-8811-71745fe4e3fe",
    "name": "Oracle EPM Users Not Related to Okta Users",
    "description": "Oracle EPM Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "94592740-c1d2-4764-86a3-3d2c62f02ba9",
    "name": "Deactivated Okta Users with Oracle EPM Access",
    "description": "Okta Users who are deactivated that have an active Oracle EPM User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "25bf5c81-c4cd-4cfb-b7c3-fc9beb07beee",
    "name": "Oracle EPM Users Related to Azure AD Users",
    "description": "Oracle EPM Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c68da8ce-af20-428e-be33-4557d0143d7e",
    "name": "Oracle EPM Users Not Related to Azure AD Users",
    "description": "Oracle EPM Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle EPM.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "71f0e538-10e1-40c6-860b-acab730a9ffb",
    "name": "Deactivated Azure AD Users with Oracle EPM Access",
    "description": "Azure AD Users who are deactivated that have an active Oracle EPM User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle EPM.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "302eb832-a5a2-4cbb-ba27-04f95c24d707",
    "name": "Oracle Fusion Cloud Users",
    "description": "All Oracle Fusion Cloud local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "dcec1b35-972d-4784-a51b-12b00314eff0",
    "name": "Oracle Fusion Cloud Roles",
    "description": "Total number of Oracle Fusion Cloud Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5e07c259-4418-4a23-9b03-bbc8e977252f",
    "name": "Oracle Fusion Cloud Roles with Users",
    "description": "Oracle Fusion Cloud roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ce8d50c0-bbee-4bac-9ce4-388a4c00299c",
    "name": "Oracle Fusion Cloud Active Users",
    "description": "Active Accounts in Oracle Fusion Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0ad71583-49b6-4506-befa-1ed3673c993d",
    "name": "Oracle Fusion Cloud Deactivated Users",
    "description": "Deactivated Accounts in Oracle Fusion Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5e3d3ece-c685-40fe-b484-65440b439cce",
    "name": "Data Access Set users of Oracle Fusion Cloud users",
    "description": "Oracle Fusion Cloud Data Access Set with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Data Access Set.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2cc1199e-ee7b-4c28-8c77-f5b18e503fad",
    "name": "Asset Book users of Oracle Fusion Cloud users",
    "description": "Oracle Fusion Cloud Asset Book with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Asset Book.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e8d246e3-3308-4f31-b549-7e3fbd852eef",
    "name": "Inventory Organization users of Oracle Fusion Cloud users",
    "description": "Oracle Fusion Cloud Inventory Organization with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Inventory Organization.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6b7440eb-5041-4854-a7f0-78849c71f639",
    "name": "Business Unit users of Oracle Fusion Cloud users",
    "description": "Oracle Fusion Cloud Business Unit with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Business Unit.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "aac9728c-b917-4fef-bc2d-11ff04c2cd97",
    "name": "Reference set users of Oracle Fusion Cloud users",
    "description": "Oracle Fusion Cloud Reference set with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.Reference set.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "57b18880-1a60-4b91-940e-dbd345990e19",
    "name": "Oracle Fusion Cloud Users Related to Okta Users",
    "description": "Oracle Fusion Cloud Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "733cfcab-e35f-44e2-8f5e-425d4125bb27",
    "name": "Oracle Fusion Cloud Users Related to Azure AD Users",
    "description": "Oracle Fusion Cloud Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Oracle Fusion Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "275f291c-9788-4455-8807-71d8fb8aa6f3",
    "name": "Deactivated Okta Users with Oracle Fusion Cloud Access",
    "description": "Okta Users who are deactivated that have an active Oracle Fusion Cloud User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "aadabaf4-7d9c-44db-be33-d8faf79c537d",
    "name": "Deactivated Azure AD Users with Oracle Fusion Cloud Access",
    "description": "Azure AD Users who are deactivated that have an active Oracle Fusion Cloud User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Oracle Fusion Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "0723ab76-da96-4753-92eb-2d27148d4d5c",
    "name": "Palo Alto Networks SASE Users",
    "description": "All Palo Alto Networks SASE local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4645c2b7-da0f-4bf7-8985-a756e0ab4e48",
    "name": "Palo Alto Networks SASE Roles",
    "description": "Total number of Palo Alto Networks SASE Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5ccff27a-2945-47fb-8274-87a7efb77d95",
    "name": "Palo Alto Networks SASE Applications with Users",
    "description": "Palo Alto Networks SASE Applications with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.Application.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9673c1bd-8432-4b2e-b534-40f03ee34ef6",
    "name": "Palo Alto Networks SASE Roles with Users",
    "description": "Palo Alto Networks SASE roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "92a59565-2931-4e1b-95ee-cea33dadcbc9",
    "name": "Palo Alto Networks SASE Business Administrators",
    "description": "Number of users who have been granted the Business Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Business Administrators"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f453302b-0e1d-494c-9352-2fced2166f2c",
    "name": "Palo Alto Networks SASE Data Security Administrators",
    "description": "Number of users who have been granted the Data Security Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Data Security Administrators"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f5eb4d67-7fd0-43b4-8b7b-479e33aa7fef",
    "name": "Palo Alto Networks SASE Deployment Administrators",
    "description": "Number of users who have been granted the Deployment Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Deployment Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "18b67f4e-2a57-4ef5-9c22-aeb50234319a",
    "name": "Palo Alto Networks SASE DLP Incident Administrators",
    "description": "Number of users who have been granted the DLP Incident Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "DLP Incident Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5446b30c-55e3-44d6-8359-30489af5955f",
    "name": "Palo Alto Networks SASE IAM Administrators",
    "description": "Number of users who have been granted the IAM Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "IAM Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a0664f76-8aec-45e3-bd3b-d1e75bec4dc8",
    "name": "Palo Alto Networks SASE Multitenant IAM Administrators",
    "description": "Number of users who have been granted the Multitenant IAM Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Multitenant IAM Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f5640d74-99e3-49af-a332-888da8fc453a",
    "name": "Palo Alto Networks SASE Network Administrators",
    "description": "Number of users who have been granted the Network Administrator role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Network Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6d83a1db-c8a5-45df-8693-23437f1f1083",
    "name": "Palo Alto Networks SASE Project Admins",
    "description": "Number of users who have been granted the Project Admin role in Palo Alto Networks SASE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Project Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b31c99ca-804c-423e-89a6-2834c22b0204",
    "name": "PANW Application-Level Superusers",
    "description": "PANW Application-Level Superusers",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Superuser"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "92bd42ea-c50b-4edb-b648-113bdd33cd73",
    "name": "PANW Service Accounts ",
    "description": "PANW Service Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service account"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "service_account"
    ]
  },
  {
    "id": "3130a811-b67b-4482-b965-b4abb4d59387",
    "name": "PANW Service Accounts with Superuser Access ",
    "description": "PANW Service Accounts with Superuser Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Palo Alto Networks SASE.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service account"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Superuser"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "service_account"
    ]
  },
  {
    "id": "8d614c4d-5fa7-4cbb-b81c-16f0856827bf",
    "name": "Okta users with PANW Access",
    "description": "Okta Users with PANW Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "34360613-a6f2-4e6a-8001-2ac7a3da7b4a",
    "name": "Okta users with PANW Admin Access",
    "description": "Okta users with PANW Admin Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.User"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Palo Alto Networks SASE.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Superuser"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "description": "Total numbers of IDP Users that have MFA enabled",
    "id": "25932f72-8128-4390-939f-64a2957a43a1",
    "name": "IDP Users that have MFA enabled",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "mfa_active"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "mfa_disabled",
      "state_of_authorization"
    ]
  },
  {
    "description": "Total numbers of IDP Users that have MFA disabled.",
    "id": "986b5971-07ca-4b4a-a92d-e3bd890eb16d",
    "name": "IDP Users that have MFA disabled",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "mfa_active"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "mfa_disabled",
      "state_of_authorization"
    ]
  },
  {
    "description": "Total numbers of AWS IAM Roles with access to supported Resources",
    "id": "f0eae6c6-e623-4ae5-bccc-f638b50adaa3",
    "name": "AWS IAM Roles with access to supported Resources",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Resources accessible by Active Directory Users",
    "id": "b8f0435f-b047-4ddb-9396-4e29e3328696",
    "name": "Resources accessible by Active Directory Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Azure AD Resources accessible by Azure AD Users.",
    "id": "285ae39a-fb40-4c0b-a744-357c5d7c47d5",
    "name": "Resources accessible by Azure AD Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Resources accessible by Okta Users",
    "id": "6a1c1bb4-3140-4e3a-b4b7-40421c941a21",
    "name": "Resources accessible by Azure Okta Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Resources accessible by OneLogin Users",
    "id": "d10a6a40-bd5f-47ce-af96-67abfb7a896f",
    "name": "Resources accessible by OneLogin Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Azure AD Users with Groups",
    "id": "75fef345-b61e-44fd-ae69-314811d3d624",
    "name": "Azure AD Users with Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Active Directory Users with Groups",
    "id": "1532ab66-9bda-4c44-bb07-a49a3fa2d361",
    "name": "Active Directory Users with Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Okta Users with Groups",
    "id": "1e75a61f-92c1-4114-a958-687478bb29b1",
    "name": "Okta Users with Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of OneLogin Users with Groups",
    "id": "eacc69ed-8713-4c32-8ef1-31dac151cde1",
    "name": "OneLogin Users with Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OneLoginGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Azure AD Groups with Users",
    "id": "bdc5294e-6b00-4cd3-8795-07dc93f56925",
    "name": "Azure AD Groups with Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Active Directory Groups with Users",
    "id": "6247042e-edc1-4b4b-aec1-b6ce2e3a32d5",
    "name": "Active Directory Groups with Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Okta Groups with Users",
    "id": "76256601-9035-44ff-88e7-5fb8db0d3e66",
    "name": "Okta Groups with Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of OneLogin Groups with Users",
    "id": "65b52260-fff0-491b-9992-0235d89d00a2",
    "name": "OneLogin Groups with Users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OneLoginGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OneLoginUser"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of AWS IAM Policies that contain 'deny' within Policy Statements",
    "id": "dbc3062d-59be-4f4d-a260-275d853f1ea9",
    "name": "AWS IAM Policies that contain 'deny' within Policy Statements",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamPolicy"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "deny"
                  }
                },
                "type": "AwsIamPolicyStatement"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Google Cloud IAM Roles with access to resources",
    "id": "e9d42f14-cf33-495e-b2c1-4df15147392a",
    "name": "Google Cloud IAM Roles with access to resources",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number Google Cloud Roles with Permissions",
    "id": "fe3b4b0c-232f-4044-8516-dce9540847b7",
    "name": "Google Cloud Roles with Permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Azure RBAC Role with resource access",
    "id": "861540e8-6ef0-4b35-9438-6d9977b33133",
    "name": "Azure RBAC Role with resource access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Snowflake Roles with resource access",
    "id": "56f471aa-c586-4569-a993-7b3960d9dc38",
    "name": "Snowflake Roles with resource access",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Google Cloud Role Bindings with 'delete' in their permissions",
    "id": "8f920c99-dba1-4de0-ac51-2344049f88a1",
    "name": "Google Cloud Role Bindings with  'delete' in their permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LIST_ANY_ELEMENT_CONTAINS",
              "property": "permissions",
              "string_value": "delete"
            }
          },
          "type": "GoogleCloudIamRoleBinding"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Google Cloud Roles with 'delete' in their permissions",
    "id": "83c4c6fc-b451-4b71-954a-59c48b52886e",
    "name": "Google Cloud Roles with delete  'delete' in their permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LIST_ANY_ELEMENT_CONTAINS",
              "property": "permissions",
              "string_value": "delete"
            }
          },
          "type": "GoogleCloudRole"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Effective Permissions",
    "id": "c5f58d69-7f73-49b7-85ad-da6daca0573a",
    "name": "Effective Permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "EffectivePermission"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Effective Permissions with delete privileges on data or metadata",
    "id": "40bc36da-8ab5-4507-9fba-2554445662bc",
    "name": "Effective Permissions with delete privileges on data or metadata",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "data_delete_privilege"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "metadata_delete_privilege"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "EffectivePermission"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of effective permissions with metadata privilage",
    "id": "166ea015-2454-4956-9b93-e3d85789126e",
    "name": "Effective Permissions with any metadata privilege",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "metadata_create_privilege"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "metadata_delete_privilege"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "metadata_read_privilege"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "metadata_write_privilege"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "Permission"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with cross account AssumeRoles",
    "id": "40b2a24f-d06c-4206-acac-e7c95cec8a95",
    "name": "AWS IAM User with cross account AssumeRoles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "aws_account_id",
                    "value_property_from_other_node": true,
                    "value_property_name": "aws_account_id"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "504595c0-997a-4919-874e-aea722ed4c7d",
    "name": "Dropbox Users",
    "description": "All Dropbox local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Dropbox.PrincipalUser"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "23b3d4f2-3f39-4d3d-93f7-6abf27f1b902",
    "name": "Dropbox Groups",
    "description": "All Dropbox local groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Dropbox.PrincipalGroup"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5eaf42c2-5abf-4de1-a40f-740bba8642de",
    "name": "Dropbox Deactivated Users",
    "description": "User accounts in Dropbox that have been deactivated. These accounts can be reactivated by an administrator",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Dropbox.PrincipalUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9857f41a-8f58-4d3c-b3aa-e6948135c615",
    "name": "Dropbox Users with Admin access",
    "description": "Dropbox Users that have Administrator access.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Dropbox.PrincipalUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "full_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "a9bcc73c-ee2c-4f98-b9ec-8d9ac38f7674",
    "name": "Deactivated Azure AD Users with Dropbox Access",
    "description": "Azure AD Users who are deactivated that have an active Dropbox User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Dropbox.PrincipalUser",
                "root_condition": {
                  "leaf_condition": {
                    "property": "is_active",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "23fcb0b4-de7b-46ea-8a11-877ede03bc7e",
    "name": "Deactivated Okta Users with Dropbox Access",
    "description": "Okta Users who are deactivated that have an active Dropbox User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Dropbox.PrincipalUser",
                "root_condition": {
                  "leaf_condition": {
                    "property": "is_active",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "description": "Total number of Confluence Cloud Groups",
    "id": "edb8c61c-75f2-43e3-bf75-5d666b098e39",
    "name": "Confluence Cloud Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluence Cloud.Group"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Jira Cloud Users with Roles",
    "id": "65760627-1316-4471-b3a5-be56e115dca3",
    "name": "Jira Cloud Users with Roles",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.Jira Cloud.Role"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of Service accounts",
    "id": "10143a7a-b488-475c-b61a-2e6f38826b8d",
    "name": "Service Accounts",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ServiceAccount"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization",
      "service_account"
    ]
  },
  {
    "description": "Total numbers of AWS IAM Roles with Effective Permissions on any resource",
    "id": "780397e3-7b9d-49a0-a1f8-db557c7dcfe8",
    "name": "AWS IAM Roles with Effective Permissions on resources",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of IdP Users who are assigned IdP Applications directly but don't belong to any of Active Directory, Azure AD, Okta and OneLogin Groups",
    "id": "67b3f7fc-9b95-42f1-9fd7-94bbed27b019",
    "name": "IdpUsers Users who are assigned to IdP Applications directly and don't belong to any of Active Directory, Azure AD, Okta and OneLogin Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "IdPApplication"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "OktaGroup"
              },
              {
                "type": "AzureADGroup"
              },
              {
                "type": "ActiveDirectoryGroup"
              },
              {
                "type": "OneLoginGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Total number of AWS IAM roles and their associated grouped permissions",
    "id": "365b79f0-a49c-47e8-8b3e-2b16febf4e2c",
    "name": "AWS IAM Roles with Grouped Permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AwsIamGroupedPermission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "description": "Okta Users who have Super Administrator Role",
    "id": "95990302-03aa-4a29-98ff-e990e75efb0c",
    "labels": [
      "privileged_access"
    ],
    "name": "Okta Users who have Super Administrator Role",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Super Administrator"
                  }
                },
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Active Directory Users that are deactivated but have AWS IAM Admin permissions",
    "id": "25a6f59a-5700-4ed1-af50-7bda45b164e8",
    "labels": [
      "deactivated_user_access"
    ],
    "name": "Active Directory Users that are deactivated but have AWS IAM Admin permissions",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_remediation": "Adhering to the best identity security and governance practices, immediately revoke AWS IAM Admin permissions for deactivated Active Directory users and implement automated processes to ensure deactivated accounts are promptly removed from all privileged access lists.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "active_directory_domain",
                    "string_value": "$COOKIE_ACTIVE_DIRECTORY_DOMAIN_LIST"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Active Directory Users that are deactivated but are privileged Google Cloud Workspace users",
    "id": "7054a6b1-189a-4ad5-99ce-cc9b32ca5fda",
    "labels": [
      "deactivated_user_access"
    ],
    "name": "Active Directory Users that are deactivated but are privileged Google Cloud Workspace users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_remediation": "Adhering to the best identity security and governance practices, immediately revoke Google Cloud Workspace privileges for deactivated Active Directory users and implement automated synchronization between Active Directory and Google Cloud Workspace to ensure deactivated accounts are promptly disabled across all platforms.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "full_admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN",
                          "property": "provider_id",
                          "string_value": "$COOKIE_GOOGLE_CUSTOMER_ID_LIST"
                        }
                      }
                    ]
                  }
                },
                "type": "GoogleWorkspaceUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Total number of Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 80",
    "id": "ce5c3b9c-bf84-4acd-a0b7-760361680e70",
    "name": "Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 80",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 80
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 60",
    "id": "0ee5ecf5-2292-430e-8641-f68c71957820",
    "name": "Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 60",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 60
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 40",
    "id": "c6ff42ec-88e2-4afa-9d5b-31928e83c194",
    "name": "Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 40",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 40
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 20",
    "id": "202cacbb-91f5-4bfe-b892-2d90ce26761f",
    "name": "Snowflake Users with SnowflakeTable access and have with Over provisioned score less than or equal to 20",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 20
        }
      },
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeTable"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 100",
    "id": "73b701a6-630d-40d3-8e5f-c9ae0e3035cb",
    "name": "AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 100",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 80",
    "id": "64781252-ea48-45d2-b78e-3a295e9fc6a3",
    "name": "AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 80",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 80
        }
      },
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 60",
    "id": "b18e4754-86f1-405c-90d2-399d8c1f5c61",
    "name": "AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 60",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 60
        }
      },
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 40",
    "id": "14222edd-3353-4f56-af8c-41aae113cf8d",
    "name": "AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 40",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 40
        }
      },
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 20",
    "id": "8e13c9d6-6e5b-4a56-97cb-de53697a706e",
    "name": "AWS IAM Users with S3Bucket access and have Over provisioned score less than or equal to 20",
    "result_type": "number",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 20
        }
      },
      "from_node_types": [
        {
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "S3Bucket"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of IDP Users who are inactive and have associated permissions",
    "id": "eec1e07c-fe85-43c0-98f8-ef557ac4fb6e",
    "name": "IDP Users who are inactive and have associated permissions",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of IDP Users who have not logged in recently and have associated permissions",
    "id": "1675b71d-9da7-43aa-b349-7b6569559d31",
    "name": "IDP Users who have not logged in recently and have associated permissions",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "description": "Total number of IDP Users who guest users and have associated permissions.",
    "id": "381dc7f4-55ea-40c3-a03e-498312ca76ef",
    "name": "IDP Users who guest users and have associated permissions.",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_guest"
            }
          },
          "type": "IdPUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization_v2"
    ]
  },
  {
    "id": "412f4c87-0c15-4f12-969f-8ba85024dbf1",
    "name": "Aspera Users",
    "description": "All Aspera local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "27ddfc18-13bd-4c38-905f-892219b6bd96",
    "name": "Aspera Deactivated Users",
    "description": "Accounts in Aspera that have been deactivated. These accounts can be reactivated by an administrator",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a24a8fa8-295e-4c64-bf5b-9385c021c028",
    "name": "Aspera Administrators",
    "description": "Number of users who have been granted the Administrator role in Aspera",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Aspera.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Aspera.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9c7b9f3c-4bc2-4259-b698-389f9893b996",
    "name": "Aspera Roles with Users",
    "description": "Aspera roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Aspera.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4b8387db-0c5d-4898-89fe-7f40f99d237f",
    "name": "Aspera Users Last Login 90 days",
    "description": "Aspera users with last login 90 days in the past.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4e31a19b-9e86-48a8-a0f0-89845d3064ed",
    "name": "Aspera Workspaces with Users",
    "description": "Aspera Workspaces with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Aspera.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9262f731-d248-4995-ac21-557d7644e745",
    "name": "Aspera Workspaces",
    "description": "All Aspera Workspaces",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.Workspace.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2af70f86-3605-4589-8a2b-5a8de54ee6be",
    "name": "Aspera Users Related to AzureAD Users",
    "description": "Aspera Users with an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "bc6f3a99-10dc-4b9c-b83b-9a01bc1a62af",
    "name": "Aspera Users Not Related to AzureAD Users",
    "description": "Aspera Users who do not have an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c506e579-b33d-427e-ace5-b223a245aa5b",
    "name": "Deactivated Azure AD Users with Aspera Access",
    "description": "Azure AD Users who are deactivated that have an active Aspera User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Aspera.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "4229f02e-2961-4a09-ab17-8c15dac2f52d",
    "name": "Aspera Users Related to Okta Users",
    "description": "Aspera Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9723a3cb-ea77-4517-a20c-6c4bf6269dfe",
    "name": "Aspera Users Not Related to Okta Users",
    "description": "Aspera Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Aspera.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a22dd1c3-9e6e-4b08-97de-55358a20262b",
    "name": "Deactivated Okta Users with Aspera Access",
    "description": "Okta Users who are deactivated that have an active Aspera User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Aspera.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "2543e879-c59a-4fec-beda-a207b964760e",
    "name": "DocuSign Users",
    "description": "All DocuSign local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3e28a4a6-65dd-45d9-bbe9-3d0a4ff53b59",
    "name": "DocuSign Deactivated Users",
    "description": "Users in DocuSign that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c5d803d3-1c38-4200-a843-9747d8ebaedf",
    "name": "DocuSign Administrators",
    "description": "Number of users who have been granted the Administrator role in DocuSign",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9a9bda3e-5a12-4b3f-b6d4-66baeef243c5",
    "name": "DocuSign Roles with Users",
    "description": "DocuSign roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.DocuSign.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6422eb9c-aaed-44d5-96de-6107eb347493",
    "name": "DocuSign Users Related to AzureAD Users",
    "description": "DocuSign Users with an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "1a40d5dc-4afa-49bd-b764-c68f5e568be4",
    "name": "DocuSign Users Not Related to AzureAD Users",
    "description": "DocuSign Users who do not have an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "47084f58-34ca-4fe4-8cf4-8bec9fa7057e",
    "name": "Deactivated Azure AD Users with DocuSign Access",
    "description": "Azure AD Users who are deactivated that have an active DocuSign User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.DocuSign.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "d4372d80-c668-4236-9935-aff3cd3b402a",
    "name": "DocuSign Users Related to Okta Users",
    "description": "DocuSign Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e0162293-e352-4a7a-820b-0ebe981524b8",
    "name": "DocuSign Users Not Related to Okta Users",
    "description": "DocuSign Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.DocuSign.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5b71e266-9fe2-4eb1-bb47-0050b57a0674",
    "name": "Deactivated Okta Users with DocuSign Access",
    "description": "Okta Users who are deactivated that have an active DocuSign User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.DocuSign.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "305c9407-8777-4fd7-89b6-3598c9bfb622",
    "name": "LastPass Users",
    "description": "All LastPass local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "11c3117d-2123-4015-a09f-0333145611c5",
    "name": "LastPass Deactivated Users",
    "description": "Users in LastPass that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5deb9629-ec4f-4bc2-a066-831a9a1f8944",
    "name": "LastPass Administrators",
    "description": "Number of users who have been granted the Administrator role in LastPass",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.LastPass.Role",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6e7b226c-ba67-41ef-ba73-f257bcbc2a29",
    "name": "LastPass Roles with Users",
    "description": "LastPass roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.LastPass.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "1879a669-4818-4b5b-9b59-0be0d746bcf3",
    "name": "LastPass Folders with Users",
    "description": "LastPass Folders with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.Folder.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.LastPass.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5dfc1d3b-ed03-4b86-858f-eb60e00830b0",
    "name": "LastPass Users Related to AzureAD Users",
    "description": "LastPass Users with an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5d5d3ddd-5768-4498-abe4-8a1d129c5e31",
    "name": "LastPass Users Not Related to AzureAD Users",
    "description": "LastPass Users who do not have an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b2eea53e-9f9c-4ed4-a664-5bfb36e80f65",
    "name": "Deactivated Azure AD Users with LastPass Access",
    "description": "Azure AD Users who are deactivated that have an active LastPass User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.LastPass.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "3ea12022-831a-4a51-8d29-df6e16761656",
    "name": "LastPass Users Related to Okta Users",
    "description": "LastPass Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8ddb2460-5685-4693-92d1-41aebe371ff4",
    "name": "LastPass Users Not Related to Okta Users",
    "description": "LastPass Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.LastPass.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "763a77b9-14b6-47d5-a7b3-bc08bd46322c",
    "name": "Deactivated Okta Users with LastPass Access",
    "description": "Okta Users who are deactivated that have an active LastPass User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.LastPass.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a11120ca-f789-4535-8e9b-a4a939d86ca8",
    "name": "ClickHouse Users",
    "description": "All ClickHouse local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4816f1ac-737b-42e5-88b4-503bd74459b4",
    "name": "ClickHOuse Roles with Users",
    "description": "ClickHouse roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "84c08842-88c7-4320-9d8e-e14e7571528a",
    "name": "ClickHouse Admins",
    "description": "Number of users who have been granted the Admin role in ClickHouse",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.ClickHouse.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f8d17009-5c9f-4be9-b9cd-22dea3ea3e3f",
    "name": "ClickHouse Developers",
    "description": "Number of users who have been granted the Developer role in ClickHouse",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.ClickHouse.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Developer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b6c3fb6-d480-462a-9a81-71224df8a6a7",
    "name": "ClickHouse Users created in the last 24 hours",
    "description": "ClickHouse Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "85046e00-8cb9-4dc6-b63a-942b7d06e915",
    "name": "ClickHouse Users Related to Okta Users",
    "description": "ClickHouse Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ba11008b-0925-43f0-bf36-e6892b71332a",
    "name": "ClickHouse Users Not Related to Okta Users",
    "description": "ClickHouse Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8e6ea886-d451-465f-b37b-d7f74ee382ef",
    "name": "Deactivated Okta Users with ClickHouse Access",
    "description": "Okta Users who are deactivated that have an active ClickHouse User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "acccd6c8-a4eb-4bc6-9b58-bb3e29eabf7a",
    "name": "ClickHouse Users Related to Azure AD Users",
    "description": "ClickHouse Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2f6024ea-af6c-46d7-9675-bcde910a83ab",
    "name": "ClickHouse Users Not Related to Azure AD Users",
    "description": "ClickHouse Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9da65f42-b150-492c-ad40-7a3781302669",
    "name": "Deactivated Azure AD Users with ClickHouse Access",
    "description": "Azure AD Users who are deactivated that have an active ClickHouse User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "139b0ba7-d8f7-49c6-9cc9-79e8abc40084",
    "name": "ClickHouse Service with Users",
    "description": "ClickHouse Service with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.ClickHouse.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "95cd94da-a595-44df-aa7e-40c624f9c2c5",
    "name": "ClickHouse Services",
    "description": "All ClickHouse Services discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ac875613-0149-4ce0-a01c-68f75779f1d3",
    "name": "ClickHouse Service with AWS provider",
    "description": "Clickhouse Service with AWS provider",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_provider",
              "string_value": "aws"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ebed4a7e-4a76-4760-bea7-4d8281a1616e",
    "name": "ClickHouse Service with GCP provider",
    "description": "Clickhouse Service with GCP provider",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_provider",
              "string_value": "gcp"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "09dafc20-e52e-4325-9c92-037558b215c9",
    "name": "ClickHouse Service with azure provider",
    "description": "Clickhouse Service with azure provider",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_provider",
              "string_value": "azure"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "75169ea1-8c71-4dbd-b496-ea8a30c0e0d1",
    "name": "ClickHouse Service with development tier",
    "description": "Clickhouse Service with development tier",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_tier",
              "string_value": "development"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "22bc3404-5455-4d8a-aa8f-7ebfa6279018",
    "name": "ClickHouse Service with production tier",
    "description": "Clickhouse Service with production tier",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_tier",
              "string_value": "production"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e1ea23d8-f9e7-481c-ada7-e7485380de7b",
    "name": "ClickHouse Service with dedicated_high_mem tier",
    "description": "Clickhouse Service with dedicated_high_mem tier",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_tier",
              "string_value": "dedicated_high_mem"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "99703457-8fcd-4938-834a-a279b1d0f9c4",
    "name": "ClickHouse Service with dedicated_high_cpu tier",
    "description": "Clickhouse Service with dedicated_high_cpu tier",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_tier",
              "string_value": "dedicated_high_cpu"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "83379ff0-55fa-45b4-b76c-8686cf03db8a",
    "name": "ClickHouse Service with dedicated_standard tier",
    "description": "Clickhouse Service with dedicated_standard tier",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_tier",
              "string_value": "dedicated_standard"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4f4a1889-0fae-4ca2-b768-470cba112c0c",
    "name": "ClickHouse Service with idle state",
    "description": "Clickhouse Service with idle state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "idle"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b9c722fb-03e0-49cf-add9-29f8286e5873",
    "name": "ClickHouse Service with starting state",
    "description": "Clickhouse Service with starting state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "starting"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "37885b97-2685-41d5-80d6-9e09ff9a9889",
    "name": "ClickHouse Service with stopping state",
    "description": "Clickhouse Service with stopping state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "stopping"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "792c821b-4b2e-40e9-a01a-a210bce1be8a",
    "name": "ClickHouse Service with terminating state",
    "description": "Clickhouse Service with terminating state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "terminating"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "077a0d42-7953-474e-9c35-3fef811c274b",
    "name": "ClickHouse Service with awaking state",
    "description": "Clickhouse Service with awaking state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "awaking"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4fa855bb-0cc9-4506-a769-bd31fea86666",
    "name": "ClickHouse Service with partially_running state",
    "description": "Clickhouse Service with partially_running state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "partially_running"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a43199c3-d37c-4d93-b371-82ac438c64cd",
    "name": "ClickHouse Service with provisioning state",
    "description": "Clickhouse Service with provisioning state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "provisioning"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8311771c-032d-4b3f-8cce-e20d639d2f1f",
    "name": "ClickHouse Service with running state",
    "description": "Clickhouse Service with running state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "running"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "addabd56-56dd-4093-bf39-3abd6293069e",
    "name": "ClickHouse Service with stopped state",
    "description": "Clickhouse Service with stopped state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "stopped"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "134d9813-0686-4cae-83a3-fcff42f669f5",
    "name": "ClickHouse Service with terminated state",
    "description": "Clickhouse Service with terminated state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "terminated"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1080e7fb-8628-4162-b508-99e72f45f7b3",
    "name": "ClickHouse Service with degraded state",
    "description": "Clickhouse Service with degraded state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "degraded"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c0fed3c6-683c-45b4-b5b6-b72f1c839568",
    "name": "ClickHouse Service with failed state",
    "description": "Clickhouse Service with failed state",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.ClickHouse.Service.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_state",
              "string_value": "failed"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a76c022f-9f76-4ac0-ba14-ac7433523bf7",
    "name": "Zendesk Users",
    "description": "All Zendesk local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5b58166e-d725-44c5-a4ad-87bb4d1c258c",
    "name": "Zendesk Deactivated Users",
    "description": "Users in Zendesk that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1d40f3f5-f658-4846-b381-e1df33225cfa",
    "name": "Zendesk Administrators",
    "description": "Number of users who have been granted the Admin role in Zendesk",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zendesk.Role",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0231fb71-29f9-4d79-8af8-af2772fdc3db",
    "name": "Zendesk Roles with Users",
    "description": "Zendesk roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zendesk.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5e55c081-3999-4c2c-bf43-64edca28dc2f",
    "name": "Zendesk Users Related to AzureAD Users",
    "description": "Zendesk Users with an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "876681e8-32de-49e0-a364-eec5a4a0ef23",
    "name": "Zendesk Users Not Related to AzureAD Users",
    "description": "Zendesk Users who do not have an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9157d253-39c8-4782-999d-122e30fe985b",
    "name": "Deactivated Azure AD Users with Zendesk Access",
    "description": "Azure AD Users who are deactivated that have an active Zendesk User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zendesk.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "920df6a6-1a28-4471-bf89-c14613c6f184",
    "name": "Zendesk Users Related to Okta Users",
    "description": "Zendesk Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3b36b802-17ec-453e-b7d1-d61f2c8ce491",
    "name": "Zendesk Users Not Related to Okta Users",
    "description": "Zendesk Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zendesk.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "64740a2e-4f23-4fa5-93ab-c3b815344d85",
    "name": "Deactivated Okta Users with Zendesk Access",
    "description": "Okta Users who are deactivated that have an active Zendesk User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zendesk.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "88c4f872-7bfe-4764-a3f2-4371b84b714b",
    "name": "PagerDuty Users",
    "description": "All PagerDuty local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e8c38a61-7372-40e5-a93f-9217faac6729",
    "name": "PagerDuty Billed Users",
    "description": "Billed Users in PagerDuty",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_billed",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0508903c-a0f7-4b2e-8db1-1463efe20972",
    "name": "PagerDuty Roles with Users",
    "description": "PagerDuty roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.PagerDuty.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "1058c178-4607-4c01-9c16-95303b7742e2",
    "name": "PagerDuty Administrators",
    "description": "Number of users who have been granted the Golbal Admin role in PagerDuty",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.PagerDuty.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.PagerDuty.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Golbal Admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Account Owner"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6f23cd61-41a8-4ec2-9676-6b456ab3d690",
    "name": "PagerDuty Teams with Users",
    "description": "PagerDuty Teams with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.Team.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.PagerDuty.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f6387f36-f661-4758-aeb2-f85a9bb94606",
    "name": "PagerDuty Public Teams",
    "description": "Public Teams in PagerDuty",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_default_role",
              "string_value": "manager"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a7c6f3c5-2002-467f-ac7e-eae94c78f27a",
    "name": "PagerDuty Private Teams",
    "description": "Private Teams in PagerDuty",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_default_role",
              "string_value": "none"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6bc2416f-0d5c-4a85-b2c1-936d4d0e39e6",
    "name": "PagerDuty Users Related to Okta Users",
    "description": "PagerDuty Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c6c749ef-ff84-435b-ace5-5ab6a9c6d2c5",
    "name": "PagerDuty Users Not Related to Okta Users",
    "description": "PagerDuty Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8a5041f9-602d-44e5-8d4b-11e7356be131",
    "name": "PagerDuty Users Related to Azure AD Users",
    "description": "PagerDuty Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "76c5ede3-fe22-42ff-87de-e142fbae33f2",
    "name": "PagerDuty Users Not Related to Azure AD Users",
    "description": "PagerDuty Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.PagerDuty.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b6d9b15-07c5-4a63-a99d-06bd45cc1cfe",
    "name": "Ramp Users",
    "description": "All Ramp local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4db309b2-3b95-4daa-a0b8-773a292fc614",
    "name": "Ramp Active Users",
    "description": "Active Accounts in Ramp",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "514fbdf9-2596-4313-9582-d2ee333c6d52",
    "name": "Ramp Deactivated Users",
    "description": "Accounts in Ramp that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bf62fd88-ac51-4232-9732-46cb9c6effb7",
    "name": "Ramp Roles with Users",
    "description": "Ramp roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Ramp.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6909af70-3d1c-4c64-a641-cee0b335e736",
    "name": "Ramp Teams with Users",
    "description": "Ramp teams that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Ramp.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0eaff110-d50b-4d3b-b329-7ec9eec83f5c",
    "name": "Ramp Administrators",
    "description": "Number of users who have been granted the BUSINESS_ADMIN role in Ramp",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Ramp.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Ramp.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "BUSINESS_ADMIN"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "BUSINESS_OWNER"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "58ab9714-c3a4-4443-82ce-4986ffa24d07",
    "name": "Ramp Users Related to Okta Users",
    "description": "Ramp Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9ce3b282-8280-452b-8a32-33817cdbf1eb",
    "name": "Ramp Users Not Related to Okta Users",
    "description": "Ramp Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "77e2eb7a-2f00-43f5-b181-e04040e595ed",
    "name": "Deactivated Okta Users with Ramp Access",
    "description": "Okta Users who are deactivated that have an active Ramp User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Ramp.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "e5c90f96-7c5c-4615-857f-c0b779ce9581",
    "name": "Ramp Users Related to Azure AD Users",
    "description": "Ramp Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "dda542d0-073b-4472-8464-45ff553e4fd1",
    "name": "Ramp Users Not Related to Azure AD Users",
    "description": "Ramp Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Ramp.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ce062218-4953-4f41-a4f9-317a5f67d027",
    "name": "Deactivated Azure AD Users with Ramp Access",
    "description": "Azure AD Users who are deactivated that have an active Ramp User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Ramp.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "3aa50417-6e91-49a8-800d-4bd7cdf51aff",
    "name": "Jira Data Center Users",
    "description": "All Jira Data Center local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3bf5966e-1ce3-4947-a786-71275c3118fd",
    "name": "Jira Data Center Active Users",
    "description": "Active Accounts in Jira Data Center",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "937c167f-d5eb-43e1-b110-5c1a596174ca",
    "name": "Jira Data Center Deactivated Users",
    "description": "Accounts in Jira Data Center that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0b66f863-89cb-423e-a7f3-4637beb40dda",
    "name": "Jira Data Center Deleted Users",
    "description": "Accounts in Jira Data Center that have been Deleted.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_deleted",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3b9f4505-060b-4914-9d7f-669c6def8184",
    "name": "Jira Data Center Roles with Users",
    "description": "Jira Data Center roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e389e985-7d16-4d6d-80d5-31014022315a",
    "name": "Jira Data Center Roles with Groups",
    "description": "Jira Data Center roles that have groups assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9cfd323d-c55c-407a-a652-ac951baff5dd",
    "name": "Jira Data Center Roles with Projects",
    "description": "Jira Data Center roles that have project assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.Project.Resource"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "eebc41b2-33f9-4757-9220-b844e571b32e",
    "name": "Jira Data Center Administrators",
    "description": "Number of users who have been granted the admin role in Jira Data Center",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Jira Data Center.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "owner"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b4a5b538-513e-429a-bdcc-a593dc8b0063",
    "name": "Jira Data Center Users Related to Okta Users",
    "description": "Jira Data Center Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ccec1363-ef21-4b51-b970-6032388811a6",
    "name": "Jira Data Center Users Not Related to Okta Users",
    "description": "Jira Data Center Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0b9656ab-5afc-4284-ac97-e817c9dea228",
    "name": "Deactivated Okta Users with Jira Data Center Access",
    "description": "Okta Users who are deactivated that have an active Jira Data Center User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a3d34328-2b78-4124-a6a9-716e14898a0e",
    "name": "Jira Data Center Users Related to Azure AD Users",
    "description": "Jira Data Center Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4362438d-9d47-4c38-b0ee-7260cfa66790",
    "name": "Jira Data Center Users Not Related to Azure AD Users",
    "description": "Jira Data Center Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4182cb4b-7dde-4e2b-b7aa-c1f5979527d9",
    "name": "Deactivated Azure AD Users with Jira Data Center Access",
    "description": "Azure AD Users who are deactivated that have an active Jira Data Center User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "e8379457-8719-43ee-82ae-76a80542e9b4",
    "name": "Jira Data Center Projects with Users",
    "description": "Jira Data Center Projects with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "56d3b4ac-854b-437c-8690-3b62cbbb02ab",
    "name": "Jira Data Center Projects with Groups",
    "description": "Jira Data Center Projects with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jira Data Center.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jira Data Center.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cbb6e92a-6609-416b-9bcc-e28aa30fc4b0",
    "name": "Boomi Users",
    "description": "All Boomi local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5fb6db62-a04d-4649-914d-ec02ba342db4",
    "name": "Boomi Roles with Users",
    "description": "Boomi roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Boomi.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ac6ffe34-5dfa-45bb-970c-2984739e7a70",
    "name": "Boomi Administrators",
    "description": "Number of users who have been granted the Administrator role in Boomi",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Boomi.Role",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "adb8bb1e-b2f2-4284-a383-e9393933cb4d",
    "name": "Boomi Users Related to AzureAD Users",
    "description": "Boomi Users with an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "1197401c-fac0-4e32-b0ce-4b5030bfa7e3",
    "name": "Boomi Users Not Related to AzureAD Users",
    "description": "Boomi Users who do not have an AzureAD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9490b83a-5591-4bc8-9b03-cf3bcaa77db5",
    "name": "Boomi Users Related to Okta Users",
    "description": "Boomi Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9ba55a9e-6e0e-4da4-bfa3-1df4588857db",
    "name": "Boomi Users Not Related to Okta Users",
    "description": "Boomi Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Boomi.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c0309ddc-361d-4a37-867f-bfd12d174763",
    "name": "Power BI Users",
    "description": "All Power BI local User accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "48aeadfc-7f2b-4a88-a9ab-33e3fcc562da",
    "name": "Power BI Admins",
    "description": "Number of users who have been granted the Admin role in Power BI",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Power BI.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1e05b280-f46d-4eb0-a6d0-1e1eb351eba3",
    "name": "Power BI Viewer",
    "description": "Number of users who have been granted the Viewer role in Power BI",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Power BI.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "388541f8-1ced-4504-8e23-f665a162e87b",
    "name": "Power BI Contributor",
    "description": "Number of users who have been granted the Contributor role in Power BI",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Power BI.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Contributor"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8ee2af71-6092-49ee-8258-42a39aff67e9",
    "name": "Power BI Members",
    "description": "Number of users who have been granted the Member role in Power BI",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Power BI.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "08664ba4-e928-489f-b740-d325f7a5e5fa",
    "name": "Power BI Groups",
    "description": "All Power BI local Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "775d57c6-2255-4f13-aae2-c928d1da08b0",
    "name": "Power BI Groups with Users",
    "description": "Power BI Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0adc5e65-30eb-4e84-b8cf-be42dd301b6b",
    "name": "Power BI Roles",
    "description": "Total number of Power BI Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5a4a9119-9603-45cc-a79b-3714b49f4ff5",
    "name": "Power BI Roles with Users",
    "description": "Power BI roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "46538869-26e4-4dc3-bf84-065ff7ba1a9f",
    "name": "Power BI Workspaces",
    "description": "All Power BI Workspaces discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Workspace.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ac5ec6dc-6bf6-4178-a893-0c79a396ffaf",
    "name": "Power BI Workspaces with Users",
    "description": "Power BI Workspaces with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ced901ae-5d7e-4750-b178-f7fe059ae20c",
    "name": "Power BI Workspaces with Groups",
    "description": "Power BI Workspaces with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e4895d5f-ff9d-48d5-925d-535cf7e97862",
    "name": "Power BI Users Related to Okta Users",
    "description": "Power BI Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "71a67601-9e34-4cfb-8ffb-5ab57fe05e5c",
    "name": "Power BI Users Not Related to Okta Users",
    "description": "Power BI Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5d4ed5f3-b9f3-4cfc-8bd1-b68cd9fd3ca7",
    "name": "Deactivated Okta Users with Power BI Access",
    "description": "Okta Users who are deactivated that have an active Power BI User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "39dbfb61-38ca-4832-9d34-1ff47f6a8490",
    "name": "Power BI Users Related to Azure AD Users",
    "description": "Power BI Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2e8a5096-bbc5-4c10-b92c-e50f29991d13",
    "name": "Power BI Users Not Related to Azure AD Users",
    "description": "Power BI Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Power BI.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7993ed28-b57c-4991-b1bf-7acaf9196828",
    "name": "Deactivated Azure AD Users with Power BI Access",
    "description": "Azure AD Users who are deactivated that have an active Power BI User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Power BI.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "4e27869f-b117-434a-9659-d11ffb55edd5",
    "name": "Cisco Duo Users",
    "description": "All Cisco Duo local User accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9946234b-1230-42fb-af58-42cff8458ddc",
    "name": "Cisco Duo Owners",
    "description": "Number of users who have been granted the Owner role in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Cisco Duo.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Cisco Duo.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7c019107-c065-4983-997f-ffed667fb400",
    "name": "Cisco Duo Administrators",
    "description": "Number of users who have been granted the Administrator role in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Cisco Duo.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Cisco Duo.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "dc8ca19c-8f6b-44e6-be1a-7a9625491258",
    "name": "Cisco Duo Groups",
    "description": "All Cisco Duo local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "410512c8-bdf6-46d4-b944-6de4fa4f051d",
    "name": "Cisco Duo Active Users",
    "description": "Active Accounts in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f58d15c7-f968-4d96-846b-d7e4221df791",
    "name": "Cisco Duo Deactivated Users",
    "description": "Accounts in Cisco Duo that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7ae913c6-ca41-473c-a7f4-31d9ebbd986f",
    "name": "Cisco Duo Administrators Users",
    "description": "Users in Cisco Duo that are administrators.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "81ee122c-933b-4d17-a86b-82bc629cfdad",
    "name": "Cisco Duo Non-Administrators Users",
    "description": "Users in Cisco Duo who are not administrators.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_admin",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "004a2f86-c729-412a-b2a4-54be2b05bd0c",
    "name": "Cisco Duo Users created in the last 24 hours",
    "description": "Cisco Duo Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6b64b5a6-b50c-4c5c-a79f-231f88b1af36",
    "name": "Cisco Duo Roles with Users",
    "description": "Cisco Duo roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Cisco Duo.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c6350f36-1d8a-4445-a50b-b7ab37b87865",
    "name": "Cisco Duo Hardware Token AccessCreds",
    "description": "Hardware Token AccessCreds in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.AccessCreds",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "type",
              "string_value": "HardwareToken"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3d095e09-4e5e-4e9a-89fc-37cdca803541",
    "name": "Cisco Duo Phones AccessCreds",
    "description": "Phone AccessCreds in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.AccessCreds",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "type",
              "string_value": "Phone"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6386eacb-8c49-44eb-9252-2b4cae608a1a",
    "name": "Cisco Duo WebAuthnCredentials AccessCreds",
    "description": "WebAuthnCredential AccessCreds in Cisco Duo",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.AccessCreds",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "type",
              "string_value": "WebAuthnCredential"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "71004b19-5b0b-41f5-af01-6478d36ddfba",
    "name": "Cisco Duo Users Related to Okta Users",
    "description": "Cisco Duo Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "905cf29c-43d1-4712-98fd-5c4305f1deda",
    "name": "Cisco Duo Users Not Related to Okta Users",
    "description": "Cisco Duo Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "41a9129c-b853-4376-8922-30fd83c4257c",
    "name": "Deactivated Okta Users with Cisco Duo Access",
    "description": "Okta Users who are deactivated that have an active Cisco Duo User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Cisco Duo.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "d37d206c-f0ea-4ebd-9a5d-38aca41aa901",
    "name": "Cisco Duo Users Related to Azure AD Users",
    "description": "Cisco Duo Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "17ababa1-74c9-4f76-a972-47017a2bb8d5",
    "name": "Cisco Duo Users Not Related to Azure AD Users",
    "description": "Cisco Duo Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Cisco Duo.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4833e95a-6d91-4f0f-b538-58dccf87021c",
    "name": "Deactivated Azure AD Users with Cisco Duo Access",
    "description": "Azure AD Users who are deactivated that have an active Cisco Duo User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Cisco Duo.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "d11add82-3009-4b66-92e5-36ad73a1422e",
    "name": "Zoom Users",
    "description": "All Zoom local User accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4a44ac87-1e2c-4fe1-b1eb-921a3c6b3b97",
    "name": "Zoom Groups",
    "description": "All Zoom local Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3021f205-0eb0-4f03-aa78-d682a9ffc0bf",
    "name": "Zoom Active Users",
    "description": "Active Accounts in Zoom",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "42205a61-c090-4a46-ab1f-8ebbe0d0eeeb",
    "name": "Zoom Deactivated Users",
    "description": "Accounts in Zoom that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ae4dafb9-c15c-4b29-b26c-7a220868fc59",
    "name": "Zoom Owner",
    "description": "Number of users who have been granted the Owner role in Zoom",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Zoom.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2cf6fca5-c44e-44c0-b7eb-3646b89a2f4a",
    "name": "Zoom Admin",
    "description": "Number of users who have been granted the Admin role in Zoom",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Zoom.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9d9b76ad-03cc-48d4-807a-2dc2509f5946",
    "name": "Zoom Member",
    "description": "Number of users who have been granted the Member role in Zoom",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Zoom.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2bfd41c0-b088-41c3-8090-0347572511be",
    "name": "Zoom Users created in the last 24 hours",
    "description": "Zoom Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cbe6d3df-528f-4a0d-b3bf-8c9d71197778",
    "name": "Zoom Users login in the last 24 hours",
    "description": "Zoom Users login in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "ab5574ef-6e34-4ac9-806b-79ce66f00d7e",
    "name": "Zoom Roles with Users",
    "description": "Zoom roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "27b63e3a-67a9-4bf5-91fc-c8577986076d",
    "name": "Zoom Groups with Users",
    "description": "Zoom groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e2892177-2e26-4e94-8a25-461a09b61616",
    "name": "Zoom Users Related to Okta Users",
    "description": "Zoom Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1fad5c43-93b7-41f3-a200-326f71fb22b3",
    "name": "Zoom Users Not Related to Okta Users",
    "description": "Zoom Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c5b15d4d-bfb6-40db-bbbe-7b8990561398",
    "name": "Deactivated Okta Users with Zoom Access",
    "description": "Okta Users who are deactivated that have an active Zoom User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "a4c97025-ed1e-4a70-bcc8-52a81bf09597",
    "name": "Zoom Users Related to Azure AD Users",
    "description": "Zoom Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b22dac17-77cf-4294-ae96-5956c86b2703",
    "name": "Zoom Users Not Related to Azure AD Users",
    "description": "Zoom Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zoom.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c8581c40-3b87-4867-a798-ff9f35e1692f",
    "name": "Deactivated Azure AD Users with Zoom Access",
    "description": "Azure AD Users who are deactivated that have an active Zoom User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zoom.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "bebec995-9078-4fc6-abd5-6b857fcf5f8e",
    "name": "Redis Cloud Users",
    "description": "All Users in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "28a13167-3002-425a-9227-ab24c44fc968",
    "name": "Redis Cloud Groups",
    "description": "All Redis Cloud local groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "7e5d8a92-f835-4d9a-aaff-24c82ef72c99",
    "name": "Redis Cloud Active Database Users",
    "description": "Active Database Users in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_user_category",
                    "string_value": "Database User"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8532f7ac-3a4f-4949-b73b-ee593cd491b4",
    "name": "Redis Cloud Deactivated Database Users",
    "description": "Deactivated Database Users in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_user_category",
                    "string_value": "Database User"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "84dca157-e2c8-4691-af21-11e91a2088a5",
    "name": "Redis Cloud Application Users",
    "description": "Application Users in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_user_category",
              "string_value": "Application User"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e12b5d04-7361-499f-90d7-884f586a5c02",
    "name": "Redis Cloud Database Users",
    "description": "Database Users in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_user_category",
              "string_value": "Database User"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8ae1c973-ee3e-4f6d-ac03-250d186b5bd8",
    "name": "Redis Cloud MFA enabled Application Users",
    "description": "MFA enabled Application Users in Redis Cloud",
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_user_category",
                    "string_value": "Application User"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_mfa_enabled",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "04b34899-fd51-473f-bcbb-1d2d418583db",
    "name": "Redis Cloud MFA disabled Application Users",
    "description": "MFA disabled Application Users in Redis Cloud",
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_user_category",
                    "string_value": "Application User"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_mfa_enabled",
                    "bool_value": false
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "4d3b9f98-41bb-4a22-9f70-50e08b251050",
    "name": "Redis Cloud Users with API Key",
    "description": "Users with API Key in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_api_key",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "159ffbe7-e6dd-4660-9fdc-a63cab7ab92c",
    "name": "Redis Cloud Users without API Key",
    "description": "Users without API Key in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "has_api_key",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e1eb94de-b51a-4d8c-9a50-71bdfaa54d5b",
    "name": "Redis Cloud Groups with Users",
    "description": "Redis Cloud groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3c8169d1-1221-41e8-aea4-d78a631c2268",
    "name": "Redis Cloud Application Users with Roles",
    "description": "Redis Cloud application users that have roles assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_user_category",
              "string_value": "Application User"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Role"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "56b9a92c-af04-4ecf-885c-ea8c1f489661",
    "name": "Redis Cloud Database Users with Roles",
    "description": "Redis Cloud database users that have roles assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_user_category",
              "string_value": "Database User"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Role"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9760674b-3cfa-48e6-b49b-8314f53629b7",
    "name": "Redis Cloud Users with Owner Role",
    "description": "Number of users who have been granted the Owner role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cedaa4d2-5509-42b4-a67a-9aafecf15467",
    "name": "Redis Cloud Users with Billing Admin Role",
    "description": "Number of users who have been granted the Billing Admin role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Billing Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0ffdd3cb-7703-4393-aa4a-9a6d7459a858",
    "name": "Redis Cloud Users with Manager Role",
    "description": "Number of users who have been granted the Manager role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Manager"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d64dabcb-7c9b-4791-9ddb-d8d743eaa260",
    "name": "Redis Cloud Users with Member Role",
    "description": "Number of users who have been granted the Member role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Member"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ca815b40-2dd2-43b0-803d-4154cbfbeb6d",
    "name": "Redis Cloud Users with Viewer Role",
    "description": "Number of users who have been granted the Viewer role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ce84c30f-aebc-4d65-8fbf-d9056d1ac7a8",
    "name": "Redis Cloud Users with Full-Access Role",
    "description": "Number of users who have been granted the Full-Access role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Full-Access"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "57ee34e2-2d76-4cb0-9738-33edfd918a98",
    "name": "Redis Cloud Users with Read-Only Role",
    "description": "Number of users who have been granted the Read-Only role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Read-Only"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "01fc7dfe-c104-43e0-9f91-854d13bf7fb1",
    "name": "Redis Cloud Users with Read-Write Role",
    "description": "Number of users who have been granted the Read-Write role in Redis Cloud",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Redis Cloud.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Read-Write"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a92f20b7-4a26-4acb-a8e4-defa5f05cea7",
    "name": "Redis Cloud Users Related to Okta Users",
    "description": "Redis Cloud Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0e3d4908-7b7c-4712-b960-0ee91dce0433",
    "name": "Redis Cloud Users Not Related to Okta Users",
    "description": "Redis Cloud Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "90915db5-510b-49b6-9a9b-27d187b4ce6e",
    "name": "Redis Cloud Users Related to Azure AD Users",
    "description": "Redis Cloud Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0e23a31f-5e1f-446c-a5c1-5e3898bcaf6e",
    "name": "Redis Cloud Users Not Related to Azure AD Users",
    "description": "Redis Cloud Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Redis Cloud.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "518e1a59-13f9-44aa-900f-f2708ab5297d",
    "name": "Deactivated Azure AD Users with Redis Cloud Access",
    "description": "Azure AD Users who are deactivated that have an active Redis Cloud User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "011a4fa4-e6d3-493c-8d77-28c4e16471dd",
    "name": "Deactivated Okta Users with Redis Cloud Access",
    "description": "Okta Users who are deactivated that have an active Redis Cloud User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Redis Cloud.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "e573910d-6f10-45d3-89b4-ff58ade133d7",
    "name": "Terraform Users",
    "description": "All Terraform local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2f14fb6f-0550-4e84-a606-5a54b2a6489c",
    "name": "Terraform Active Users",
    "description": "Active Accounts in Terraform",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6511b54f-0798-4ec5-b321-77aafbb78deb",
    "name": "Terraform Deactivated Users",
    "description": "Accounts in Terraform that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e9a9c5c4-6afb-4fa9-b447-5db7043aaf11",
    "name": "Terraform Roles with Users",
    "description": "Terraform roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Terraform.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0f27e7e6-0fa8-4e48-a716-b474d4237599",
    "name": "Terraform Administrators",
    "description": "Number of users who are owners of organization in Terraform",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_organization_owners",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6faebec6-c179-4c6c-a26f-3794d82c46db",
    "name": "Terraform Users Related to Okta Users",
    "description": "Terraform Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "14324d89-6080-4732-9f62-a66bdcd72257",
    "name": "Terraform Users Not Related to Okta Users",
    "description": "Terraform Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1b4dc58b-92f2-4105-9ef8-f4e2363860a9",
    "name": "Deactivated Okta Users with Terraform Access",
    "description": "Okta Users who are deactivated that have an active Terraform User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Terraform.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "43eed191-5002-44e1-b6a3-87a549483301",
    "name": "Terraform Users Related to Azure AD Users",
    "description": "Terraform Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "bbcf5881-c635-4034-8bd1-1a6c8a8a2ca6",
    "name": "Terraform Users Not Related to Azure AD Users",
    "description": "Terraform Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0b6b57d9-1dbe-43aa-9e27-e4de83a87c65",
    "name": "Deactivated Azure AD Users with Terraform Access",
    "description": "Azure AD Users who are deactivated that have an active Terraform User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Terraform.User",
                "root_condition": {
                  "leaf_condition": {
                    "property": "customprop_give_access",
                    "fn": "EQ",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "973fdb0f-3275-44ed-a8b6-ca97a534e688",
    "name": "Terraform Users created in the last 24 hours",
    "description": "Terraform Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6b26be53-b1de-48da-8ddb-a7d02ff66065",
    "name": "Terraform Private Teams",
    "description": "Terraform Teams with Secret Visibility",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_visibility",
              "string_value": "secret"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "56def83f-84b4-4e9a-8dc3-e0a7495028ef",
    "name": "Terraform Service Accounts",
    "description": "Terraform Users that are Service Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service account"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "5d65e197-01f8-4505-924e-632ded83cf37",
    "name": "Terraform Service Accounts with Organization Owner access",
    "description": "Terraform service accounts with Organization Owner access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Terraform.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "user_type",
                    "string_value": "service account"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_organization_owners",
                    "bool_value": true
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "best_practice",
      "service_account"
    ]
  },
  {
    "id": "e2cff52d-8925-48f4-9bc4-97a3e6a2e96e",
    "name": "iManage Users",
    "description": "All iManage local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "39035455-2842-4724-ac35-cd36be057d41",
    "name": "iManage Users with allowed logon",
    "description": "Accounts in iManage that have been allowed to login",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_allow_logon",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cb304ff2-793d-4426-be1d-8a7ff4f6432a",
    "name": "iManage Users without allowed logon",
    "description": "Accounts in iManage that have been not allowed to login.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_allow_logon",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "be1019bb-5537-4655-8930-0170a8c6244f",
    "name": "iManage Users created in the last 24 hours",
    "description": "iManage Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6badfef0-596a-45e6-a0c0-53c7a809faff",
    "name": "iManage Super Users",
    "description": "Super User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_super_user",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "a9657a74-ce68-45c0-a8bd-9f737ac56c8b",
    "name": "iManage System Users",
    "description": "System User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_system_user",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "39199603-5ee1-4248-97a9-6095b6d7dd0a",
    "name": "iManage Virtual Users",
    "description": "Virtual User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_virtual_user",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bd5599fd-f0ef-4117-b149-9e9be05b4abb",
    "name": "iManage Enterprise Users",
    "description": "Enterprise User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_virtual_user",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7dcdf4b0-ddc8-4274-a4bc-cb3f3716b45e",
    "name": "iManage External Users",
    "description": "External User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_external",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "5305b503-03c8-44fd-b8b3-8116de51150f",
    "name": "iManage Locked Users",
    "description": "Locked User Accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_locked",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7de66d26-2826-4b02-a149-4b8e5fad2c50",
    "name": "iManage Groups created in the last 24 hours",
    "description": "iManage Groups created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "84fec7e1-4e19-48a4-8306-a7ffd05e0567",
    "name": "iManage Groups for Virtual Users",
    "description": "Groups for virtual user accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_imanage_group_type_no",
              "number_value": 2
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0a7bee9d-701b-44b4-80ea-c1f535c4a606",
    "name": "iManage Groups for Enterprise Users",
    "description": "Groups for enterprise user accounts in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_imanage_group_type_no",
              "number_value": 6
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "415dfdd7-cfeb-4829-92ce-64fdc2fe1941",
    "name": "iManage External Groups",
    "description": "External groups in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_external",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b43c724c-aed4-403c-bf52-ca32cd1a02fd",
    "name": "iManage Enabled Groups",
    "description": "Enabled groups in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_enabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "bf0a0986-2c2d-47c1-a473-5cffb23ef554",
    "name": "iManage Disabled Groups",
    "description": "Disabled groups in iManage",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_enabled",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "199b5d8d-cbc2-4967-bc3f-12c7cdd460db",
    "name": "iManage Groups with Users",
    "description": "iManage groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.iManage.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "537fbd9a-7983-4a0f-b8d6-6f03c1e55e6f",
    "name": "iManage Users with NRTADMIN group assigned",
    "description": "iManage users that have NRTADMIN group assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.iManage.Group",
                "root_condition": {
                  "leaf_condition": {
                    "property": "name",
                    "fn": "EQ",
                    "string_value": "nrtadmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "df37e4db-3133-44c4-a630-83fece45a02f",
    "name": "iManage Roles with Users",
    "description": "iManage roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.iManage.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "73fb56bc-0fc4-4303-a2f9-898f10a6ce7a",
    "name": "iManage Users Related to Okta Users",
    "description": "iManage Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9059f8ad-fc3a-45fe-bfad-7c78f7cb540c",
    "name": "iManage Users Not Related to Okta Users",
    "description": "iManage Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b1c21aa1-4ca0-4989-a574-945e9609bfe3",
    "name": "iManage Users Related to Azure AD Users",
    "description": "iManage Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "aeddac6c-862c-4c94-b5b8-f44a3ead3c9b",
    "name": "iManage Users Not Related to Azure AD Users",
    "description": "iManage Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8aab7ac7-64e9-4e22-aff6-dbd2329224eb",
    "name": "iManage Libraries with Users",
    "description": "iManage Libraries with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.iManage.Library.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.iManage.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Okta users with no recent login and have KMS Delete permissions",
    "id": "51f93c58-ce43-4239-9c9b-8cb833de240c",
    "labels": [
      "nonhuman_identity",
      "delete_permissions"
    ],
    "name": "Okta users with no recent login and have KMS Delete permissions",
    "result_type": "number",
    "risk_level": "LOW",
    "risk_remediation": "Adhering to the best identity security and governance practices, review and revoke KMS Delete permissions for Okta users with no recent login activity, and implement a policy for regular access reviews and deactivation of inactive accounts.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "property": "enabled_user_policy_actions",
                    "string_value": "Delete"
                  }
                },
                "type": "KmsCmk"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Enterprise Applications (Managed Identities) with access to Datalake Filesystems",
    "id": "e8f3af29-1979-4a2d-8167-7565a7fd1ada",
    "labels": [
      "nonhuman_identity"
    ],
    "name": "Azure - Enterprise Applications (Managed Identities) with access to Datalake Filesystems",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADEnterpriseApplication",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "azure_tenant_id",
              "string_value": "$COOKIE_AZURE_TENANT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureDataLakeFilesystem"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Service Accounts in Okta",
    "id": "13bcf519-a717-45a6-bfe0-95b7245dfc91",
    "labels": [
      "nonhuman_identity",
      "service_account"
    ],
    "name": "Service Accounts in Okta",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "user_type"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "manager"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "mfa_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "last_login_at"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "@"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "43e89af3-b779-4c76-ba0f-6a11a69ffb3a",
    "name": "All Tableau Users",
    "description": "All Tableau user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "da393680-3a5b-45fc-8803-ef4faf11ec25",
    "name": "Tableau Projects",
    "description": "All Tableau Projects discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.Project.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "76ca8a9a-5620-4600-bfab-beee7a1125f3",
    "name": "Tableau Projects with Locked Asset Permissions",
    "description": "Tableau Projects where the asset permissions are locked",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_content_permissions",
              "string_value": "LockedToProject"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "d7d69235-3273-4ccc-918d-5ddffe3924ab",
    "name": "Tableau Projects with Customizable Asset Permissions",
    "description": "Tableau Projects where the asset permissions customizable by the owner",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_content_permissions",
              "string_value": "ManagedByOwner"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "06ac39b2-c682-4e0b-9118-1fc9af31625e",
    "name": "Tableau Users Not Active Recently",
    "description": "Number of Tableau users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "6c6d8ac1-92fd-45ef-826a-1cdc38d845e6",
    "name": "Tableau Admins",
    "description": "Number of Tableau users who are assigned administrator roles",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.Tableau.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "or": true,
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "SiteAdministratorCreator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "SiteAdministratorExplorer"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9047ca94-c016-4343-851c-eef6c8fb1713",
    "name": "Tableau Users Related to Okta Users",
    "description": "Tableau Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Tableau.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "39ac6af5-ff52-4cf2-a5ce-0649d9f60108",
    "name": "HubSpot Users",
    "description": "All HubSpot local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a6b3fcb0-5703-4385-9c96-45d2faecc1b8",
    "name": "HubSpot Roles with Users",
    "description": "HubSpot roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.HubSpot.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c02348cd-a53a-4fc9-a0ca-578aeb6f573d",
    "name": "HubSpot Super Admins",
    "description": "Number of users who have been granted the Super Admin role in HubSpot",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.HubSpot.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.HubSpot.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Super Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "daaaf59e-bef2-491b-b927-67e98eea7444",
    "name": "HubSpot Roles",
    "description": "Total number of HubSpot Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "46afff16-5ca4-4e67-b122-3e3df61a1884",
    "name": "HubSpot Teams",
    "description": "All HubSpot local Teams",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "197ea063-9bb1-47b2-98da-a43ec371806e",
    "name": "HubSpot Teams with Users",
    "description": "HubSpot teams that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.HubSpot.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f287cd9c-ebaa-4409-9022-a3777decff4e",
    "name": "HubSpot Users Related to Okta Users",
    "description": "HubSpot Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "aba469fd-5f9a-4c09-b02d-eabe25708ed0",
    "name": "HubSpot Users Not Related to Okta Users",
    "description": "HubSpot Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9f5e07c3-1ce0-4afb-8308-f5981b34bcc7",
    "name": "HubSpot Users Related to Azure AD Users",
    "description": "HubSpot Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0812151f-d8c2-4583-95d6-ad3dae513683",
    "name": "HubSpot Users Not Related to Azure AD Users",
    "description": "HubSpot Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.HubSpot.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "description": "AWS IAM Roles with AttachUser, AttachRole and AttachGroupPolicy permissions",
    "id": "34aeef04-e564-48a6-bc5d-2c407be138b4",
    "name": "AWS IAM Roles with AttachUser, AttachRole and AttachGroupPolicy permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "parent_condition": {
                          "conditions": [
                            {
                              "leaf_condition": {
                                "fn": "LIST_ANY_ELEMENT_EQ",
                                "property": "permissions",
                                "string_value": "iam:AttachUserPolicy"
                              }
                            },
                            {
                              "leaf_condition": {
                                "fn": "LIST_ANY_ELEMENT_EQ",
                                "property": "permissions",
                                "string_value": "iam:AttachGroupPolicy"
                              }
                            },
                            {
                              "leaf_condition": {
                                "fn": "LIST_ANY_ELEMENT_EQ",
                                "property": "permissions",
                                "string_value": "iam:AttachRolePolicy"
                              }
                            }
                          ],
                          "or": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "not": true,
                          "property": "deny"
                        }
                      }
                    ]
                  }
                },
                "type": "AwsIamGroupedPermission"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "AWS IAM Roles with CreatePolicyVersion or SetDefaultPolicyVersion permission",
    "id": "c460510c-651a-46f9-99c2-9355445612fb",
    "name": "AWS IAM Roles with CreatePolicyVersion or SetDefaultPolicyVersion permission",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "parent_condition": {
                          "conditions": [
                            {
                              "leaf_condition": {
                                "fn": "LIST_ANY_ELEMENT_EQ",
                                "property": "permissions",
                                "string_value": "iam:CreatePolicyVersion"
                              }
                            },
                            {
                              "leaf_condition": {
                                "fn": "LIST_ANY_ELEMENT_EQ",
                                "property": "permissions",
                                "string_value": "iam:SetDefaultPolicyVersion"
                              }
                            }
                          ],
                          "or": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "not": true,
                          "property": "deny"
                        }
                      }
                    ]
                  }
                },
                "type": "AwsIamGroupedPermission"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Salesforce Profiles that are not related to Salesforce Users",
    "id": "b4b34730-1121-4120-9ba8-1310a013524f",
    "name": "Salesforce Profiles with no Salesforce Users",
    "risk_explanation": "Salesforce profiles without users poses a risk since they can still be configured with permissions and access rights. If these profiles are inadvertently assigned to users in the future, they could grant inappropriate levels of access, leading to potential security breaches. Furthermore, the presence of unused profiles can complicate security management and auditing processes. To mitigate these risks, it is essential to regularly review and clean up unused profiles, ensuring a streamlined and secure Salesforce environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and delete or deactivate unused Salesforce profiles to prevent inappropriate access and simplify security management.",
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceProfile"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Salesforce Users that are not related to Salesforce Group",
    "id": "6408a77b-e37a-42a6-93b7-60da500c23a5",
    "name": "Salesforce Users not in any Salesforce Group",
    "risk_explanation": "Having Salesforce users who are not part of any Salesforce group is a risk. These users may have undefined or overly broad access, making it challenging to enforce and manage security policies effectively. Without group-based access controls, monitoring user activities and ensuring compliance with security standards becomes difficult, increasing the potential for unauthorized access and data breaches. Regularly reviewing user assignments and ensuring all users are appropriately grouped is crucial for maintaining a secure and well-regulated Salesforce environment.",
    "risk_remediation": "Adhering to the best identity security and governance practices, regularly review and assign all Salesforce users to appropriate groups to ensure defined access controls and effective security policy enforcement.",
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SalesforceGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Groups with access to more than 10% of Resources",
    "id": "9c88fc36-d506-4f11-8b82-ac3025b672d9",
    "labels": [
      "best_practice",
      "privileged_access"
    ],
    "name": "Azure AD Groups with access to more than 10% of Resources",
    "risk_explanation": "This is a risk because if an Azure AD group has access to more than 10% of resources, it significantly increases the potential attack surface. Compromising one account within the group could lead to unauthorized access to a large portion of the resources, escalating the impact of any security breach.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement least privilege access by segmenting Azure AD groups to limit their access to a smaller, more manageable number of resources, and regularly review and adjust group memberships and permissions.",
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 10
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Active Directory Users that are deactivated and mapped to active Okta Users",
    "id": "5c31fdcb-7b36-4289-947f-40df3165d618",
    "name": "Active Directory Users that are deactivated and mapped to active Okta Users",
    "result_type": "number",
    "risk_explanation": "This is a risk because deactivated Active Directory (AD) users should not have active identities in Okta. This mismatch can lead to unauthorized access if an attacker exploits the active Okta credentials linked to a deactivated AD user. It highlights a potential gap in identity synchronization and de-provisioning processes.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization and de-provisioning processes between Active Directory and Okta to ensure that deactivated AD users are promptly deactivated in Okta.",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Users that are deactivated and mapped to active Okta Users",
    "id": "dfc2198e-dcb9-418c-9f4c-797adaa4d5a8",
    "name": "Azure AD Users that are deactivated and mapped to active Okta Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "This is a critical risk because deactivated Azure AD users should not have active identities in Okta. This mismatch can lead to unauthorized access if an attacker exploits the active Okta credentials linked to a deactivated Azure AD user. It indicates a significant gap in identity synchronization and deprovisioning processes, potentially allowing unauthorized access to resources.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization and deprovisioning processes between Azure AD and Okta to ensure that deactivated Azure AD users are immediately deactivated in Okta.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Users with access to more than 10% of Resources",
    "id": "61e7fcad-ebfc-42cb-93b2-9c72168c7202",
    "labels": [
      "best_practice"
    ],
    "name": "Azure AD Users with access to more than 10% of Resources",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "This is a risk because if an individual Azure AD user has access to more than 10% of resources, it significantly increases the potential attack surface. If the user's credentials are compromised, it can lead to unauthorized access to a large portion of the resources, greatly escalating the impact of any security breach. Ensuring that no single user has excessive access helps in minimizing this risk.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement role-based access control (RBAC) to ensure users have only the minimum necessary access, regularly review and audit access permissions, and enforce the principle of least privilege to limit any single user's access to less than 10% of resources.",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 10
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Active Directory Users that are deactivated and mapped to active AzureAD Users",
    "id": "c163c62d-1274-4e0f-969f-4330060037d5",
    "name": "Active Directory Users that are deactivated and mapped to active AzureAD Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "This is a critical risk because deactivated Active Directory (AD) users should not have active identities in Azure AD. This discrepancy can lead to unauthorized access if an attacker exploits the active Azure AD credentials linked to a deactivated AD user. It indicates a gap in identity synchronization and deprovisioning processes, potentially allowing unauthorized access to resources.",
    "risk_remediation": "Adhering to the best identity security and governance practices, ensure proper synchronization and deprovisioning processes between Active Directory and Azure AD, and immediately disable or remove any active Azure AD accounts linked to deactivated AD users.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Azure AD Users that are deactivated and mapped to active Active Directory Users",
    "id": "9a535c2b-19d9-4f04-88b7-aee971bbded7",
    "name": "Azure AD Users that are deactivated and mapped to active Active Directory Users",
    "result_type": "number",
    "risk_level": "LOW",
    "risk_explanation": "This is a critical risk because deactivated Azure AD users should not have active identities in Active Directory (AD). This discrepancy can lead to unauthorized access if an attacker exploits the active AD credentials linked to a deactivated Azure AD user. It indicates a significant gap in identity synchronization and deprovisioning processes, potentially allowing unauthorized access to resources.",
    "risk_remediation": "Adhering to the best identity security and governance practices, ensure proper synchronization and deprovisioning processes between Azure AD and Active Directory, and immediately disable or remove any active AD accounts linked to deactivated Azure AD users.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Redshift Local Users not mapped to any IdP Users",
    "id": "61e5dc0b-c6ba-4c28-b120-77a67554877c",
    "name": "Redshift Local Users not mapped to any IdP Users",
    "result_type": "number",
    "risk_explanation": "This situation creates a security gap where local users can bypass centralized identity management and access controls. Without IdP mapping, it becomes challenging to enforce consistent authentication policies, monitor user activity, and promptly revoke access when necessary, increasing the risk of unauthorized access and potential data breaches.",
    "risk_remediation": "Adhering to the best identity security and governance practices, map all Redshift local users to corresponding IdP users to ensure centralized identity management, consistent authentication policies, and effective access monitoring and revocation.",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "RedshiftUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Okta Users that are deactivated and mapped to active Azure AD Users",
    "id": "e3a89d45-5bf9-4535-a62f-c2623a50b4f6",
    "name": "Okta Users that are deactivated and mapped to active Azure AD Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "This situation can lead to unauthorized access, as deactivated users in Okta might still retain access through their active Azure AD accounts. This creates a security vulnerability where access control policies are not uniformly enforced, potentially allowing former employees or compromised accounts to access sensitive resources.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization and deprovisioning processes between Okta and Azure AD to ensure that deactivated users in Okta are also deactivated in Azure AD.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Google Users that are not mapped to Okta Users",
    "id": "f0299d73-9b9d-427c-8997-9a23d6951f6b",
    "name": "Google Users that are not mapped to Okta Users",
    "result_type": "number",
    "risk_level": "LOW",
    "risk_explanation": "Google users not mapped to Okta users pose a security risk due to inconsistent access controls, monitoring gaps, and lack of policy enforcement. These unmapped users may bypass centralized authentication, leaving their activities unlogged and not subject to Okta's security policies like MFA. This issue is classified as a warning, highlighting the need for improved synchronization in identity management, though it does not imply immediate unauthorized access.",
    "risk_remediation": "Adhering to the best identity security and governance practices, ensure all Google users are mapped to Okta users by implementing automated synchronization between Google Workspace and Okta, and regularly audit and reconcile user accounts to maintain consistency and enforce security policies.",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Google Users that are not in Okta but have Access to Google Drive Folders",
    "id": "db177f86-727d-4d4f-b82b-3202b09bbdd7",
    "name": "Google Users that are not in Okta but have Access to Google Drive Folders",
    "result_type": "number",
    "risk_level": "LOW",
    "risk_explanation": "Google users that are not in Okta but have access to Google Drive folders pose a security risk due to inconsistent access control and monitoring gaps. These users can bypass centralized identity management, leading to potential unauthorized access and unlogged activities. This risk is classified as a warning, indicating a need for improved synchronization between identity systems to ensure consistent security policies and monitoring.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization between Okta and Google Workspace to ensure all users with access to Google Drive folders are managed through Okta, and regularly audit access permissions to identify and remove unauthorized users.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "f0299d73-9b9d-427c-8997-9a23d6951f6b"
            }
          },
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.Google Drive.FileSystemFolder"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Snowflake Local Users that are not mapped to any IdPUser",
    "id": "70c7707b-b55d-4b15-9ea1-892ce34a6bdf",
    "name": "Snowflake Local Users that are not mapped to any IdPUser",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "Snowflake Local Users not mapped to any IdP user pose a significant security risk. These users can bypass centralized identity management and access controls, making it challenging to enforce consistent security policies, monitor user activities, and promptly revoke access if needed. This misalignment increases the risk of unauthorized access and potential data breaches. This issue is classified as a critical risk, highlighting the urgent need for synchronization between Snowflake and identity providers.",
    "risk_remediation": "Adhering to the best identity security and governance practices, disable or delete Snowflake Local Users that are not mapped to any IdPUser and enforce strict policies to ensure all users are integrated with a centralized identity provider.",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Okta Users that are deactivated and are mapped to active Active Directory Users",
    "id": "f052d43d-0648-4afd-9ca3-5f239ad1eaa0",
    "name": "Okta Users that are deactivated and are mapped to active Active Directory Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "Okta users that are deactivated but are mapped to active Active Directory users pose a significant security risk. This inconsistency can lead to unauthorized access, as deactivated Okta accounts might still have access through active Active Directory mappings, undermining access control policies. This risk is classified as critical due to the potential for significant security breaches and unauthorized access to sensitive information.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization and reconciliation processes between Okta and Active Directory to ensure that deactivated Okta users are promptly and accurately reflected in Active Directory, and conduct regular audits to verify consistency.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f97084a0-fc42-4d90-a720-8b4cd3281305",
    "name": "Salesforce Local Users not mapped to Azure AD Users",
    "description": "Salesforce Local Users not mapped to Azure AD Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "risk_explanation": "Salesforce local users not mapped to Azure AD users can bypass centralized identity management and access controls, leading to inconsistent enforcement of security policies and unmonitored activities. This misalignment can result in unauthorized access to sensitive data and difficulty in promptly revoking access, significantly increasing the risk of data breaches and security incidents. Therefore, this issue is classified as a critical risk, highlighting the urgent need for synchronization between Salesforce and Azure AD.",
    "risk_remediation": "Adhering to the best identity security and governance practices, implement automated synchronization between Salesforce and Azure AD to ensure all local users are mapped to Azure AD users, enforce centralized identity management, and regularly audit the mappings to maintain consistency and security.",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "All Human Identities",
    "id": "5b8ee1fd-8fdd-4f1f-aa93-8bf3ad77d9ad",
    "name": "Human Identities",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "HUMAN"
            }
          }
        }
      ]
    }
  },
  {
    "description": "All Non-Human Identities",
    "id": "de20d701-d2a7-43d1-b402-a2797c2b709e",
    "name": "Non-Human Identities",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          }
        }
      ]
    }
  },
  {
    "description": "Keys are cryptographic credentials used for encryption, decryption, and signing in cloud environments. They can be access keys, API keys, or encryption keys. While keys may act as secrets, not all keys are confidential, such as public keys used in asymmetric encryption.",
    "id": "0e852d61-76d1-4e2e-9d68-eec12323f943",
    "name": "Keys",
    "risk_level": "NONE",
    "result_type": "number",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "Key"
        }
      ]
    }
  },
  {
    "description": "Secrets are sensitive information used for authentication and authorization in cloud environments, including passwords, tokens, and secret keys. They must be kept confidential and secure. While all secrets may include keys, their primary purpose is to ensure secure access and communication.",
    "id": "aad412d3-73b7-4b56-ae41-a8760a24adf5",
    "name": "Secrets",
    "labels": [
      "nonhuman_identity"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Secret"
        }
      ]
    }
  },
  {
    "description": "Access Credentials",
    "id": "d96c161e-da17-463d-b600-7999ccfcf887",
    "name": "Access Credentials",
    "risk_level": "NONE",
    "result_type": "number",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "Access Credentials that are not active",
    "id": "c611fa47-2657-451e-86e6-62d03f0e1b53",
    "name": "Access Credentials that are not active",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive access credentials can pose security risks if not fully deleted or properly managed. Attackers might reactivate them or exploit residual permissions due to misconfigurations. Regular audits and strict access control measures can help mitigate these risks.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "Keys created in the last 30 days",
    "id": "97fd602b-34d9-43c9-80d5-5041827f12e6",
    "name": "Keys created in the last 30 days",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "Key"
        }
      ]
    }
  },
  {
    "description": "Secrets created in the last 30 days",
    "id": "51aa7fb8-d4ff-4820-b593-25fdbfb0fb40",
    "name": "Secrets created in the last 30 days",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "Secret"
        }
      ]
    }
  },
  {
    "description": "Access Credentials created in the last 30 days",
    "id": "7ce09d04-8bc5-4367-9b03-613fb8540406",
    "name": "Access Credentials created in the last 30 days",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "Keys that have been not been accessed in the last 90 days",
    "id": "dea8b8f9-3584-428d-b8a0-5d6493c2297e",
    "name": "Keys that have been not been accessed in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Keys that have not been used recently might indicate they are no longer needed or could have been forgotten. While not immediately critical, unused keys still pose a security risk as they could be exploited if they fall into the wrong hands. Regularly reviewing and potentially rotating or deactivating unused keys helps maintain a secure environment and reduces the risk of unauthorized access.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Key"
        }
      ]
    }
  },
  {
    "description": "Secrets that  have not been accessed in the last 90 days",
    "id": "d5971cb8-a5e2-4e12-b3eb-181de9c02184",
    "name": "Secrets that have not been accessed in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Secrets that have not been used recently may suggest they are obsolete or no longer necessary. Although not immediately critical, unused secrets can become a security vulnerability if they remain accessible and potentially exploitable. Regularly auditing and removing or rotating unused secrets enhances security by minimizing potential attack vectors and ensuring only active, necessary secrets are maintained.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Secret"
        }
      ]
    }
  },
  {
    "description": "Access Credentials that have not been used in the last 90 days",
    "id": "65b0ad09-71f4-40bd-9bea-57b3d16b7a8e",
    "name": "Access Credentials that have not been used in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Unused access credentials can pose a security risk if exploited by unauthorized users. Regularly review and deactivate or update these credentials to reduce the risk of unauthorized access and maintain a secure environment.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "Identities that can access Keys",
    "id": "e8b4954b-ba9c-4b51-b99b-009451505e61",
    "name": "Identities that can access Keys",
    "result_type": "number",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that can access Secrets",
    "id": "b0383515-1255-4554-afe5-3d28e3f18128",
    "name": "Identities that can access Secrets",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that can use Access Credentials",
    "id": "292dfd9b-5e5d-45e5-a54c-b139b492c100",
    "name": "Identities that can use Access Credentials",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that can access Keys",
    "id": "27de0197-d36f-475b-bd94-1b4ac2fd6e4c",
    "name": "Non-Human Identities that can access Keys",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that can access Secrets",
    "id": "d237262c-3f84-4dab-9b7f-053a5d6c7ee4",
    "name": "Non-Human Identities that can access Secrets",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that can use Access Credentials",
    "id": "93eb5fe7-331d-4563-b26c-5134f891e6b7",
    "name": "Non-Human Identities that can use Access Credentials",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "nonhuman_identity"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that have not accessed Keys in the last 90 days",
    "id": "20c243d1-86a3-4d86-af4c-b82fbd01c6d5",
    "name": "Identities that have not accessed Keys in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Identities that have not accessed keys recently might indicate they no longer need access. Regularly review and adjust permissions to reduce the risk of unauthorized access and maintain a secure environment.",
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that have not accessed Secrets in the last 90 days",
    "id": "4fb6b7be-cffd-4f9d-be44-0e3cb448376d",
    "name": "Identities that have not accessed Secrets in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Identities not accessing secrets recently may indicate obsolete permissions. Regularly review and adjust these permissions to minimize the risk of unauthorized access and enhance security.",
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that have not used Access Credentials  in the last 90 days",
    "id": "479d823d-494b-408b-afe7-b346702da814",
    "name": "Identities that have not used Access Credentials  in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Unused access credentials by identities may indicate unnecessary or outdated permissions. Regularly review and update these credentials to ensure only necessary access is granted, reducing security risks.",
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that have not accessed Keys in the last 90 days",
    "id": "95d0cb97-730e-44ca-a54a-320cd759da42",
    "name": "Non-Human Identities that have not accessed Keys in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Non-human identities with unused key access may indicate obsolete permissions, posing security risks. Regularly review and adjust these permissions to ensure automated processes have only necessary access, reducing potential vulnerabilities and enhancing security.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that have not accessed Secrets recently in the last 90 days",
    "id": "e84c2f17-7ee8-4cf2-a6a4-136e3207e297",
    "name": "Non-Human Identities that have not accessed Secrets recently in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Non-human identities with unused secret access may indicate outdated permissions, posing security risks. Regularly review and adjust these permissions to ensure automated processes have only necessary access, reducing potential vulnerabilities and enhancing security.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that have not used Access Credentials  in the last 90 days",
    "id": "2d9bdc1d-cb5c-484a-97e4-28f59bfdd217",
    "name": "Non-Human Identities that have not used Access Credentials  in the last 90 days",
    "result_type": "number",
    "risk_level": "WARNING",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Non-human identities with unused access credentials may indicate unnecessary permissions, increasing security risks. Regularly review and adjust these credentials to ensure only required access for automated processes, minimizing potential vulnerabilities and maintaining security.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that are not active and have access to Keys",
    "id": "b2982bd0-500b-4dd3-90c4-9077e726458e",
    "name": "Identities that are not active and have access to Keys",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive identities with access to keys pose a significant security risk, as they can be exploited for unauthorized access. Regularly review and remove access for inactive identities to mitigate potential security breaches and protect sensitive data.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that are not active and have access to Secrets",
    "id": "ef4cb6bd-ffb0-4893-9da5-fab81045edf6",
    "name": "Identities that are not active and have access to Secrets",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive identities with access to secrets pose a high security risk, potentially leading to unauthorized access. Regularly review and revoke access for inactive identities to mitigate security breaches and protect confidential information.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Identities that are not active and can use Access Credentials",
    "id": "a89c0806-9d7a-4301-9b83-d60725fc60a4",
    "name": "Identities that are not active and can use Access Credentials",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive identities with access credentials present a significant security risk, as they may be exploited for unauthorized access. Regularly review and revoke these credentials to prevent potential security breaches and protect system integrity.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities that are not active and have access to Keys",
    "id": "85d9be61-18b7-4ce7-9da5-474564f1b42c",
    "name": "Non-Human Identities that are not active and have access to Keys",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive non-human identities with access to keys pose a significant security threat. They can be exploited for unauthorized access, compromising sensitive data. Regularly review and revoke access for these identities to enhance security and prevent breaches.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "NONHUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities  that are not active and have access to Secrets",
    "id": "2186037f-d345-40cd-95c3-54dd14d1cf07",
    "name": "Non-Human Identities that are not active and have access to Secrets",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive non-human identities with access to secrets present a serious security risk. They can be exploited for unauthorized actions, compromising sensitive information. Regularly review and revoke access for these identities to enhance security and prevent potential breaches.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "NONHUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Secret"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Non-Human Identities  that are not active and can use Access Credentials",
    "id": "a8abd47e-7d6c-4f4b-9700-c0c67d523991",
    "name": "Non-Human Identities  that are not active and can use Access Credentials",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Inactive non-human identities with the ability to use access credentials pose a serious security risk, as they can be exploited for unauthorized activities. Regularly review and revoke such credentials to prevent potential breaches and ensure system security.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "NONHUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AccessCreds"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "Access credentials that cannot expire",
    "id": "6fa304d0-7e98-4b1a-a37a-e4b7062c9715",
    "name": "Access credentials that cannot expire",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Access credentials that do not expire pose a significant security risk, as they can be permanently exploited if compromised. Implement expiration policies to ensure regular credential updates, reducing the risk of unauthorized access and enhancing overall security.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "can_expire"
            }
          },
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "Access Credentials that can expire and have expired in the last 90 days",
    "id": "bd8d2525-674b-40d5-8cbc-aa50f9c09373",
    "name": "Access Credentials that can expire and have expired in the last 90 days",
    "risk_level": "HIGH",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Access credentials expired within the last 90 days may still be vulnerable to exploitation if not properly revoked. Regularly review and remove expired credentials to minimize security risks and ensure unauthorized access is prevented.",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "can_expire"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "expires_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "AccessCreds"
        }
      ]
    }
  },
  {
    "description": "AWS EKS Clusters",
    "id": "de1bd578-f278-4b90-9f9b-ac910a85d283",
    "labels": [
      "inventory",
      "nonhuman_identity"
    ],
    "name": "AWS EKS Clusters",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "EksCluster",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "description": "Keys that have not been rotated in the last 90 days",
    "id": "76cf6338-4904-4916-a523-cbaf7f00fabb",
    "name": "Keys that have not been rotated in the last 90 days",
    "result_type": "number",
    "risk_level": "MEDIUM",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Keys not rotated in the last 90 days increase the risk of compromise, leading to unauthorized access and potential data breaches. Regular rotation is essential to minimize exposure and maintain security best practices.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_rotated_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Key"
        }
      ]
    }
  },
  {
    "description": "Secrets that have not been rotated in the last 90 days",
    "id": "4c75ee6b-7857-456c-a586-abfe91764e7c",
    "name": "Secrets that have not been rotated in the last 90 days",
    "result_type": "number",
    "risk_level": "MEDIUM",
    "labels": [
      "nonhuman_identity"
    ],
    "risk_explanation": "Secrets not rotated in the last 90 days are at higher risk of exposure and misuse. Regular rotation is crucial to prevent unauthorized access and ensure compliance with security best practices.",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_rotated_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Secret"
        }
      ]
    }
  },
  {
    "id": "fc96daea-dd88-45ac-8b91-94dbfb826112",
    "name": "Smartsheet Users",
    "description": "All Smartsheet local User accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "64d7ad4d-3aff-417a-9e60-51824a64de2b",
    "name": "Smartsheet Administrators",
    "description": "Number of users who have been granted the Global Admin role in Smartsheet",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Smartsheet.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Owner"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1ed8815a-02ae-414a-aa00-599787920eb6",
    "name": "Smartsheet Deactivated Users",
    "description": "Accounts in Smartsheet  that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "453137af-81e0-46d3-8553-a1e63cd8df8c",
    "name": "Smartsheet Active Users",
    "description": "Active Accounts in Smartsheet",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cc30f044-f185-4b58-bee5-9b26252276f5",
    "name": "Smartsheet Users Related to Okta Users",
    "description": "Smartsheet Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cd49e87d-7edb-4976-9642-e9a7242fd085",
    "name": "Smartsheet Users Not Related to Okta Users",
    "description": "Smartsheet Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8884b828-cb2d-4963-b0e5-454d0f783d1b",
    "name": "Deactivated Okta Users with Smartsheet Access",
    "description": "Okta Users who are deactivated that have an active Smartsheet User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "8dcef7f5-4348-43eb-a2dd-ea123eca4c0e",
    "name": "Smartsheet Users Related to Azure AD Users",
    "description": "Smartsheet Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cb44d1b7-a409-4711-b1cb-2429e0366ef4",
    "name": "Smartsheet Users Not Related to Azure AD Users",
    "description": "Smartsheet Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9059585a-82d6-4860-b969-a664e768dc04",
    "name": "Deactivated Azure AD Users with Smartsheet Access",
    "description": "Azure AD Users who are deactivated that have an active Smartsheet User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "d2393d8f-aeca-4580-8365-fa00847efe49",
    "name": "Smartsheet Groups",
    "description": "All Smartsheet local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4f2030c0-820b-4319-b2c1-1f9ad0a080cb",
    "name": "Smartsheet Groups with Users",
    "description": "Smartsheet Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "41c9e265-ab50-4328-9d18-e592c1607780",
    "name": "Smartsheet Groups created in the last 24 hours",
    "description": "Smartsheet Groups created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "description": "Smartsheet Groups that have deactivated users",
    "id": "a3ae208d-1728-450e-b2c8-e61d0e1559e2",
    "name": "Smartsheet Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OAA.Smartsheet.User"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "id": "325eaa89-35f2-4686-926a-58bfe8d53961",
    "name": "Smartsheet Roles",
    "description": "Total number of Smartsheet Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ade5efda-716e-4607-b033-7bd1a35d07ae",
    "name": "Smartsheet Roles with Users",
    "description": "Smartsheet roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "26d71b5f-1455-44a3-a278-870b0ae3004f",
    "name": "Smartsheet Roles with Groups",
    "description": "Smartsheet roles that have groups assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0a5e4b60-419b-4d80-b418-03964d033fc2",
    "name": "Smartsheet Workspaces",
    "description": "All Smartsheet Workspaces discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Workspace.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "617bed51-3285-4cb4-8e90-b0a4e39d5deb",
    "name": "Smartsheet Workspaces with Users",
    "description": "Smartsheet Workspaces with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "266b0529-dad5-463c-ab12-79d6f7e902de",
    "name": "Smartsheet Workspaces with Groups",
    "description": "Smartsheet Workspaces with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Workspace.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "2743d997-971a-4911-af27-64dc9f7c774a",
    "name": "Smartsheet Folders",
    "description": "All Smartsheet Folder discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Folder.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c0e2606d-4ab6-43bf-87a6-a32954a3a253",
    "name": "Smartsheet Folders with Users",
    "description": "Smartsheet Folders with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Folder.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cd2ce6fb-04c9-43eb-b0bb-491b2dd268e2",
    "name": "Smartsheet Folders with Groups",
    "description": "Smartsheet Folders with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Smartsheet.Folder.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Smartsheet.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8dd64987-bd69-43db-8088-ea0a2271ef66",
    "name": "Hashicorp Vault - List of Aliases",
    "description": "Hashicorp Vault - List of Aliases",
    "result_type": "number",
    "value_query": {
      "node_relationship_type": 1,
      "from_node_types": [
        {
          "type": "HashicorpVaultAlias",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultCluster",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "980dc7ee-1175-41b6-b499-f94fccaf530f",
    "name": "Hashicorp Vault - Priv access: Entities with DELETE or WRITE privileges",
    "description": "Hashicorp Vault - Priv access: Entities with DELETE and WRITE privileges",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultEntity",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "parent_condition": {
                    "or": true,
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "data_write_privilege",
                          "bool_value": true
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "data_delete_privilege",
                          "bool_value": true
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9eeaa73d-2863-4080-9722-e8cb2f2b2e77",
    "name": "Hashicorp Vault - Entities with policies named \"admin\"",
    "description": "Hashicorp Vault - Entities with policies named \"admin\"",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultEntity",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "HashicorpVaultPolicy",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9f309deb-4c29-433a-b614-8cb9d7e5acdf",
    "name": "Hashicorp Vault - Namespace to Entities",
    "description": "Hashicorp Vault - Namespace to Entities",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultNamespace",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultEntity",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7f57b850-d02b-4e5e-a944-19b31f712df3",
    "name": "Hashicorp Vault - Alias to Secrets",
    "description": "Hashicorp Vault - Alias to Secrets",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultAlias",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource",
                "direct_relationship_only": false,
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 0,
                      "value_as": "COUNT"
                    }
                  ]
                }
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "03b8d2f6-04c0-4bf3-b095-61a4905f4908",
    "name": "Hashicorp Vault - Misconfiguration: Users who can login with Okta credentials but have no MFA",
    "description": "Hashicorp Vault - Misconfiguration: Users who can login with Okta credentials but have no MFA",
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "direct_relationship_only": false,
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "mfa_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultAuthMethodSubresource",
                "direct_relationship_only": false,
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mount",
                    "string_value": "okta/"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d681faa1-9b33-4bee-9e04-522e46b2f323",
    "name": "Hashicorp Vault - Okta users who have admin roles in Vault",
    "description": "Hashicorp Vault - Okta users who have admin roles in Vault",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultPolicy",
                "direct_relationship_only": false,
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f6e5ac8f-506d-4297-a0d3-79abd9f8ecf8",
    "name": "Hashicorp Vault - Misconfiguration: Non-admin Okta users who have vault Admin roles",
    "description": "Hashicorp Vault - Misconfiguration: Non-admin Okta users who have vault Admin roles",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "d681faa1-9b33-4bee-9e04-522e46b2f323"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "f954ff5a-4002-4d31-afa3-6dbf733db94d",
                    "not": true
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "a7b7dd9b-80bc-46fa-bf90-9e4f61497ee6",
    "name": "Hashicorp Vault - Okta auth method to resource",
    "description": "Hashicorp Vault - Okta auth method to resource",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultAuthMethodSubresource",
          "direct_relationship_only": false,
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "mount",
              "string_value": "okta/"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "018d4024-aa24-416d-985d-b25ea6b1854a",
    "name": "Hashicorp Vault - Alias to Okta User",
    "description": "Hashicorp Vault - Alias to Okta User",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultAlias",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaUser",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8b1ea57a-6a06-442f-9b17-f61c08644955",
    "name": "Hashicorp Vault - Misconfiguration: Users who can login with Azure credentials but have no MFA",
    "description": "Hashicorp Vault - Misconfiguration: Users who can login with Azure credentials but have no MFA",
    "result_type": "number",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "direct_relationship_only": false,
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_mfa_registered",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultAuthMethodSubresource",
                "direct_relationship_only": false,
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mount",
                    "string_value": "azure/"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d395be98-6155-462a-be7e-634a4edb52f2",
    "name": "Hashicorp Vault - Azure users who have admin roles in Vault",
    "description": "Hashicorp Vault - Azure users who have admin roles in Vault",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultPolicy",
                "direct_relationship_only": false,
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "4645d297-7505-4ed1-8551-3ac2082db0b7",
    "name": "Hashicorp Vault - Azure auth method to resource",
    "description": "Hashicorp Vault - Azure auth method to resource",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultAuthMethodSubresource",
          "direct_relationship_only": false,
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "mount",
              "string_value": "azure/"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c4a9f867-3d7e-412c-95d3-7606566d7d6d",
    "name": "Hashicorp Vault - Alias to Azure User",
    "description": "Hashicorp Vault - Alias to Azure User",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "HashicorpVaultAlias",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADUser",
                "direct_relationship_only": false
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "818a9890-4ee1-4534-a6b2-d75afec402d0",
    "name": "CrowdStrike Users Not Active Recently",
    "description": "Number of CrowdStrike users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "23eb71fb-0058-4521-b2de-61600564a00d",
    "name": "CrowdStrike Users",
    "description": "All CrowdStrike local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4492e5cb-d5c7-4710-bc78-0ee821666699",
    "name": "CrowdStrike Roles with Users",
    "description": "CrowdStrike roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cca6f086-4ba0-478b-ae91-9c00ef5726f6",
    "name": "CrowdStrike Users created in the last 24 hours",
    "description": "CrowdStrike Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "c94dda43-e713-4241-b5fc-a4fb0c47c020",
    "name": "CrowdStrike Administrators",
    "description": "Number of users who have been granted the Falcon Administrator role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Falcon Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b4979861-0e25-4af1-8280-e337f1736393",
    "name": "CrowdStrike Dashboard Admin",
    "description": "Number of users who have been granted the Dashboard Admin role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Dashboard Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b05224e-11ce-4978-864c-f7b34a43148a",
    "name": "CrowdStrike Exposure Assets Admin",
    "description": "Number of users who have been granted the Exposure Assets Admin role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Exposure Assets Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "722e6d59-7039-4602-9095-646455db6365",
    "name": "CrowdStrike Firewall Manager",
    "description": "Number of users who have been granted the CrowdStrike Firewall Manager role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Firewall Manager"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "29114995-9390-488a-a575-7f65ed3e4962",
    "name": "CrowdStrike Identity Protection Administrator",
    "description": "Number of users who have been granted the CrowdStrike Identity Protection Administrator role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Identity Protection Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "57eb7ed3-c6dc-46b9-b5b9-aca86fd717ca",
    "name": "CrowdStrike Identity Protection Domain Administrator",
    "description": "Number of users who have been granted the CrowdStrike Identity Protection Domain Administrator role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Identity Protection Domain Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "504447e6-cc31-4f75-90da-7c130f4d43e3",
    "name": "CrowdStrike Real Time Responder - Administrator",
    "description": "Number of users who have been granted the CrowdStrike Real Time Responder - Administrator role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Real Time Responder - Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e3ecf999-e218-4e72-b11e-5cfa2aa3ad5d",
    "name": "CrowdStrike Scheduled Report Admin",
    "description": "Number of users who have been granted the CrowdStrike Scheduled Report Admin role in CrowdStrike",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Scheduled Report Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8eb382a9-eab0-4a05-aac5-55305b1bb415",
    "name": "CrowdStrike Users Related to Okta Users",
    "description": "CrowdStrike Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b353107d-10ff-44e2-83f5-47026e40c810",
    "name": "CrowdStrike Users Not Related to Okta Users",
    "description": "CrowdStrike Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "892617e9-310b-447b-9f35-688729b2e3f0",
    "name": "CrowdStrike Users Related to Azure AD Users",
    "description": "CrowdStrike Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d9279e9d-f66d-40ea-9086-8f94cfc2614e",
    "name": "CrowdStrike Users Not Related to Azure AD Users",
    "description": "CrowdStrike Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "27f3d710-e42e-4f9a-9e2a-ab686a7d45ff",
    "name": "CrowdStrike Users recently logged in",
    "description": "CrowdStrike Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "e479dfbd-4cc0-4613-bb89-17f57fb19c59",
    "name": "CrowdStrike Roles",
    "description": "Total number of CrowdStrike Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number CrowdStrike Roles with Permissions",
    "id": "a78187a0-9876-4840-a46c-9e72d0f9a487",
    "name": "CrowdStrike Roles with Permissions",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.Role"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Permission"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "cf4163db-ccf2-4815-968c-935059f31a9e",
    "name": "CrowdStrike Disabled Users with Admin Role",
    "description": "Disabled Crowdstrike Users with Admin Role ",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Falcon Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9f4d2add-739b-4219-bfa5-f622641b5c64",
    "name": "Okta Users with Crowdstrike Access",
    "description": "Okta Users with Crowdstrike Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e45e7f17-2669-4dea-a5c5-e2dc6f70cc49",
    "name": "CrowdStrike users with any of the administrator roles",
    "description": "CrowdStrike users with any of the administrator roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.CrowdStrike.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.CrowdStrike.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.CrowdStrike.RoleAssignment",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Falcon Administrator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Dashboard Admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Exposure Assets Admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Firewall Manager"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Identity Protection Administrator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Identity Protection Domain Administrator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Real Time Responder - Administrator"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "name",
                          "string_value": "Scheduled Report Admin"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e61c06c1-0832-4bbd-bbb7-5ec1afd5f6ec",
    "name": "Blackline Users",
    "description": "All Blackline local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Total number of Blackline Teams",
    "id": "5c309652-0822-4e68-ab8f-8eff16370ecb",
    "name": "Blackline Teams",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.Group"
        }
      ],
      "relates_to_exp": {}
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "2eefedd1-e16b-4f93-9ddf-4daaa957ef4b",
    "name": "Blackline System Admin",
    "description": "Number of users who have been granted the System Admin role in Blackline",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Blackline.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3876c5b5-f2b8-492c-af99-0d2479b90a0d",
    "name": "Blackline Roles with Users",
    "description": "Blackline roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "bd4328c4-2704-402d-8e11-51401d77ebd4",
    "name": "Blackline Active Users",
    "description": "Active Accounts in Blackline",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "13677b1b-71d1-4bb5-847a-8978dfd6d892",
    "description": "Total number of Blackline Users with Teams",
    "name": "Blackline Users with Teams",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "BlacklineUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "BlacklineGroup"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "20a3b9be-cb08-41e1-8bd3-81e9a85f3ab5",
    "name": "Blackline Product",
    "description": "All Blackline Product discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.Product.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "62f4cd19-ae95-4b2c-8d68-1a3222a25293",
    "name": "Blackline Products with Users assigned",
    "description": "Blackline Products with Users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.Product.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "574c436b-39ac-49fb-80c7-75fc28ebe353",
    "name": "Blackline Product with Groups",
    "description": "Blackline Product with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.Product.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "7d404d58-8b37-4a7e-97bd-2c681ecfcc37",
    "name": "Blackline Users Related to Okta Users",
    "description": "Blackline Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "03ffe096-b9bb-4120-843b-81616352fadf",
    "name": "Blackline Users Not Related to Okta Users",
    "description": "Blackline Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c5ef653e-ea4e-4c05-927f-b5075a5ad9b7",
    "name": "Blackline Users Related to Azure AD Users",
    "description": "Blackline Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "79c51c03-248c-4518-a428-00f0c6237742",
    "name": "Blackline Users Not Related to Azure AD Users",
    "description": "Blackline Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8774a70a-d0a2-479a-8a24-29cc0b91291c",
    "name": "Blackline Local Admin",
    "description": "Number of users who have been granted the Local Admin role in Blackline",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Blackline.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Local Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "be627f21-9190-4842-83af-0b823b0b3d28",
    "name": "Blackline API Access Role",
    "description": "Number of users who have been granted the API Access  role in Blackline",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Blackline.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "API ACCESS"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8373c22d-5a04-4e27-a575-ee3d5d9d9090",
    "name": "Blackline Account Manager",
    "description": "Number of users who have been granted the Account Manager role in Blackline",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Blackline.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Blackline.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Account Manager"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f50a61ad-57f2-4ea7-9a79-884340723714",
    "description": "Blackline Teams with Sub-Teams",
    "name": "Blackline Teams with Sub-Teams",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Blackline.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OAA.Blackline.Group"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "state_of_authorization"
    ]
  },
  {
    "id": "b369656e-7770-4a30-a604-c22807d4ed51",
    "name": "Zscaler Users",
    "description": "All Zscaler local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f7a3e924-e302-4f14-a996-e8ffd36123aa",
    "name": "Zscaler Active Users",
    "description": "Active Accounts in Zscaler",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "6d47d6e7-db66-450f-b751-189bca9c85d3",
    "name": "Zscaler Deactivated Users",
    "description": "Accounts in Zscaler that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "91127c46-77ec-4372-9cd0-3437840b3f24",
    "name": "Zscaler Users Related to Okta Users",
    "description": "Zscaler Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ae550f63-7d0e-40c7-b31c-4293da9f15df",
    "name": "Zscaler Users Not Related to Okta Users",
    "description": "Zscaler Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ba741506-026c-4bfd-a81a-bdb9e40f5994",
    "name": "Deactivated Okta Users with Zscaler Access",
    "description": "Okta Users who are deactivated that have an active Zscaler User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zscaler.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "498719f0-b21c-4f0f-9df1-28d1ae5e7b32",
    "name": "Zscaler Users Related to Azure AD Users",
    "description": "Zscaler Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "632675aa-8dc3-451b-93ae-66501ef235bb",
    "name": "Zscaler Users Not Related to Azure AD Users",
    "description": "Zscaler Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3a32e116-6245-46ef-b3a6-7a5ad6b60cce",
    "name": "Deactivated Azure AD Users with Zscaler Access",
    "description": "Azure AD Users who are deactivated that have an active Zscaler User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zscaler.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "0006f3a8-d84a-4858-8526-61811393321a",
    "name": "Zscaler Groups with Users",
    "description": "Zscaler Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zscaler.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e41f962f-a70f-4483-9417-106ad988bd0e",
    "name": "Zscaler Roles",
    "description": "Total number of Zscaler Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cebb3722-708c-465f-9318-a7abe11c7ae5",
    "name": "Zscaler Roles with Users",
    "description": "Zscaler roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zscaler.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "343c4959-bb59-4d70-ab8a-a0f3099d8765",
    "name": "Zscaler Users with Password Login ",
    "description": "Zscaler Users with Password Login ",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_password_login_allowed",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0534c3d7-523b-4c9e-9116-13cbe643bc16",
    "name": "Zscaler Super Admin Users",
    "description": "Zscaler Super Admin Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_zscaler_user_type",
              "string_value": "SUPERADMIN"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fb04e967-e9ab-4608-ba9f-a82b892e6d08",
    "name": "Zscaler Admin Users",
    "description": "Zscaler Admin Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_zscaler_user_type",
              "string_value": "ADMIN"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "350beb13-3edc-4a51-933e-743d0a95e981",
    "name": "Zscaler Auditors ",
    "description": "Zscaler Auditors",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_auditor",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f26c57a7-595b-4e0e-bd93-84fa22580fb4",
    "name": "Zscaler Guest Users",
    "description": "Zscaler Guest Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_zscaler_user_type",
              "string_value": "GUEST"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1abf53c4-fae2-473a-bcf0-b1ed94499ebb",
    "name": "Zscaler Users with Expired Password",
    "description": "Zscaler Users with Expired Password",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_password_expired",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "3c2aec68-34a5-4aeb-961d-87d3062dae73",
    "name": "Non-editable Zscaler Users",
    "description": "Non-editable Zscaler Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Zscaler.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_noneditable",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f02603fd-4bab-4289-a325-2d6278df65c3",
    "name": "Okta Users with Zscaler Admin Access",
    "description": "Okta Users with Zscaler Admin Access",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Zscaler.User",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "customprop_admin_user",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1ed8f179-b2a1-4a1b-9a45-df82189867b9",
    "name": "Egnyte Users",
    "description": "All Egnyte local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c5c25c39-0a34-4e30-ae8b-1f889a6b570a",
    "name": "Egnyte Active Users",
    "description": "Active Accounts in Egnyte",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4d1f9d8b-5e35-4b2a-b612-5d475d75a1f6",
    "name": "Egnyte Deactivated Users",
    "description": "Accounts in Egnyte that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8c8e9927-9d62-4a5e-8a3a-8d2d2a6f8d1a",
    "name": "Egnyte Users Related to Okta Users",
    "description": "Egnyte Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5f4d3a8f-4d6a-4b5e-a4a8-2d3d4b6a8d1a",
    "name": "Egnyte Users Not Related to Okta Users",
    "description": "Egnyte Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6f6d4a8f-3d6a-4b5e-a4a8-1d3d4b6a8d1a",
    "name": "Deactivated Okta Users with Egnyte Access",
    "description": "Okta Users who are deactivated that have an active Egnyte User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Egnyte.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "7f7d5a8f-2d6a-4b5e-a4a8-0d3d4b6a8d1a",
    "name": "Egnyte Users Related to Azure AD Users",
    "description": "Egnyte Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "8f8d6a8f-1d6a-4b5e-a4a8-9d3d4b6a8d1a",
    "name": "Egnyte Users Not Related to Azure AD Users",
    "description": "Egnyte Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9f9d7a8f-0d6a-4b5e-a4a8-8d3d4b6a8d1a",
    "name": "Deactivated Azure AD Users with Egnyte Access",
    "description": "Azure AD Users who are deactivated that have an active Egnyte User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Egnyte.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "0a0d8a8f-9d6a-4b5e-a4a8-7d3d4b6a8d1a",
    "name": "Egnyte Service Account Users",
    "description": "Service Accounts in Egnyte",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_isServiceAccount",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1a1d9a8f-8d6a-4b5e-a4a8-6d3d4b6a8d1a",
    "name": "Egnyte Not Service Account Users",
    "description": "Egnyte Users With Not A Service Account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_isServiceAccount",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2a2d0a8f-7d6a-4b5e-a4a8-5d3d4b6a8d1a",
    "name": "Egnyte Users Not Active Recently",
    "description": "Number of Egnyte users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "customprop_last_active",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "3a3d1a8f-6d6a-4b5e-a4a8-4d3d4b6a8d1a",
    "name": "Egnyte Groups",
    "description": "All Egnyte local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4a4d2a8f-5d6a-4b5e-a4a8-3d3d4b6a8d1a",
    "name": "Egnyte Groups with Users",
    "description": "Egnyte groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Egnyte.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5a5d3a8f-4d6a-4b5e-a4a8-2d3d4b6a8d1a",
    "name": "Egnyte Groups that have deactivated users",
    "description": "Egnyte Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OAA.Egnyte.User"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "id": "6a6d4a8f-3d6a-4b5e-a4a8-1d3d4b6a8d1a",
    "name": "Egnyte Roles with Users",
    "description": "Egnyte roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Egnyte.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Egnyte.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a681e575-c9d3-4b29-ab2a-03189867b8f4",
    "name": "1Password Users",
    "description": "All 1Password local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9374f924-06d0-4cde-9a77-cd657b59d630",
    "name": "1Password Groups",
    "description": "All 1Password local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a5d78154-2376-4370-b2ba-559349995b8f",
    "name": "1Password Active Users",
    "description": "Active Accounts in 1Password",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f3cc493f-899c-42b2-936d-46870a8f1c16",
    "name": "1Password Deactivated Users",
    "description": "Deactivated Accounts in 1Password",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4af941f4-3d88-4b10-8379-7667142b354c",
    "name": "1Password Groups with Users",
    "description": "1Password Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.1Password.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f36ae207-7c0b-432b-8b1a-d98cf2c94c58",
    "name": "1Password Users created in the last 24 hours",
    "description": "1Password Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "75279765-41bd-4052-9ec2-79b047c56e35",
    "name": "1Password Groups created in the last 24 hours",
    "description": "1Password Groups created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "description": "1Password Groups that have deactivated users",
    "id": "33a920ca-281f-4638-8e05-aacb6ebd9206",
    "name": "1Password Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OAA.1Password.User"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "id": "5d8a428a-da71-4ec6-aa18-22f8ec563125",
    "name": "1Password Users Related to Okta Users",
    "description": "1Password Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "fd9bbd7d-2935-408b-a2ef-fed2367afcc2",
    "name": "1Password Users Not Related to Okta Users",
    "description": "1Password Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6f890c7d-af77-4e3e-bbd8-4ce72592e0ce",
    "name": "1Password Users Related to Azure AD Users",
    "description": "1Password Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4557124b-58e8-4e6a-bb16-404747da1e18",
    "name": "1Password Users Not Related to Azure AD Users",
    "description": "1Password Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.1Password.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f56f2449-a6a7-4df6-87de-cbb4a7be54f1",
    "name": "Deactivated Okta Users with 1Password Access",
    "description": "Okta Users who are deactivated that have an active 1Password User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.1Password.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "b6fbfae1-02a5-4025-b035-0244d277c4ee",
    "name": "Deactivated Azure AD Users with 1Password Access",
    "description": "Azure AD Users who are deactivated that have an active 1Password User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.1Password.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "db177f86-727d-4d4f-b82b-3202b09bbdf7",
    "name": "Jenkins Users",
    "description": "All Jenkins local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a6f25cd0-86a4-4cb5-be7b-bf332dbe7ada",
    "name": "Jenkins Roles with Users",
    "description": "Jenkins roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ca378234-50f5-4521-9df5-d95d1478f136",
    "name": "Jenkins Administrators",
    "description": "Number of users who have been granted the Administrator role in Jenkins",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Jenkins.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "89a24ed0-49af-47b1-9ba3-d96ee082d5b6",
    "name": "Jenkins Roles",
    "description": "Total number of Jenkins Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a8cb456d-c3c2-4cca-bbdc-8bbc5fd6e7bb",
    "name": "Jenkins Users Not Related to Okta Users",
    "description": "Jenkins Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7c5cad2b-71a4-4fe7-a779-32bc18cce302",
    "name": "Jenkins Users Related to Okta Users",
    "description": "Jenkins Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cc3d0460-0099-4b5e-bb5d-10f5c128a6db",
    "name": "Jenkins Users Related to Azure AD Users",
    "description": "Jenkins Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "1e5f38dc-fb8c-4cb8-82d8-7ea08491831c",
    "name": "Jenkins Users Not Related to Azure AD Users",
    "description": "Jenkins Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "753b0072-166a-4103-8d76-fdfbc6941637",
    "name": "Jenkins Projects with Users",
    "description": "Jenkins Projects with Users who have any permission",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "01789100-c243-4237-a578-2e1501e85a06",
    "name": "Jenkins Projects",
    "description": "All Jenkins Projects discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "589063e8-1020-45e5-ad9e-d3d6c2370181",
    "name": "Jenkins Projects with Groups",
    "description": "Jenkins Projects with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "14b657ce-17f7-45c4-b216-1ed19eb6445c",
    "name": "Jenkins Folder Projects with Users",
    "description": "Jenkins Folder type Projects with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "Folder"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "221d7f58-2ee3-47b2-9797-277c04fcd9b5",
    "name": "Jenkins Folder Projects with Group",
    "description": "Jenkins Folder type Projects with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "Folder"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b1d4d3d5-fdb1-40aa-8811-e8b4d94f280a",
    "name": "Jenkins FreeStyle Projects with Users",
    "description": "Jenkins FreeStyle type Projects with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "FreeStyleProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a1117f3e-39e0-473d-8ae1-cbeab321993c",
    "name": "Jenkins FreeStyle Projects with Group",
    "description": "Jenkins FreeStyle type Projects with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "FreeStyleProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "7d1d389a-1f92-4f37-ac99-96654e91aefa",
    "name": "Jenkins MatrixProjects with Users",
    "description": "Jenkins MatrixProjects type Projects  with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "MatrixProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c88a82bc-fdcf-4fe4-80b2-9f199a53f96a",
    "name": "Jenkins MatrixProjects with Group",
    "description": "Jenkins MatrixProjects type Projects  with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "MatrixProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "81e2ae9f-32be-441f-9a91-bd87893ad61e",
    "name": "Jenkins WorkflowJob Projects with Users",
    "description": "Jenkins WorkflowJob type Projects with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "WorkflowJob"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cd45d536-b223-4737-b689-8b42b01cfb00",
    "name": "Jenkins WorkflowJob Projects with Group",
    "description": "Jenkins WorkflowJob type Projects with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "WorkflowJob"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "27e19cc2-720d-4ab8-a7ba-2bffcdf76c0e",
    "name": "Jenkins WorkflowMultiBranchProjects with Users",
    "description": "Jenkins WorkflowMultiBranchProjects type Projects  with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "WorkflowMultiBranchProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "852fbce1-f2bf-4c6e-a8fc-894732b250fc",
    "name": "Jenkins WorkflowMultiProjects with Group",
    "description": "Jenkins WorkflowMultiProjects type Projects with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "WorkflowMultiBranchProject"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "44a1e3f4-abdc-45ec-b070-258b253c37ac",
    "name": "Jenkins OrganizationFolder Project with Users",
    "description": "Jenkins OrganizationFolder type Project  with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "OrganizationFolder"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "4eee6ff3-c74f-429b-b138-de9b8d84ba87",
    "name": "Jenkins OrganizationFolder Projects with Group",
    "description": "Jenkins OrganizationFolder type Projects with Group",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Jenkins.Project.Resource",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "OrganizationFolder"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Jenkins.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "189acd0e-b6f3-4a63-a887-b29a1b6ce0ff",
    "name": "Delinea Users",
    "description": "All Delinea local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "10969f19-a7fd-408c-ac76-fc6ccfdc8d33",
    "name": "Delinea Users created in the last 24 hours",
    "description": "Delinea Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "f3a22ad7-c96c-4922-b18e-4ca37cd069e8",
    "name": "Delinea Groups created in the last 24 hours",
    "description": "Delinea Groups created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "499f61f0-1dc0-4153-a9b9-90f6efca0c7b",
    "name": "Delinea Active Users",
    "description": "Active Accounts in Delinea",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fc1a4ae3-8727-4a66-8bd1-cdfa4b11b37c",
    "name": "Delinea Deactivated Users",
    "description": "Deactivated Accounts in Delinea",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b0a9d98b-170a-4d1f-9907-121294ad8bfa",
    "name": "Delinea Users Not Active Recently",
    "description": "Number of Delinea users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "cbcf5c0e-837b-4cf5-8c02-365112a432a7",
    "name": "Delinea Administrators",
    "description": "Number of users who have been granted the Administrator role in Delinea",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Delinea.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Delinea.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Administrator"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6b4ce8b5-3da7-4354-a016-4b80b9a40d53",
    "name": "Delinea Users logged in recently",
    "description": "Delinea Users logged in recently",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9ba20c53-bcc0-4eef-a44e-e60eaf8a7543",
    "name": "Delinea Active Groups",
    "description": "Active Groups in Delinea",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9cb0fa1b-d400-44e2-a38b-d162dbf2da30",
    "name": "Delinea Deactivated Groups",
    "description": "Deactivated Groups in Delinea",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cb2ba6af-c171-444f-ac49-aa4a1e570c84",
    "name": "Delinea Roles with Groups",
    "description": "Delinea roles that have groups assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Delinea.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "d73684d1-f444-41e3-9d6e-970d88c6fd6d",
    "name": "Delinea Groups with Users",
    "description": "Delinea Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Delinea.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "268dc770-6616-4c4d-a464-38c0f6c5357d",
    "name": "Delinea Roles",
    "description": "Total number of Delinea Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "e39b40ea-c7cb-453d-befc-2005a9461809",
    "name": "Delinea Groups",
    "description": "All Delinea local Group accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "description": "Delinea Groups that have deactivated users",
    "id": "b6c9f910-ab7f-4432-85a6-cbb6ecd2259c",
    "name": "Delinea Groups that have deactivated users",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OAA.Delinea.User"
              }
            ]
          }
        ]
      }
    },
    "labels": [
      "inventory",
      "deactivated_user_access"
    ]
  },
  {
    "id": "3eec4edd-52b9-4dfe-8fc6-488494540db5",
    "name": "Delinea Users Related to Okta Users",
    "description": "Delinea Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "3c4ab48d-7a0c-4e1c-aec2-ce282143bd8d",
    "name": "Delinea Users Not Related to Okta Users",
    "description": "Delinea Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9687904d-2211-48b3-b5a4-1edba4511e9b",
    "name": "Delinea Users Related to Azure AD Users",
    "description": "Delinea Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "80e26ebe-6da0-4fbb-bcd7-82cd8f9c24d7",
    "name": "Delinea Users Not Related to Azure AD Users",
    "description": "Delinea Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Delinea.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a8bd65f9-6544-4135-8525-8357f34f728d",
    "name": "Deactivated Okta Users with Delinea Access",
    "description": "Okta Users who are deactivated that have an active Delinea User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Delinea.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "41926a0a-8448-49d6-8b76-5c20cdcd93ab",
    "name": "Deactivated Azure AD Users with Delinea Access",
    "description": "Azure AD Users who are deactivated that have an active Delinea User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Delinea.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "93ab5e14-9db9-481b-9e9a-d3827120e164",
    "name": "Confluent Users",
    "description": "All Confluent local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "672496d4-8442-41fc-84f7-fd6362fbb0c8",
    "name": "Confluent Environments",
    "description": "All Confluent Environments discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.Environment.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c5006263-a420-452d-8fa3-8ed5ad42cc48",
    "name": "Confluent Clusters",
    "description": "All Confluent Clusters discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.Cluster.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "cb7792a3-7948-4a36-b885-e71755b7ac37",
    "name": "Environments Resources of Confluent users",
    "description": "Environments Resource which has Confluent Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.Environment.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Confluent.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "a8b6a5cf-8cf0-417f-a951-dc625aa7ff14",
    "name": "Confluent Roles with Users",
    "description": "Confluent roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Confluent.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "157623fa-535a-4034-b133-506e1be4c76b",
    "name": "Confluent Service Accounts",
    "description": "Confluent Users with type Service Accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "user_type",
              "string_value": "service_account"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory",
      "service_account"
    ]
  },
  {
    "id": "47ca59c5-33a8-4739-b7e0-c4abc3d10101",
    "name": "Confluent Administrators",
    "description": "Number of users who have been granted the Account Admin role in Confluent",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Confluent.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Confluent.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "AccountAdmin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "2f69eb01-2710-416e-bfc6-f78cb4d46aad",
    "name": "Confluent Users Related to Okta Users",
    "description": "Confluent Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6a57e5fd-42e5-4392-a350-8a52f37704da",
    "name": "Confluent Users Not Related to Okta Users",
    "description": "Confluent Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "47b0a1d7-d4c8-4fd6-83c7-cb5f9e18c705",
    "name": "Confluent Users Related to Azure AD Users",
    "description": "Confluent Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Confluent.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "15ed1b9c-dd1b-4b38-b290-520d0bebdefa",
    "name": "Fastly Users",
    "description": "All Fastly local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "301d347b-2fcd-4322-b607-5ddbf6e89cdf",
    "name": "Fastly Roles with Users",
    "description": "Fastly roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "aa93c313-2b79-4f2a-b958-4687480659d9",
    "name": "Fastly Administrators",
    "description": "Number of users who have been granted the Administrator role in Fastly",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Fastly.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Superuser"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cc1dd51e-6ddf-43a1-a6e8-ec849795298e",
    "name": "Fastly Users created in the last 24 hours",
    "description": "Fastly Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "1a697b4c-fb6a-492c-b2c3-2c69da9ba2e7",
    "name": "Fastly Users used recently",
    "description": "Fastly Users used in the last day",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "last_login_at",
              "string_value": "$COOKIE_RECENT_TIME"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b70f6b4b-ae33-401e-be02-43b925dc2bf4",
    "name": "Fastly Users Not Active Recently",
    "description": "Number of Fastly users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    }
  },
  {
    "id": "a2af24b3-62b4-4855-8148-83d7463783bc",
    "name": "Fastly Users with limited access on Service",
    "description": "Fastly Users with limited access on Service",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_limit_services",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "0d941bf4-2707-407d-b57b-a168fb923e20",
    "name": "Fastly Users with full access on Service",
    "description": "Fastly Users with full access on Service",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_limit_services",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4620675d-2454-48ea-8972-4fbf9cb18db0",
    "name": "Fastly Users with Two_Factor_Authentication Enabled",
    "description": "Fastly Users with Two_Factor_Authentication Enabled",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_two_factor_auth_enabled",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "2e1974cb-22fd-43c4-9594-43766b003dae",
    "name": "Fastly Users with Engineer Role",
    "description": "Number of users who have been granted the Engineer role in Fastly",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Fastly.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Engineer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cef241e9-0662-41a1-a0b5-dede231dc0d6",
    "name": "Fastly Engineers with Limited access on Service",
    "description": "Number of users who have been granted the Engineer role in Fastly with Limited access on Service",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_limit_services",
              "bool_value": true
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Fastly.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Engineer"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "134b8aa1-d3a7-465a-90ee-8cc5dfe86faf",
    "name": "Fastly Users with Billing Role",
    "description": "Number of users who have been granted the Billing role in Fastly",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Fastly.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Billing"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ff41bb5a-0882-42bb-89a5-91838dfd832b",
    "name": "Fastly Service",
    "description": "All Fastly Service discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.Service.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9b76ae1e-2c43-44de-bf70-208d88af8117",
    "name": "Fastly Service with Users",
    "description": "Fastly Service with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.Service.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "9838647b-c851-4706-a1a9-34dc5441074a",
    "name": "Fastly Users Related to Okta Users",
    "description": "Fastly Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "639539b7-e3ae-4f31-838b-bc6af40e1730",
    "name": "Fastly Users Not Related to Okta Users",
    "description": "Fastly Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a5228c12-f3e0-4503-bfa9-74ae1ca62417",
    "name": "Fastly Users Related to Azure AD Users",
    "description": "Fastly Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d205389d-e443-4e80-ae15-5d74c95b8964",
    "name": "Fastly Users Not Related to Azure AD Users",
    "description": "Fastly Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e1160375-0fea-49e4-ae12-9682ed53c1c4",
    "name": "Deactivated Okta Users with Fastly Access",
    "description": "Okta Users who are deactivated that have an active Fastly User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "42bbbaf5-deaf-4118-8db3-2921b9aa5508",
    "name": "Deactivated Azure AD Users with Fastly Access",
    "description": "Azure AD Users who are deactivated that have an active Fastly User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Fastly.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "ec83a90d-ce06-41fd-bd2a-34de156383dd",
    "name": "Fastly Active Users",
    "description": "Active Accounts in Fastly",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "eaf03596-e396-4cf6-bdf2-9b05e104dcbd",
    "name": "Fastly Deactivated Users",
    "description": "Accounts in Fastly that have been deactivated.",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Fastly.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "be7b82d3-6c84-4976-9bd1-55dfe817e718",
    "name": "Snowflake roles with more than 4000 users",
    "description": "Snowflake roles with more than 4000 users",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 4000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "3684b372-7001-43e7-a6e5-9c80986f1249",
    "name": "Snowflake roles with access to more than 100K tables",
    "description": "Snowflake roles with access to more than 100K tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 100000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "41ca267e-b9da-4ee4-a0a5-9f03b3d5a7a4",
    "name": "Snowflake roles with more than 9 path length",
    "description": "Snowflake roles with more than 9 path length",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "path_summary_node_types": {
      "nodes": [
        {
          "node_type": "SnowflakeRole"
        }
      ]
    },
    "path_summary_count_conditions": {
      "conditions": [
        {
          "fn": 3,
          "value": 8
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "ab771a0d-380f-4676-aea9-864be40a53f2",
    "name": "Snowflake roles with more than 33% of schema access",
    "description": "Snowflake roles with more than 33% of schema access",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeSchema",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 33
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "37dfaa4b-c53b-4d7a-94d0-112db2b2965b",
    "name": "Snowflake roles with last used at greater than 90 days ago",
    "description": "Snowflake roles with last used at greater than 90 days ago",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "adc9e07e-19bd-4b24-891a-0971eba0caa5",
    "name": "Snowflake roles with privileged accesses (delete or create)",
    "description": "Snowflake roles with privileged accesses (delete or create)",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "EffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "24a99069-cd80-45f3-903c-c20a513c8006",
    "name": "Snowflake roles with access to more than 300K resources",
    "description": "Snowflake roles with access to more than 300K resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 300000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "41c3985c-3072-4cb2-b053-21c6b5a4d030",
    "name": "Snowflake roles with minimum resource access (less than 10)",
    "description": "Snowflake roles with minimum resource access (less than 10)",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "LT",
                      "value_as": "COUNT",
                      "value": 10
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "6022c6b0-41de-4768-a11a-97e229156860",
    "name": "Snowflake rarely Used Roles by Users (less than 10 users)",
    "description": "Snowflake rarely Used Roles by Users (less than 10 users)",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeUser",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "LT",
                      "value_as": "COUNT",
                      "value": 10
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "9bddae16-88b1-4af8-ac57-8a319ed607cf",
    "name": "Snowflake roles with Create Permissions",
    "description": "Snowflake roles with Create Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole",
          "direct_relationship_only": false
        }
      ],
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_create_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "a0c695a6-b145-4053-86c6-7c69d779d9b7",
    "name": "AWS IAM roles with more than 4000 users",
    "description": "AWS IAM roles with more than 4000 users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamUser",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 4000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "34321799-402c-477a-a77c-3f665d8dcdb0",
    "name": "AWS IAM roles with access to more than 100K MySQL tables",
    "description": "AWS IAM roles with access to more than 100K MySQL tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlTable",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 100000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "7b9db698-3bf9-4f1a-abe9-652ad5d8bce2",
    "name": "AWS IAM roles with access to more than 100K DynamoDB tables",
    "description": "AWS IAM roles with access to more than 100K DynamoDB tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 100000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "9221a4ef-1398-4086-a415-08a5293d9e9a",
    "name": "AWS IAM roles with access to more than 100K Postgres tables",
    "description": "AWS IAM roles with access to more than 100K Postgres tables",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresTable",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 100000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "c3111fd2-26a2-40ca-97ca-e489eb9d392c",
    "name": "AWS IAM roles with more than 9 path length",
    "description": "AWS IAM roles with more than 9 path length",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamRole"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "path_summary_node_types": {
      "nodes": [
        {
          "node_type": "AwsIamRole"
        }
      ]
    },
    "path_summary_count_conditions": {
      "conditions": [
        {
          "fn": 3,
          "value": 8
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "d07a858a-9e51-43ca-9cb5-84397f31ff5d",
    "name": "AWS IAM roles with more than 33% of MySQL schema access",
    "description": "AWS IAM roles with more than 33% of MySQL schema access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlDatabase",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 33
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "af1e0f1c-5d92-4fd3-bbe5-de69e57bba62",
    "name": "AWS IAM roles with more than 33% of DynamoDB service access",
    "description": "AWS IAM roles with more than 33% of DynamoDB service access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBService",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 33
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "7453f38b-abff-43cc-b4d2-b0d156704d93",
    "name": "AWS IAM roles with more than 33% of Postgres schema access",
    "description": "AWS IAM roles with more than 33% of Postgres schema access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresSchema",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 33
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "33eecb26-8311-4bdc-99ae-8ea705bb42bd",
    "name": "AWS IAM roles with more than 33% of MongoDB database access",
    "description": "AWS IAM roles with more than 33% of MongoDB database access",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MongoDbDatabase",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT",
                      "value": 33
                    }
                  ]
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "3020215b-6b00-4831-9d23-e46196010d68",
    "name": "AWS IAM roles with last used at greater than 90 days ago",
    "description": "AWS IAM roles with last used at greater than 90 days ago",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "26ee28e6-01ef-4641-bd46-c042f34ffe7e",
    "name": "AWS IAM roles with privileged MySQL accesses (delete or create)",
    "description": "AWS IAM roles with privileged MySQL accesses (delete or create)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "EffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "50749142-35b6-4cf8-bf50-b3105e02a072",
    "name": "AWS IAM roles with privileged DynamoDB accesses (delete or create)",
    "description": "AWS IAM roles with privileged DynamoDB accesses (delete or create)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "EffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "849f9696-0a94-4b47-bb4f-161607a5fa0d",
    "name": "AWS IAM roles with privileged Postgres accesses (delete or create)",
    "description": "AWS IAM roles with privileged Postgres accesses (delete or create)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "EffectivePermission"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "5b763f98-bec5-426c-a222-d4179ca4889d",
    "name": "AWS IAM roles with access to more than 300K resources",
    "description": "AWS IAM roles with access to more than 300K resources",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value_as": "COUNT",
                      "value": 300000
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "9648b36c-4e80-4ac4-a4ed-d0a96fdec7cc",
    "name": "AWS IAM roles with minimum resource access (less than 10)",
    "description": "AWS IAM roles with minimum resource access (less than 10)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "Resource",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "LT",
                      "value_as": "COUNT",
                      "value": 10
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "bdfa1d0e-1cb8-43ef-b8cc-82319780d405",
    "name": "AWS rarely Used IAM Roles by Users (less than 10 users)",
    "description": "AWS rarely Used IAM Roles by Users (less than 10 users)",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AwsIamUser",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "LT",
                      "value_as": "COUNT",
                      "value": 10
                    }
                  ]
                },
                "direct_relationship_only": false
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "b0195e58-ed88-43db-99fb-5b8192be8640",
    "name": "AWS IAM roles with MySQL Create Permissions",
    "description": "AWS IAM roles with MySQL Create Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsMySqlTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_create_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "f0f59723-5f26-4203-8267-6253eebb0927",
    "name": "AWS IAM roles with DynamoDB Create Permissions",
    "description": "AWS IAM roles with DynamoDB Create Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "DynamoDBTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_create_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "b9704ba2-5ffc-4c98-8ef0-ff598d1758f8",
    "name": "AWS IAM roles with Postgres Create Permissions",
    "description": "AWS IAM roles with Postgres Create Permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole",
          "direct_relationship_only": false
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "RdsPostgresTable",
                "direct_relationship_only": false
              }
            ],
            "path_required_node_types": [
              {
                "type": "EffectivePermission",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "data_create_privilege",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "role_mining"
    ]
  },
  {
    "id": "55349f55-9ddb-413e-b202-9797be99abd9",
    "name": "AWS IAM Users with PostgreSQL Superuser permissions",
    "description": "AWS IAM Users with PostgreSQL Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_super_user",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "3e141e58-ca33-47c1-b610-76b4afdc486a",
    "name": "AWS IAM service principals with PostgreSQL Superuser permissions",
    "description": "AWS IAM service principals that can assume one or more PostgreSQL users with Superuser permissions",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLUser",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_super_user",
                    "bool_value": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access",
      "service_account",
      "nonhuman_identity"
    ]
  },
  {
    "id": "f61ba6ed-4cfe-4823-ade3-59df6767ae2f",
    "name": "AWS PostgreSQL Local Users",
    "description": "Total number of Local Users in AWS PostgreSQL",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "88589277-7084-45e7-af5a-9dc6a2f4ed6e",
    "name": "AWS PostgreSQL Groups",
    "description": "Total number of Groups in AWS PostgreSQL",
    "value_query": {
      "from_node_types": [
        {
          "type": "PostgreSQLGroup",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "372c613c-4435-4d1b-ba18-e2f8e620124d",
    "name": "AWS IAM Users mapped to PostgreSQL local users",
    "description": "AWS IAM Users mapped to PostgreSQL local users",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamUser",
          "root_condition": {
            "leaf_condition": {
              "fn": "IN",
              "property": "aws_account_id",
              "string_value": "$COOKIE_AWS_ACCOUNT_LIST"
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "PostgreSQLUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "privileged_access"
    ]
  },
  {
    "id": "a8bc1c09-1caa-47d5-b998-3251e3a620d1",
    "name": "Device42 Admin Users",
    "description": "All Device42 local admin user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "88f8fcbd-cbcb-4f5d-835c-6ca287f136fe",
    "name": "Device42 Active Admin Users",
    "description": "Active Accounts in Device42",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7a6f3215-741f-4b26-b016-7ceeabdfa55e",
    "name": "Device42 Deactivated Admin Users",
    "description": "Accounts in Device42 that have been deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "10e0f556-f873-4525-b220-a101d5b59624",
    "name": "Device42 Admin Users created in the last 24 hours",
    "description": "Device42 admin users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9247f292-dd5a-4fe5-84c6-70ebd89f5122",
    "name": "Device42 Admin Users not logged in recently",
    "description": "Number of Device42 admin users with last login 90 days in the past",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    }
  },
  {
    "id": "e7b2cefe-3405-4b7c-84cf-36383ba9f454",
    "name": "Device42 Superusers",
    "description": "Number of admin users who are Superuser in Device42",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_is_superuser",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9eadb1a4-893c-43be-bc5c-ff056e7ecacd",
    "name": "Device42 Admin Groups",
    "description": "All Device42 local admin groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "13e8f58b-d9cb-45f3-8b1a-8492abf3afff",
    "name": "Device42 Admin Groups with Users",
    "description": "Device42 admin groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Device42.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ad2c5de2-a021-4b3e-a544-fe1debaeba84",
    "name": "Device42 Admin Users Related to Okta Users",
    "description": "Device42 local admin users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "f9102266-b4ee-4013-be58-495374ba069b",
    "name": "Device42 Admin Users Not Related to Okta Users",
    "description": "Device42 local admin users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "8c093495-7e34-4fa3-8c35-4cbe02e9c6ad",
    "name": "Device42 Admin Users Related to Azure AD Users",
    "description": "Device42 local admin users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9ce5fd85-af9f-46b8-a25c-2c298e56c418",
    "name": "Device42 Admin Users Not Related to Azure AD Users",
    "description": "Device42 local admin users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Device42.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "b7cd7539-63c9-4a1c-97c3-9bda25714625",
    "name": "Mulesoft Users",
    "description": "All Users in Mulesoft",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "ca56fa68-6a65-46b4-b971-90eed299ab80",
    "name": "Mulesoft Teams",
    "description": "All Mulesoft teams",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "52629ed4-bd3d-47af-b6c9-dea4216dc6da",
    "name": "Mulesoft Roles",
    "description": "All Mulesoft roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.Role"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "60fe0071-89f4-461c-9eba-9fbb526b8749",
    "name": "Mulesoft Groups with Users",
    "description": "Mulesoft groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Mulesoft.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "5d60bd2e-d550-4bef-bc8c-9d4264c3fd54",
    "name": "Mulesoft Users with Roles",
    "description": "Mulesoft users that have roles assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Mulesoft.Role"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "082d86c0-efb0-4a3b-bb29-56a2b3db331e",
    "name": "Mulesoft Users with Organization Administrators Role",
    "description": "Number of users who have been granted the Organization Administrators role in Mulesoft",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Mulesoft.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Mulesoft.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Organization Administrators"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "cc383913-d09f-4ca4-a587-16d0a2ac553b",
    "name": "Mulesoft Users with Exchange Administrators Role",
    "description": "Number of users who have been granted the Exchange Administrators role in Mulesoft",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Mulesoft.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Mulesoft.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Exchange Administrators"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "13a09e55-5c46-4c24-890f-bbd06c860f41",
    "name": "Mulesoft Users Not Active Recently",
    "description": "Number of Mulesoft users with last login 90 days in the past.",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  {
    "id": "d37569ce-43dd-4375-8114-09f246eab6df",
    "name": "Mulesoft Users created in the last 24 hours",
    "description": "Mulesoft users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "4367a06a-d7bd-48b9-bc25-626d9f7499a8",
    "name": "Mulesoft Users Related to Okta Users",
    "description": "Mulesoft local users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "df5d6400-782d-4d3b-a0a9-d7d866614420",
    "name": "Mulesoft Users Not Related to Okta Users",
    "description": "Mulesoft local users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "48bade8a-86ab-4232-9320-233bca5cfea8",
    "name": "Mulesoft Users Related to Azure AD Users",
    "description": "Mulesoft local users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c8fb4418-5de4-4c82-b181-da8fa0015ec0",
    "name": "Mulesoft Users Not Related to Azure AD Users",
    "description": "Mulesoft local users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Mulesoft.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d8a91994-9987-489c-ac79-1fc3ad7b72da",
    "name": "Azure AD Users with only Phishable MFA Registered ",
    "description": "Azure AD Users with only Phishable MFA Registered ",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "windowsHelloForBusiness"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPasswordless"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPush"
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_mfa_registered"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "property": "methods_registered"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "b3e0c925-287b-423b-8583-adffe8db37c4",
    "name": "Deactivate Azure AD users that are mapped to Active GitHub Personal Accounts",
    "description": "Deactivate Azure AD users that are mapped to Active GitHub Personal Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "GithubPersonalAccount"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "37b4f4b7-32f8-484f-b69f-66f1d2889b88",
    "name": "Personal Access Tokens with a High Blast Radius (30% of Repos)",
    "description": "Personal Access Tokens with a High Blast Radius (30% of Repos)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccessToken"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "03605788-a531-41fa-ad45-55ad32bf16cf",
    "name": "GitHub Deploy Keys that have Admin Access",
    "description": "GitHub Deploy Keys that have Admin Access",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "read_only"
            }
          },
          "type": "GithubDeployKey"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "98af5ef6-d096-4aa0-9a74-ec79666155fe",
    "name": "Azure AD Users mapped to GitHub Personal Users",
    "description": "Azure AD Users mapped to GitHub Personal Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubPersonalAccount"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "944ebe88-a0a1-44ce-b17b-5e3344614746",
    "name": "GitHub Teams with a High Blast Radius (Over 70%)",
    "description": "GitHub Teams with a High Blast Radius (Over 70%)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubTeam"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "91f07e9f-8368-4c66-9ffc-9007028c0401",
    "name": "GitHub Users Mapped to Personal Access Tokens",
    "description": "GitHub Users Mapped to Personal Access Tokens",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubPersonalAccessToken"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "722a0071-3824-4da6-82ba-9182468d9c9a",
    "name": "GitHub Users that are Maintainers",
    "description": "GitHub Users that are Maintainers",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "container"
                  }
                },
                "type": "GithubTeamMembership"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a60d2519-67b9-4732-bae5-c3a72084f376",
    "name": "GitHub Personal Accounts that are \"Full Admins\"",
    "description": "GitHub Personal Accounts that are \"Full Admins\"",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "full_admin"
            }
          },
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e1e8ed27-8c7e-4e03-a169-9643edc5c9fe",
    "name": "Personal Access Tokens about to Expire",
    "description": "Personal Access Tokens going to expire in 15 days ",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "expires_at",
              "string_value": "$COOKIE_TIMEVAR_15_DAY_AGO"
            }
          },
          "type": "GithubPersonalAccessToken"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e4113d9e-23a8-4e2e-8ae2-898834eb3272",
    "name": "Dormant Personal Access Tokens",
    "description": "Personal Access Tokens that haven't been used for 30 days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "GithubPersonalAccessToken"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "83f9e989-9093-41b8-892f-9808e22ba2a8",
    "name": "GitHub Apps to Repositories",
    "description": "GitHub Apps to Repositories",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubApp"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f16eff25-d0d4-4a0b-9876-ee5452e85e5e",
    "name": "GitHub Deploy Keys",
    "description": "GitHub Deploy Keys",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubDeployKey"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e0cd0e6d-df7e-4645-bd0d-1222f84b199e",
    "name": "GitHub Deploy Keys that are \"Read-Only\" ",
    "description": "GitHub Deploy Keys that are \"Read-Only\" ",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "read_only"
            }
          },
          "type": "GithubDeployKey"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "0da22601-9352-4a6a-a5a7-bbe2a75b5f89",
    "name": "GitHub Deploy Keys to Repositories",
    "description": "GitHub Deploy Keys to Repositories",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubDeployKey"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "39c790b5-3447-4e2d-847b-fa17b17beca3",
    "name": "GitHub Apps to Repositories that have \"Write\" Permissions",
    "description": "GitHub Apps to Repositories that have \"Write\" Permissions",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LIST_ANY_ELEMENT_CONTAINS",
              "property": "permissions",
              "string_value": "write"
            }
          },
          "type": "GithubApp"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "57c011c4-2018-4ebd-8ca2-15356d3a33b5",
    "name": "Guests|Outside Collaborators with Access to GitHub Repositories ",
    "description": "Guests/Outside Collaborators with Access to GitHub Repositories ",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "guest"
            }
          },
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "be766f68-fc13-49e3-8f13-1b9690e527dd",
    "name": "Personal Emails Associated with GitHub Accounts",
    "description": "Personal Emails Associated with GitHub Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "public_email",
                    "string_value": "gmail"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "public_email",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "public_email",
                    "string_value": "yahoo"
                  }
                }
              ]
            }
          },
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "59aa1859-b3ba-4075-a593-97c42abb52f4",
    "name": "GitHub Personal Accounts with a High Blast Radius (Over 70%)",
    "description": "GitHub Personal Accounts with a High Blast Radius (Over 70%)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GithubPersonalAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "601f69b5-f1db-4b10-b4db-6c773d163624",
    "name": "Azure AD Users with only Phishable MFA Registered and Access to Repositories",
    "description": "Azure AD Users with only Phishable MFA Registered and Access to Repositories",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "d8a91994-9987-489c-ac79-1fc3ad7b72da"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d00e5921-d792-4a7b-80e3-77f89e4b29a9",
    "name": "Dormant Azure AD Accounts",
    "description": "Last Login before 90 days ago",
    "labels": [
      "deactivated_user_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "guest"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "0a6e6994-735f-4091-952f-113f2214e7af",
    "name": "Azure AD users with only Phishable MFA ",
    "description": "Azure AD users with only Phishable MFA ",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "sms"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "question"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "email"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "email"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "question"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "sms"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "passKeyDeviceBound"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPush"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "windowsHelloForBusiness"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPasswordless"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "94c22d46-8933-4c00-9650-fb9c089bc50d",
    "name": "Salesforce Service Accounts",
    "description": "Salesforce Service Accounts",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "_"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "adtu"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "insights"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "integration"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "sales"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "auto"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "eb805595-5e6b-4488-a80f-89a0372d77a5",
    "name": "Okta users with only phishable MFA registered",
    "description": "Okta users with only phishable MFA registered",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "mfa_factors",
                          "string_value": "push"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "mfa_factors",
                          "string_value": "token"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "mfa_active"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "53a252f7-4024-45ca-ab74-5070005f5840",
    "name": "Active Early-Dormant Salesforce Local Accounts",
    "description": "Local Accounts that haven't logged in within 30 Days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "last_login_at",
                          "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "e2c51085-66a4-4e4a-ba3f-b3409d499e4d"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "5642ceea-03a7-4264-86c7-f49689203625",
    "name": "Active Azure AD Users Mapped to Deactivated Salesforce Users",
    "description": "Active Azure AD Users Mapped to Deactivated Salesforce Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "SalesforceUser"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "3c29572e-ebcf-43af-b818-c86ebf291a48",
    "name": "Salesforce Administrators with only Phishable MFA Registered (Okta IdP)",
    "description": "Salesforce Administrators with only Phishable MFA Registered (Okta IdP)",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "eb805595-5e6b-4488-a80f-89a0372d77a5"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                },
                "type": "SalesforceProfile"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "3698ccbd-c13c-4753-813f-f9cb074e92bc",
    "name": "Active Dormant Local Salesforce Users",
    "description": "Local Salesforce Users that haven't logged in within 90 Days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "71c08fe1-75de-4d7a-b1dc-a57c4b2276f5",
    "name": "Dormant Salesforce Service Accounts",
    "description": "Service Accounts that haven't been used in 90 Days",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "94c22d46-8933-4c00-9650-fb9c089bc50d"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "4660c1d3-9e75-4a1b-a577-65d375412776",
    "name": "Okta users with no MFA and are Salesforce Admins",
    "description": "Okta users with no MFA and are Salesforce Admins",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                },
                "type": "SalesforceProfile"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "e2c51085-66a4-4e4a-ba3f-b3409d499e4d",
    "name": "Active Semi-Dormant Salesforce Local Accounts",
    "description": "Local Accounts that haven't logged in within 60 Days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "last_login_at",
                          "string_value": "$COOKIE_TIMEVAR_60_DAY_AGO"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "3698ccbd-c13c-4753-813f-f9cb074e92bc"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "26729adf-6fe6-4e97-a6c8-335572e1e69c",
    "name": "Salesforce Accounts that don't map to Okta Accounts",
    "description": "Salesforce Accounts that don't map to Okta Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d09b7a16-4dae-486a-9d17-186df8f77d6c",
    "name": "Salesforce Administrators with only Phishable MFA Registered (Entra IdP)",
    "description": "Salesforce Administrators with only Phishable MFA Registered (Entra IdP)",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "0a6e6994-735f-4091-952f-113f2214e7af"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                },
                "type": "SalesforceProfile"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "SalesforceUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fd2e2fff-aa66-415e-9606-b7fe4f85fbb1",
    "name": "Deactivated Okta Acounts that map to Active Salesforce Accounts",
    "description": "Deactivated Okta Acounts that map to Active Salesforce Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d7d67ea4-3b07-4553-ad5f-16d90e23f552",
    "name": "Salesforce - External Access",
    "description": "Salesforce - External Access",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "@gmail"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "@yahoo"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "94c22d46-8933-4c00-9650-fb9c089bc50d"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "5dc1f504-1fe1-4a9d-9e0d-2efb4a53d7b3",
    "name": "Dormant Azure AD Users linked to Salesforce Users",
    "description": "Dormant Azure AD Users linked to Salesforce Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "d00e5921-d792-4a7b-80e3-77f89e4b29a9"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8790bc2c-36ef-4fed-b393-e40e8c7b91b1",
    "name": "Dormant System Administrators",
    "description": "System Administrators that haven't logged in within 90 Days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                },
                "type": "SalesforceProfile"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1432ec1d-8d53-48d4-808c-fd57646239f1",
    "name": "Deactivated Azure AD Users mapped to Active Salesforce Users",
    "description": "Deactivated Azure AD Users mapped to Active Salesforce Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "not": true,
                    "property": "email",
                    "string_value": "support"
                  }
                }
              ]
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "de9c0f3b-27ab-4f4e-907c-f19dd15cfda8",
    "name": "Deactivated System Administrators ",
    "description": "Deactivated System Administrators ",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "SalesforceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "System Administrator"
                  }
                },
                "type": "SalesforceProfile"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "935771ad-af13-4d09-8293-fa2f31e4ab83",
    "name": "Azure AD Users with Modify All Access in Salesforce and Only Phishable MFA Registered ",
    "description": "Azure AD Users with Modify All Access in Salesforce and Only Phishable MFA Registered ",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "0a6e6994-735f-4091-952f-113f2214e7af"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "6544110b-06ef-4d53-a634-a6056d469528"
                  }
                },
                "type": "SalesforcePermissionSet"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7a90cf19-ec29-4ffa-b7a1-141d07d3a479",
    "name": "Okta Service Accounts that have a password that has not been rotated in 180 days",
    "description": "Okta Service Accounts that have a password that has not been rotated in 180 days",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "password_last_set",
                          "string_value": "$COOKIE_TIMEVAR_180_DAY_AGO"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "password_exists"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "e1e769d4-70bb-4796-a68a-345f68f0f978"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "1a96e891-aa47-43ec-8f0e-29c64ac2070e",
    "name": "Okta Users with only \"Call\" MFA Factors",
    "description": "Okta Users with only \"Call\" MFA Factors",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_EQ",
                    "property": "mfa_factors",
                    "string_value": "call"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "not": true,
                    "property": "mfa_factors",
                    "string_value": "sms"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "not": true,
                    "property": "mfa_factors",
                    "string_value": "push"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "not": true,
                    "property": "mfa_factors",
                    "string_value": "token"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "0967d827-b47d-4f1a-a7c6-c1d2b9311e8b",
    "name": "Active Okta Users that have never Logged In",
    "description": "Active Okta Users that have never Logged In",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "last_login_at",
                    "timestamp_value": "2024-09-26T05:35:00.498Z"
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "aa95f83c-15d1-4231-823c-666e23e4cce8",
    "name": "Active Okta Accounts that do not map to Azure AD Accounts",
    "description": "Active Okta Accounts that do not map to Azure AD Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "db52bdab-8f14-409c-b7f8-d1493367a579",
    "name": "Active Okta Accounts mapped to Deactivated Azure AD Accounts",
    "description": "Active Okta Accounts mapped to Deactivated Azure AD Accounts",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "efc8328e-3167-47f6-81ce-bd8c01af7847",
    "name": "Human Okta Users that are active and have not logged in for 90 days (dormant)",
    "description": "Active Okta users that haven't logged in within 90 days",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "b6814061-aed9-4104-a43f-25fd03c144e9",
    "name": "Snowflake Local Users no relation to Okta User",
    "description": "Snowflake Local Users no relation to Okta User",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ef5bdb85-4a8f-45ee-aa68-42fa1d453886",
    "name": "High Risk Okta Users with Access to Resources",
    "description": "High Risk Okta Users with Access to Resources",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "eb805595-5e6b-4488-a80f-89a0372d77a5"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "0967d827-b47d-4f1a-a7c6-c1d2b9311e8b"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "1a96e891-aa47-43ec-8f0e-29c64ac2070e"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "7a90cf19-ec29-4ffa-b7a1-141d07d3a479"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "686d82d0-52ee-408f-a395-9ab5475a3081",
    "name": "Medium Risk Okta Users with Access to Resources",
    "description": "Medium Risk Okta Users with Access to Resources",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "efc8328e-3167-47f6-81ce-bd8c01af7847"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "db52bdab-8f14-409c-b7f8-d1493367a579"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "aa95f83c-15d1-4231-823c-666e23e4cce8"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "952cbdf7-6bf2-49bb-834f-1a2df3ddd9ce",
    "name": "Medium Risk Okta users mapped to Snowflake Users with a High Blast Radius",
    "description": "Medium Risk Okta users mapped to Snowflake Users with a High Blast Radius",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "686d82d0-52ee-408f-a395-9ab5475a3081"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "b5dce8aa-fa02-4e50-ab2b-14bd8f837fff"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "85e39b36-7b99-4c59-a160-8970f8bab84d",
    "name": "Dormant ACCOUNT ADMINS",
    "description": "Dormant ACCOUNT ADMINS",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "0b06f536-758f-4a0f-958a-baefcd078259"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "default_role",
                    "string_value": "ACCOUNTADMIN"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "a5ad19aa-dcc3-460e-9f22-6b3e4a0ea389",
    "name": "High Risk Okta users mapped to Snowflake Users with a High Blast Radius",
    "description": "High Risk Okta users mapped to Snowflake Users with a High Blast Radius",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "ef5bdb85-4a8f-45ee-aa68-42fa1d453886"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "b5dce8aa-fa02-4e50-ab2b-14bd8f837fff"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9137d032-c21c-47af-b9f0-313675cad2fc",
    "name": "Snowflake Roles with a High Blast Radius (Over 70% of Access to Resources)",
    "description": "Snowflake Roles with a High Blast Radius (Over 70% of Access to Resources)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "ACCOUNTADMIN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "SECURITYADMIN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "USERADMIN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "not": true,
                    "property": "name",
                    "string_value": "SYSADMIN"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "SnowflakeSchema",
                  "SnowflakeTable",
                  "SnowflakeView",
                  "SnowflakeDatabase"
                ],
                "type": "SnowflakeResource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "141e2e38-d177-40c2-8741-7e213af4f985",
    "name": "Service Accounts with Password Enabled",
    "description": "Service Accounts with Password Enabled",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "user_type",
                    "string_value": "service account"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "has_password"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e569b21d-62f4-4099-b750-df0f85e815d4",
    "name": "High Risk Okta users mapped to Snowflake Users with a Medium Blast Radius",
    "description": "High Risk Okta users mapped to Snowflake Users with a Medium Blast Radius",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "ef5bdb85-4a8f-45ee-aa68-42fa1d453886"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "bf0de483-5aba-4fdb-9ad1-30e80939afbe"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "af87b782-7e7f-482c-80e2-e1dff43a49bd",
    "name": "Snowflake Users with MFA Disabled and ACCOUNT ADMINS",
    "description": "Snowflake Users with MFA Disabled and ACCOUNT ADMINS",
    "labels": [
      "privileged_access",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "8da7a47c-1484-486d-8b00-64a77d5d822b"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "default_role",
                    "string_value": "ACCOUNTADMIN"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "6e40f6ce-97fa-4ada-b3d1-722e85a95f61",
    "name": "Snowflake Roles with a Medium Blast Radius (Over 30% - 70% of Access to Resources)",
    "description": "Snowflake Roles with a Medium Blast Radius (Over 30% - 70% of Access to Resources)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "not": true,
              "property": "id",
              "string_value": "9137d032-c21c-47af-b9f0-313675cad2fc"
            }
          },
          "type": "SnowflakeRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "SnowflakeSchema",
                  "SnowflakeTable",
                  "SnowflakeView",
                  "SnowflakeDatabase"
                ],
                "type": "SnowflakeResource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "29bb8d2c-3935-4d38-b5eb-fd6ca3c5aa05",
    "name": "Active Local Snowflake users with MFA disabled and no Okta Account Associated",
    "description": "Active Local Snowflake users with MFA disabled and no Okta Account Associated",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": false,
                          "fn": "EQ",
                          "property": "mfa_enabled"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "has_password"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "08e0488e-c6a8-45e6-91ae-12b35e1a5a88",
    "name": "High Risk Snowflake Users with a High Blast Radius",
    "description": "High Risk Snowflake Users with a High Blast Radius",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                          "property": "id",
                          "string_value": "0b06f536-758f-4a0f-958a-baefcd078259"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                          "property": "id",
                          "string_value": "2b9d0d86-5536-4cc0-b1a4-5da0f64128d2"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "b5dce8aa-fa02-4e50-ab2b-14bd8f837fff"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "0b06f536-758f-4a0f-958a-baefcd078259",
    "name": "Dormant Local Accounts (No Login within 30 Days)",
    "description": "Dormant Local Accounts (No Login within 30 Days)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "a23daec0-45c1-4a30-927c-203cac47ab22",
    "name": "Local Snowflake Accounts that are Locked but have access to resources",
    "description": "Local Snowflake Accounts that are Locked but have access to resources",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_locked"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeResource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "595fb4bb-6107-44fe-97bb-1821c292b006",
    "name": "Medium Risk Okta users mapped to Snowflake Users with a Medium Blast Radius",
    "description": "Medium Risk Okta users mapped to Snowflake Users with a Medium Blast Radius",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "686d82d0-52ee-408f-a395-9ab5475a3081"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "bf0de483-5aba-4fdb-9ad1-30e80939afbe"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c27f610a-2262-407b-b91b-1a4f4ee24b71",
    "name": "Snowflake ACCOUNT ADMINS with No MFA and Used within the last 7 days",
    "description": "Snowflake ACCOUNT ADMINS with No MFA and Used within the last 7 days",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "af87b782-7e7f-482c-80e2-e1dff43a49bd"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_7_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "b5dce8aa-fa02-4e50-ab2b-14bd8f837fff",
    "name": "Snowflake Users with a High Blast Radius (Over 70% of Access to Resources)",
    "description": "Snowflake Users with a High Blast Radius (Over 70% of Access to Resources)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "SnowflakeDatabase",
                  "SnowflakeSchema",
                  "SnowflakeTable",
                  "SnowflakeView"
                ],
                "type": "SnowflakeResource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2b9d0d86-5536-4cc0-b1a4-5da0f64128d2",
    "name": "Local Snowflake users that don_t tie back to an Okta account",
    "description": "Local Snowflake users that don't tie back to an Okta account",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "HUMAN"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "372988f4-b5ae-4673-8079-8d988aabd450",
    "name": "Active Okta Users linked to Deactivated Local Snowflake Users",
    "description": "Active Okta Users linked to Deactivated Local Snowflake Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "bf0de483-5aba-4fdb-9ad1-30e80939afbe",
    "name": "Snowflake Users with a Medium Blast Radius (Over 30% - 70% of Access to Resources)",
    "description": "Snowflake Users with a Medium Blast Radius (Over 30% - 70% of Access to Resources)",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "not": true,
              "property": "id",
              "string_value": "b5dce8aa-fa02-4e50-ab2b-14bd8f837fff"
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "SnowflakeSchema",
                  "SnowflakeTable",
                  "SnowflakeView",
                  "SnowflakeDatabase"
                ],
                "type": "SnowflakeResource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5103c874-4cb1-4e77-b9eb-e0830e6a3f65",
    "name": "Deactivated Okta Users linked to Active Local Snowflake Users",
    "description": "Deactivated Okta Users linked to Active Local Snowflake Users",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ad775d21-2f4b-4613-b0d2-abc7cf575876",
    "name": "Local Snowflake users without MFA enabled",
    "description": "Local Snowflake users without MFA enabled",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SnowflakeDatabase"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": false,
                          "fn": "EQ",
                          "property": "mfa_enabled"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                          "property": "id",
                          "string_value": "b6814061-aed9-4104-a43f-25fd03c144e9"
                        }
                      }
                    ]
                  }
                },
                "type": "SnowflakeUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "079136dd-fff9-4f15-847d-ad3f39f42480",
    "name": "Human Users with no populated attributes",
    "description": "Human Users with no populated attributes",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "department",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "division",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "manager",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "organization",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "title",
                    "string_value": ""
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "f37ba92b-4c49-4558-b31a-56359e4da20c",
    "name": "Okta users with status \"LOCKED_OUT\"",
    "description": "Accounts have a locked out status when the user exceeds the number of login attempts defined in the login policy.",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "status",
              "string_value": "LOCKED_OUT"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "99baf220-af02-41f8-b9df-646eb79530c9",
    "name": "Okta users with status \"PASSWORD_EXPIRED\"",
    "description": "Accounts have a password expired status when the password has expired and the account requires an update to the password before a user is granted access to applications.",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "status",
              "string_value": "PASSWORD_EXPIRED"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "ad3205c9-cf2d-493a-8be7-34044c187304",
    "name": "Okta users with status \"SUSPENDED\"",
    "description": "Accounts have a suspended status when an admin explicitly suspends them. The user cannot access applications, the Admin Console, or the Okta End-User Dashboard. Application assignments are unaffected and the user profile can be updated.",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "status",
              "string_value": "SUSPENDED"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "48f1385e-b549-450c-a7ba-b5b95337ea83",
    "name": "Okta users with status \"RECOVERY\"",
    "description": "Accounts have a recovery status when a user requests a password reset or an admin initiates one on their behalf.",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "status",
              "string_value": "RECOVERY"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e1e769d4-70bb-4796-a68a-345f68f0f978",
    "name": "Okta Service Accounts",
    "description": "Okta Service Accounts",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "not": true,
                          "property": "employee_id",
                          "string_value": ""
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EXISTS",
                          "not": true,
                          "property": "country_code",
                          "string_value": ""
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "svc"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "service"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "test"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "account"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "_"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "title",
                          "string_value": "Room"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "training"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "generic"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "-"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "079136dd-fff9-4f15-847d-ad3f39f42480"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "70558ffe-d56b-401e-a3a4-dc322eac4193",
    "name": "Okta User Risk Profile (Toxic Status)",
    "description": "Okta User Risk Profile (Toxic Status) ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "48f1385e-b549-450c-a7ba-b5b95337ea83"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "ad3205c9-cf2d-493a-8be7-34044c187304"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "99baf220-af02-41f8-b9df-646eb79530c9"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "f37ba92b-4c49-4558-b31a-56359e4da20c"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "6b671bb4-5d48-47fd-baac-55658eecbb72",
    "name": "Okta Users with Dormant Access to Roles",
    "description": "Okta Users with Dormant Access to Roles",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ad4223e9-6e17-4a41-8668-0a8c4797aabc",
    "name": "Okta Admins in a Toxic Status State",
    "description": "Okta Admins that have a status of \"RECOVERY\", \"SUSPENDED\", \"PASSWORD_EXPIRED\", or \"LOCKED_OUT\"",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "70558ffe-d56b-401e-a3a4-dc322eac4193"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "b5829b51-bade-4330-81a7-c9f3a5081e1d",
    "name": "Active Azure AD Accounts mapped to deactivated Okta Accounts",
    "description": "Active Azure AD Accounts mapped to deactivated Okta Accounts",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f9b6de09-3205-448b-9fcb-6c530e42536d",
    "name": "Okta Users with MFA Disabled and have logged within 30 Days",
    "description": "Okta Users with MFA Disabled and have logged within 30 Days",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "mfa_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": true
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "fdba952d-8df5-4bca-8aaa-46663362c5b5",
    "name": "Okta Users who's status has changed to \"LOCKED_OUT\" in the last 48 hours",
    "description": "Okta Users who's status has changed to \"LOCKED_OUT\" in the last 48 hours",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "status",
                    "string_value": "LOCKED_OUT"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "GT",
                    "property": "status_updated_at",
                    "string_value": "$COOKIE_TIMEVAR_2_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "a968161f-5ef4-43b1-bd89-09067510f96d",
    "name": "Okta Users Assigned to Apps Directly not through groups",
    "description": "Okta Users Assigned to Apps Directly not through groups",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaApp"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "OktaGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1a96a594-a3f9-4307-9869-ae82b125d105",
    "name": "Okta Groups with no Users and no Apps",
    "description": "Okta Groups with no Users and no Apps",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "e8d6cc3f-1987-4ee7-b240-c290c452bf3f"
            }
          },
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaApp"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f454c2ba-e459-470c-bf13-78b652af47d6",
    "name": "High Risk Okta User with High Blast Radius to Okta Apps",
    "description": "High Risk Okta User with High Blast Radius to Okta Apps",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "ef5bdb85-4a8f-45ee-aa68-42fa1d453886"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 15,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "OktaApp"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "dd1f9886-8415-4f18-99aa-977c2685eadb",
    "name": "Okta Users with a High Blast Radius of Apps (15%)",
    "description": "Okta Users with a High Blast Radius of Apps (15%)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 15,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "OktaApp"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "3a1a701f-153b-4d03-88c0-abff982abb87",
    "name": "Okta Users Assigned to Groups Directly not through Group Rules",
    "description": "Okta Users Assigned to Groups Directly not through Group Rules",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaGroup"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "OktaGroupRule"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8a69afdc-6ea7-4281-86a0-d2961587d960",
    "name": "Okta Users with access to Roles and have weak or no MFA enabled",
    "description": "Okta Users with access to Roles and have weak or no MFA enabled",
    "labels": [
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "d3e1991e-e21a-4bec-a3f2-d3e30954c00b"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "eb805595-5e6b-4488-a80f-89a0372d77a5"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "3a54e20f-cf21-4d4b-b54b-0680b01c5382",
    "name": "Okta Groups Blast Radius (High)",
    "description": "Okta Groups Blast Radius (High) ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 4,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "OktaApp"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "df752ba6-eb30-4ae4-9594-4f8c052faf10",
    "name": "Privileged Okta apps",
    "description": "Privileged Okta apps",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "org2org"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "rsa"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "vpn"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "key"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "aws"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaApp"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "ba5888f2-0a41-4119-818a-a994a32dbd72",
    "name": "Okta users with Direct assignment to Apps (not via Groups)",
    "description": "Okta users with Direct assignment to Apps (not via Groups)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "not": true,
                          "property": "datasource_id",
                          "string_value": "workday"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "not": true,
                          "property": "service_provider",
                          "string_value": "active_directory"
                        }
                      }
                    ]
                  }
                },
                "type": "OktaApp"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "OktaGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7531c8d0-0258-47aa-b434-cdd494982538",
    "name": "Okta users assigned to privileged Okta Apps",
    "description": "Okta users assigned to privileged Okta Apps",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "df752ba6-eb30-4ae4-9594-4f8c052faf10"
                  }
                },
                "type": "OktaApp"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1410de71-bdd0-40fa-a379-71a0eff78f13",
    "name": "Okta users assigned to groups that are either Admin or Exclusive",
    "description": "Okta users assigned to groups that are either Admin or Exclusive",
    "labels": [
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "admin"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "only"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "OktaGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "4c94cfa7-fd2a-4b4f-b9f7-0ba260aa5ebd",
    "name": "Okta Users Risk Profile (High Risk Conditions2)",
    "description": "Okta Users Risk Profile (High Risk Conditions)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "95990302-03aa-4a29-98ff-e990e75efb0c"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "91eadb13-01c2-4e85-aa0c-ec3077179e9d"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "1410de71-bdd0-40fa-a379-71a0eff78f13"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "7531c8d0-0258-47aa-b434-cdd494982538"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "ba5888f2-0a41-4119-818a-a994a32dbd72"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "867a96d4-d8dd-46a5-a6d7-9ecb37549f26",
    "name": "AWS IAM Roles with a High Blast Radius (Over 70% of Access to Resources)",
    "description": "AWS IAM roles with high blast radius (over 70% access to resources)",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "CognitoIdentityPool",
                  "CognitoService",
                  "DynamoDBSecondaryIndex",
                  "DynamoDBService",
                  "DynamoDBStream",
                  "DynamoDBTable",
                  "EC2Instance",
                  "EC2SecurityGroup",
                  "EC2Service",
                  "EC2VPC",
                  "EcrPrivateRegistry",
                  "EcrPrivateRepository",
                  "EcrPublicRegistry",
                  "EcrPublicRepository",
                  "EcrService",
                  "EksCluster",
                  "EksService",
                  "EMRCluster",
                  "EMRNotebookExecution",
                  "EMRService",
                  "EMRStudio",
                  "LambdaFunction",
                  "LambdaService",
                  "RdsCluster",
                  "RdsInstance",
                  "RdsMySqlDatabase",
                  "RdsMySqlRoutine",
                  "RdsMySqlTable",
                  "RdsMySqlTrigger",
                  "RdsService",
                  "RedshiftCluster",
                  "RedshiftDatabase",
                  "RedshiftDatabaseInstance",
                  "RedshiftSchema",
                  "RedshiftService",
                  "RedshiftTable",
                  "S3Bucket",
                  "S3Service",
                  "SecretsManagerSecret",
                  "SecretsManagerService"
                ],
                "type": "AWS"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "21a3a317-a2f4-4e5e-9926-385fddb71bef",
    "name": "Local AWS IAM Users with a dormant programmatic access",
    "description": "Local AWS IAM Users with a dormant programmatic access",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "programmatic_last_used_at",
              "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "aa6e9bc2-cd46-41a0-8eb7-391b85706f2a",
    "name": "Deactivated Okta Users with Access to AWS IAM Roles",
    "description": "Deactivated Okta Users with Access to AWS IAM Roles",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "73ec31a3-c4f9-47a6-8b55-2e131e3add29",
    "name": "Access Keys with \"Full Admin\" Access that do not expire",
    "description": "Administrative privileges that provide unrestricted access to all actions on all resources in an AWS account",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "can_expire"
            }
          },
          "type": "AwsIamAccessKey"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "e6ef6303-d34a-4059-9e1d-838a4919b216",
    "name": "Dormant Access Keys with \"Full Admin\" Access",
    "description": "Administrative privileges that provide unrestricted access to all actions on all resources in an AWS account",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "AwsIamAccessKey"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "0c833653-a30f-4124-bcc1-82c6b098d64b",
    "name": "AWS IAM Users with no MFA and Console Access that have \"Full Admin\" Access",
    "description": "IAM policies that allow full \":\" administrative privileges provide unrestricted access to all actions on all resources in an AWS account",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": false,
                          "fn": "EQ",
                          "property": "mfa_active"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "console_access"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "not": true,
                    "property": "name",
                    "string_value": "Glass"
                  }
                }
              ]
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6c796f78-497b-4f18-88c7-6518f9aa612c",
    "name": "Local AWS IAM Users with Console Access and no MFA enabled",
    "description": "Local AWS IAM Users with Console Access and no MFA enabled",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "console_access"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "mfa_active"
                  }
                }
              ]
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "66d6b808-bf85-4171-8dd3-3ca8475d80aa",
    "name": "High Risk Okta Users with Access to AWS Admin Role",
    "description": "High Risk Okta Users with Access to AWS Admin Role",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "ef5bdb85-4a8f-45ee-aa68-42fa1d453886"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d6a25bbd-72d9-43d6-ac2a-671ce3ae2271",
    "name": "Bucket Policy Statements that Contain \"@\"",
    "description": "This typically means that an email address is assigned directly in the statement itself",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "document",
              "string_value": "@"
            }
          },
          "type": "S3BucketPolicyStatement"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "5b336b49-90f2-47e5-ad3c-a690df705290",
    "name": "Dormant IAM Users with \"Full Admin\" Access",
    "description": "IAM policies that allow full \":\" administrative privileges provide unrestricted access to all actions on all resources in an AWS account",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "programmatic_last_used_at",
                          "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "password_last_used_at",
                          "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "not": true,
                    "property": "name",
                    "string_value": "Glass"
                  }
                }
              ]
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8f88b29a-f33c-49cc-aad2-b2776c8c3617",
    "name": "AWS IAM Policy Statements that include an \"@\" sign",
    "description": "AWS IAM Policy Statements that include an \"@\" sign",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "document",
              "string_value": "@"
            }
          },
          "type": "AwsIamPolicyStatement"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "5523124c-0eae-4f42-bef2-d542d533d2ee",
    "name": "AWS IAM Roles with a Medium Blast Radius (10% - 30%) of Resources",
    "description": "AWS IAM Roles with a Medium Blast Radius (10% - 30%) of Resources",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "not": true,
              "property": "id",
              "string_value": "867a96d4-d8dd-46a5-a6d7-9ecb37549f26"
            }
          },
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 10,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "CognitoIdentityPool",
                  "CognitoService",
                  "DynamoDBSecondaryIndex",
                  "DynamoDBService",
                  "DynamoDBStream",
                  "DynamoDBTable",
                  "EC2Instance",
                  "EC2SecurityGroup",
                  "EC2Service",
                  "EC2VPC",
                  "EcrPrivateRegistry",
                  "EcrPrivateRepository",
                  "EcrPublicRegistry",
                  "EcrPublicRepository",
                  "EcrService",
                  "EksCluster",
                  "EksService",
                  "EMRCluster",
                  "EMRNotebookExecution",
                  "EMRService",
                  "EMRStudio",
                  "LambdaFunction",
                  "LambdaService",
                  "RdsCluster",
                  "RdsInstance",
                  "RdsMySqlDatabase",
                  "RdsMySqlRoutine",
                  "RdsMySqlTable",
                  "RdsMySqlTrigger",
                  "RdsService",
                  "RedshiftCluster",
                  "RedshiftDatabase",
                  "RedshiftDatabaseInstance",
                  "RedshiftSchema",
                  "RedshiftService",
                  "RedshiftTable",
                  "S3Bucket",
                  "S3Service",
                  "SecretsManagerSecret",
                  "SecretsManagerService"
                ],
                "type": "AWS"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "0f0ece3b-ae46-4cd1-807d-a52c29959c35",
    "name": "Dormant AWS IAM Users - not used for more than 30 days ",
    "description": "Dormant AWS IAM Users - not used for more than 30 days",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "programmatic_last_used_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "9795a285-1672-4f2a-bd85-9f93472a0038",
    "name": "AWS IAM Resources that Provide a High Blast Radius (30% of the Resources)",
    "description": "AWS IAM Resources that Provide a High Blast Radius (30% of the Resources)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "CognitoService",
                  "DynamoDBSecondaryIndex",
                  "DynamoDBService",
                  "DynamoDBStream",
                  "DynamoDBTable",
                  "EC2Instance",
                  "EC2SecurityGroup",
                  "EC2Service",
                  "EC2VPC",
                  "EcrPrivateRegistry",
                  "EcrPrivateRepository",
                  "EcrPublicRegistry",
                  "EcrPublicRepository",
                  "EcrService",
                  "EksCluster",
                  "EksService",
                  "EMRCluster",
                  "EMRNotebookExecution",
                  "EMRService",
                  "EMRStudio",
                  "KmsCmk",
                  "KmsService",
                  "LambdaFunction",
                  "LambdaService",
                  "RdsCluster",
                  "RdsInstance",
                  "RdsMySqlDatabase",
                  "RdsMySqlRoutine",
                  "RdsMySqlTable",
                  "RdsMySqlTrigger",
                  "RdsPostgresDatabase",
                  "RdsPostgresSchema",
                  "RdsPostgresTable",
                  "RdsService",
                  "RedshiftCluster",
                  "RedshiftDatabase",
                  "RedshiftService",
                  "S3Bucket",
                  "S3Service",
                  "SecretsManagerSecret",
                  "SecretsManagerService",
                  "CognitoIdentityPool"
                ],
                "type": "AWS"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "34da9a40-ed86-4c34-8cf2-715a7b0a1b4e",
    "name": "IAM Users with Console Access and \"Full Admin\" Access",
    "description": "IAM policies that allow full \":\" administrative privileges provide unrestricted access to all actions on all resources in an AWS account",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "console_access"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "not": true,
                    "property": "name",
                    "string_value": "Glass"
                  }
                }
              ]
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "full_admin"
                  }
                },
                "type": "AwsIamRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "0a463158-235c-4a20-8a90-61c6428aa455",
    "name": "Local AWS IAM Users with Console Access",
    "description": "Local AWS IAM Users with Console Access",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "console_access"
            }
          },
          "type": "AwsIamUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "79b1ebe5-d229-4f8d-98a5-3a7dac7248f9",
    "name": "AWS IAM Roles that haven't been used in 90 Days",
    "description": "AWS IAM Roles that haven't been used in 90 Days",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_used_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "AwsIamRole"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "fe29bfbd-9431-4cf7-ad65-d7a12ecdea74",
    "name": "Sharepoint Folders with Financial Data ",
    "description": "Sharepoint Folders with Financial Data ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Financ"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "bill"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Expense"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Income"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "revenue"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Budget"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "invoice"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "receipt"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Tax"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "pay"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "salary"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "investment"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "bank"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "cash"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "audit"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "profit"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "p\u0026l"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "SharePointFolder"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "e981a565-9bf2-4060-b25b-17877911a48d",
    "name": "Azure AD Users with Phishable MFA Registered and Access to Roles",
    "description": "Azure AD Users with Phishable MFA Registered and Access to Roles",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "41ae0118-21a8-4df9-8523-bce166b89537"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "aae25216-c8d9-42cb-bf66-d8f51a01dab1",
    "name": "Azure AD users with Dormant Access to Roles (Including PIM)",
    "description": "Azure AD users with Dormant Access to Roles (Including PIM)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "d00e5921-d792-4a7b-80e3-77f89e4b29a9"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a39a1031-dfe2-477e-b6df-2ea3816bf064",
    "name": "Medium to High Risk Users with Access to Roles (Including PIM)",
    "description": "Medium to High Risk Users with Access to Roles (Including PIM)",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "number_value": "50",
              "property": "risk_score"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "41ae0118-21a8-4df9-8523-bce166b89537",
    "name": "Azure AD users with Phishable MFA ",
    "description": "Azure AD users with Phishable MFA ",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "sms"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "question"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "system_preferred_authentication_methods",
                          "string_value": "email"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "email"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "question"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "user_preferred_method_for_secondary_authentication",
                          "string_value": "sms"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "passKeyDeviceBound"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPush"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "windowsHelloForBusiness"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "methods_registered",
                          "string_value": "microsoftAuthenticatorPasswordless"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "577ba36b-072e-4fb9-8ea9-af79b84cc723",
    "name": "High Risk Sharepoint Folders mapped to High Risk Azure AD users",
    "description": "High Risk Sharepoint Folders mapped to High Risk Azure AD users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "not": true,
              "number_value": "0",
              "property": "risk_score"
            }
          },
          "type": "SharePointFolder"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "GT",
                    "number_value": "70",
                    "property": "risk_score"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fb342117-8f24-4887-badd-0a06632c7e78",
    "name": "Dormant Sharepoint Sites",
    "description": "Dormant Sharepoint Sites",
    "result_type": "number",
    "risk_level": "LOW",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_activity_date",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "SharePointSite"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "536360b2-b6c6-4574-9c94-6447e9a66775",
    "name": "Azure AD Users Assigned to Sharepoint Resources directly outside of Azure AD Groups",
    "description": "Azure AD Users Assigned to Sharepoint Resources directly outside of Azure AD Groups",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "SharePointFolder"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "AzureADGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fcf562cf-c537-464f-b45a-bf035b7772b1",
    "name": "Azure AD Guest Users with a High Sharepoint Blast Radius",
    "description": "Azure AD Guest Users with a High Sharepoint Blast Radius",
    "labels": [
      "best_practice",
      "guest_user_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "guest"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "SharePointFolder",
                  "SharePointLibrary",
                  "SharePointList",
                  "SharePointSite"
                ],
                "type": "SharePoint"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "99940a5c-856c-47b1-95cb-a645f57e1ade",
    "name": "Azure AD Users with a High Blast Radius to Sharepoint Folders (70%) ",
    "description": "Azure AD Users with a High Blast Radius to Sharepoint Folders (70%) ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 70,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "SharePointFolder"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2dda7a8d-0d8b-49ba-86ba-1f28bbb08efd",
    "name": "Azure AD Security Groups without active Users",
    "description": "Azure AD Security Groups that have no activated Users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_security_group"
            }
          },
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7535067d-3149-44b0-b1e8-68a7c5f565ba",
    "name": "Active Azure AD Users that do not map to Okta Accounts",
    "description": "Active Azure AD Users that do not map to Okta Accounts",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "48bcbc14-f8d7-4b13-9f36-37bcab87e03f",
    "name": "Azure Service Principals that have permissions containing \"Write.all\" ",
    "description": "Azure Service Principals that have permissions containing \"Write.all\" ",
    "labels": [
      "best_practice",
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LIST_ANY_ELEMENT_CONTAINS",
              "property": "permissions",
              "string_value": "write.all"
            }
          },
          "type": "AzureADEnterpriseApplication"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "c29f108f-5412-4df5-b15d-c29e60e01e33",
    "name": "Azure AD Users that do not map to Active Directory Users",
    "description": "Azure AD Users that do not map to Active Directory Users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2df3f0a4-ec5f-46eb-9b36-db02388c96fe",
    "name": "Deactivated Azure AD Users with Access to Roles ",
    "description": "Deactivated Azure AD Users with Access to Roles ",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "d66f1615-ab5b-4b92-9f87-1603d3fbf587",
    "name": "High Risk Global Administrators",
    "description": "High Risk Global Administrators",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "number_value": "75",
              "property": "risk_score"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Global Administrator"
                  }
                },
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7154db24-9e58-47a4-af87-f445657a25ca",
    "name": "High Risk Azure AD users that can access Financial Folders ",
    "description": "High Risk Azure AD users that can access Financial Folders ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 2,
          "value": 100
        }
      },
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "number_value": "70",
              "property": "risk_score"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "fe29bfbd-9431-4cf7-ad65-d7a12ecdea74"
                  }
                },
                "type": "SharePointFolder"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "4d943199-e6c6-4899-9d67-81a4fa69a937",
    "name": "Azure AD Users with no MFA",
    "description": "Azure AD Users with no MFA",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_mfa_registered"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EXISTS",
                    "not": true,
                    "property": "methods_registered"
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "fbc1d214-d0fd-4e49-a500-a16f28a7b196",
    "name": "Dormant Azure AD user with Access to Roles",
    "description": "Dormant Azure AD user with Access to Roles",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "33cf660c-d80a-4c69-ab0e-9c54f92bccd9",
    "name": "Privileged Human Azure AD users with Weak or no MFA (Including PIM)",
    "description": "Privileged Human Azure AD users with Weak or no MFA (Including PIM)",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": false,
                          "fn": "EQ",
                          "property": "is_mfa_registered"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                          "property": "id",
                          "string_value": "41ae0118-21a8-4df9-8523-bce166b89537"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      }
                    ]
                  }
                }
              ],
              "or": true
            }
          },
          "type": "AzureADUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "AzureADRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5b2ed085-0e02-49e3-9005-806edc586d97",
    "name": "Active Azure AD Users mapped to Deactivate Active Directory Users",
    "description": "Active Azure AD Users mapped to Deactivate Active Directory Users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2da0cc72-7e29-4fb6-93c4-882b499c27be",
    "name": "AD Groups Risk Profile (Admin | Privileged | Exclusive) ",
    "description": "AD Groups Risk Profile (Admin | Privileged | Exclusive) ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Admin"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "super"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "privilege"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "root"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "only"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "4085df67-4257-4acc-98e7-00460eb022ca",
    "name": "Active Directory Service Accounts",
    "description": "Active Directory Service Accounts",
    "labels": [
      "nonhuman_identity",
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "svc"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "service"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "account"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "_"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "test"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "user"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "room"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "automation"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "f9f782f4-77dd-4809-a151-f077b8ccd4aa",
    "name": "Active Directory Human Accounts that are Domain Admins and haven't rotated PW in 45 Days",
    "description": "Active Directory Human Accounts that are Domain Admins and haven't rotated PW in 45 Days",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_45_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Domain Admins"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "19b3d322-f26f-467d-9dcd-5c8f6f0eeeaa",
    "name": "Dormant Active Directory Users",
    "description": "Dormant Active Directory Users",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "customprop_last_logon_timestamp",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "ce1fee81-9e42-4a1e-8e04-c563dd0cbc2a",
    "name": "Active Directory Group Blast Radius (10 to 20% of Users)",
    "description": "Active Directory Group Blast Radius (10 to 20% of Users)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "not": true,
              "property": "id",
              "string_value": "479abba6-7aa4-4c25-8115-9e6d1d066ac6"
            }
          },
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GTE",
                      "value": 10,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c7ce77ee-7890-49a3-a156-881dab3cff2f",
    "name": "AD Groups Containing Disabled Users",
    "description": "AD Cleanup: AD Groups Containing Disabled Users",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "546f8c93-30c1-4963-a855-a1951f079828",
    "name": "Active Directory Human Accounts that are in \"Admin\" Group and haven't rotated PW in 45 Days",
    "description": "Active Directory Human Accounts that are in \"Admin\" Group and haven't rotated PW in 45 Days",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_45_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Admin"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c6720059-bed0-4b58-b32e-281d43a2f00d",
    "name": "Active Directory Service Accounts that are in \"Admin\" Group and haven't rotated PW in 45 Days",
    "description": "Active Directory Service Accounts that are in \"Admin\" Group and haven't rotated PW in 45 Days",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice",
      "service_account"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "4085df67-4257-4acc-98e7-00460eb022ca"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_45_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Admin"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5b3ad083-4c6a-47f1-93a2-b408ced081fe",
    "name": "Dormant Active Directory Accounts that are in \"Admin\" Groups",
    "description": "Dormant Active Directory Accounts that are in \"Admin\" Groups",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "customprop_last_logon_timestamp",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Admin"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6821608d-8465-4e72-946c-2c2327d1118c",
    "name": "Active Directory Service Accounts that haven't rotated Passwords in 180 Days",
    "description": "Active Directory Service Accounts that haven't rotated Passwords in 180 Days",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice",
      "service_account"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "4085df67-4257-4acc-98e7-00460eb022ca"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_180_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "d4077ca3-c55a-45f0-b7d0-7af3d2704ae2",
    "name": "AD Users assigned to 10 plus (Admin | Privileged | Exclusive) groups",
    "description": "AD Users assigned to 10 plus (Admin | Privileged | Exclusive) groups",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "and_op_type": 1,
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 10,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "root_condition": {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "2da0cc72-7e29-4fb6-93c4-882b499c27be"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1371fbd8-9c12-49aa-9de9-c39b8e498a14",
    "name": "Deactivate AD users that are in more than 30 groups",
    "description": "Deactivate AD users that are in more than 30 groups",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "97714ff4-0e25-479c-a3b6-f2997b91b759",
    "name": "Active AD Users mapped to Deactivated Azure AD Users",
    "description": "Active AD Users mapped to Deactivated Azure AD Users",
    "result_type": "number",
    "risk_level": "MEDIUM",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "86694750-8836-4b91-af86-81ef58aaa8d0",
    "name": "Deeply nested AD Groups",
    "description": "AD Cleanup: Deep Nested AD Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "number_value": "0",
              "property": "hierarchical_level"
            }
          },
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c6f41873-c2b7-4f26-96f4-394bdb0a99b1",
    "name": "Dormant Active Directory Users that are Domain Admins",
    "description": "Dormant Active Directory Users that are Domain Admins",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "customprop_last_logon_timestamp",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Domain Admins"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a480e725-633d-4454-a764-1642a39b39f5",
    "name": "Active Directory Service Accounts that are Domain Admins and haven't rotated PW in 45 Days",
    "description": "Active Directory Service Accounts that are Domain Admins and haven't rotated PW in 45 Days",
    "result_type": "number",
    "risk_level": "CRITICAL",
    "labels": [
      "best_practice",
      "service_account"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "4085df67-4257-4acc-98e7-00460eb022ca"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_45_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Domain Admins"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "26d0d6cf-1db4-4d65-aaa7-256760d45302",
    "name": "Deactivated Active Directory Accounts that are in \"Admin\" Groups",
    "description": "Deactivated Active Directory Accounts that are in \"Admin\" Groups",
    "result_type": "number",
    "risk_level": "HIGH",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "Admin"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2cc469c6-82d6-40fd-b40c-619cbd2b6d39",
    "name": "Active AD Users mapped to Deactivated Okta Users",
    "description": "Active AD Users mapped to Deactivated Okta Users",
    "result_type": "number",
    "risk_level": "MEDIUM",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a27c21f7-706d-473e-9969-b8810e852cf3",
    "name": "AD groups with no users",
    "description": "AD Cleanup: AD groups with no users",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ef491a68-269e-4467-9fb9-81dd492bc811",
    "name": "Active Directory users that do not map to Okta Users",
    "description": "Active Directory users that do not map to Okta Users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "f79fb303-b457-4b8e-a12b-859c21a8c686",
    "name": "Active Directory Human users that haven't rotated PW in 180 days",
    "description": "Active Directory Human users that haven't rotated PW in 180 days",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LT",
                          "property": "password_last_set",
                          "string_value": "$COOKIE_TIMEVAR_180_DAY_AGO"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "is_active"
                        }
                      }
                    ]
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "479abba6-7aa4-4c25-8115-9e6d1d066ac6",
    "name": "Active Directory Group Blast Radius (20% of Users)",
    "description": "Active Directory Group Blast Radius (20% of Users)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 20,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "decac1df-c73e-463f-803e-2c96f220a4e3",
    "name": "Active Directory users that do not map to Azure AD Users",
    "description": "Active Directory users that do not map to Azure AD Users",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "3402ac92-e465-4f8d-9606-8480e0779f49",
    "name": "Okta users tied to AD users  that haven't reset their password in 90 Days",
    "description": "Okta users tied to AD users  that haven't reset their password in 90 Days",
    "result_type": "number",
    "risk_level": "LOW",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "21fcfd3d-02f5-4d11-8da6-8799a686b352",
    "name": "Okta Users Risk Profile (High Risk Conditions)",
    "description": "Okta Users Risk Profile (High Risk Conditions)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "not": true,
                    "property": "email",
                    "string_value": "sigmacorp"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "property": "mfa_factors",
                    "string_value": "SMS"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "mfa_active"
                  }
                }
              ],
              "or": true
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "db5782c9-9d5d-4d15-84a5-c0164be67f3d",
    "name": "Azure AD Group Blast Radius (30% of Users)",
    "description": "Azure AD Group Blast Radius (30% of Users)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ee09f220-2c4d-4033-92c8-88ea34b14496",
    "name": "Snowflake User Blast Radius (High)",
    "description": "Snowflake User Blast Radius (High)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 6,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "04d90117-8d55-49f8-be80-e445e4c0226f",
    "name": "AD Groups Risk Profile (High Federated Access Blast Radius)",
    "description": "AD Groups Risk Profile (High Federated Access Blast Radius)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Identity"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6949ac9f-91ce-4c90-b961-0a9e428be77f",
    "name": "AD Groups Risk Profile (High Identity Blast Radius)",
    "description": "AD Groups Risk Profile (High Identity Blast Radius)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 10,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "0c29e2e4-0484-4ddc-b1d7-8ea2fed1d1ff",
    "name": "Azure AD Group Blast Radius (10% of Users)",
    "description": "Azure AD Group Blast Radius (10% of Users)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "not": true,
              "property": "id",
              "string_value": "db5782c9-9d5d-4d15-84a5-c0164be67f3d"
            }
          },
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 10,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "57e6f8ce-d846-4392-bdcd-03791b010b7b",
    "name": "Azure AD Groups Blast Radius High (10% of Data Sources)",
    "description": "Azure AD Groups Blast Radius High (10% of Data Sources)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 10,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "AzureDataLakeDirectory",
                  "AzureDataLakeFilesystem",
                  "BigQueryDataset",
                  "DatabricksCatalog",
                  "DatabricksNotebook",
                  "DatabricksSchema",
                  "DatabricksTable",
                  "DatabricksView",
                  "GoogleCloudSqlDatabase",
                  "GoogleCloudSqlDatabaseInstance",
                  "MongoDbDatabase",
                  "RdsMySqlDatabase",
                  "RdsPostgresDatabase",
                  "RedshiftDatabase",
                  "RedshiftDatabaseInstance",
                  "SnowflakeDatabase",
                  "SqlServerDatabase"
                ],
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2bfa84d2-21c0-4439-8831-5f98fb4fb171",
    "name": "High Risk Okta users who haven't reset their AD Passwords in over 90 Days",
    "description": "High Risk Okta users who haven't reset their AD Passwords in over 90 Days",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "21fcfd3d-02f5-4d11-8da6-8799a686b352"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "3402ac92-e465-4f8d-9606-8480e0779f49"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "ActiveDirectoryUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "57608d2b-abe1-40ab-aafe-0c9bb4bf1ba3",
    "name": "Azure AD Groups Blast Radius High (15% of Secrets)",
    "description": "Azure AD Groups Blast Radius High (15% of Secrets)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 15,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "included_types": [
                  "GoogleCloudKMSKey",
                  "HashicorpVaultSecretsEngineSubresource",
                  "KmsCmk",
                  "SecretsManagerSecret"
                ],
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "df4f24a0-fb5e-4ef7-b6cf-aaecec5b2dc7",
    "name": "Active Directory Users that haven't rotated their Password in 180 days but are in an \"Admin\" Group",
    "description": "Active Directory Users that haven't rotated their Password in 180 days but are in an \"Admin\" Group",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "f85a335e-7b9b-4a8a-a131-ace9781fe9db"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "f79fb303-b457-4b8e-a12b-859c21a8c686"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                },
                "type": "ActiveDirectoryGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6ec05eb3-786c-4b6b-9f76-41e4f77c453b",
    "name": "Snowflake Local Users - Unfederated but have password and no mfa",
    "description": "Snowflake Local Users - Unfederated but has password and no mfa",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice",
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "has_password"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "mfa_enabled"
                  }
                }
              ]
            }
          },
          "type": "SnowflakeUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "User"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1d8242b8-5dad-48b1-9598-ae43f3e7af5f",
    "name": "Active Directory Service Accounts that haven't rotated their password in 90 days",
    "description": "PCI 4.0 - 8.3.9 Active Directory service accounts that haven't rotated their PW in 90 days",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "best_practice",
      "service_account"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "property": "id",
                    "string_value": "4085df67-4257-4acc-98e7-00460eb022ca"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "password_last_set",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "11220eb8-ede3-4c8a-9138-5779723d380a",
    "name": "Active Directory Users Blast Radius (High)",
    "description": "Active Directory Users Blast Radius (High)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 1000,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "e6c8c29c-4445-41b6-94b8-4256798f2857",
    "name": "Azure AD Groups Identity Blast Radius High (20% of users)",
    "description": "Azure AD Groups Identity Blast Radius High (20% of users)",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 20,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "AzureADUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "bb552d99-bdd3-4120-a989-4694e3056168",
    "name": "Snowflake Tables with Masking Policies",
    "description": "Snowflake Tables which have Masking Policies attached to its columns",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeTable"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6a2dfb6f-97f5-419e-9113-e90f172612e7",
    "name": "Snowflake Table Columns with Masking Policies",
    "description": "Snowflake Table Columns which have Masking Policies attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeTableColumn"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "c70ce7e2-9f51-47d9-ba52-684e1b2d4fc2",
    "name": "Snowflake Views with Masking Policies",
    "description": "Snowflake Views which have Masking Policies attached to its columns",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeView"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9bdcd961-6c5b-435a-9229-59712a7c9434",
    "name": "Snowflake View Columns with Masking Policies",
    "description": "Snowflake View Columns which have Masking Policies attached",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeViewColumn"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "689a597e-081b-4beb-a7b2-2d01e06f11dc",
    "name": "Snowflake Users receiving unmasked data from Masking Policies",
    "description": "Snowflake Users who receive unmasked data from a Masking Policy",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "e4a0b47a-cbfd-4dc6-9119-0323dfdfd015",
    "name": "Snowflake Roles receiving unmasked data from Masking Policies",
    "description": "Snowflake Roles who receive unmasked data from a Masking Policy",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeRole"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "18292ca4-52ee-46f8-8455-b1743f9760a9",
    "name": "Snowflake Application Roles receiving unmasked data from Masking Policies",
    "description": "Snowflake Application Roles who receive unmasked data from a Masking Policy",
    "value_query": {
      "from_node_types": [
        {
          "type": "SnowflakeApplicationRole"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "SnowflakeMaskingPolicy"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "f387a18b-d48e-4fb4-b342-628473a17473",
    "name": "Users with access to non-production environments",
    "description": "Users with access to non-production repos",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "dev"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "staging"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "QA"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "qa"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "development "
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "qc"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c8c03111-4522-4505-b1c0-a23b9dcc32a4",
    "name": "View all user|svc access to resources in scope",
    "description": "View all user|svc access to resources in scope",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cookietag_DataCompliance",
                    "string_value": "PCI"
                  }
                },
                "type": "SqlServerTable"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "40780238-53e8-49af-a081-922eec01c8a3",
    "name": "AzureAD users with MFA disabled and their downstream access",
    "description": "AzureAD users with MFA disabled and their downstream access",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EXISTS",
              "not": true,
              "property": "is_mfa_registered"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ffd8ab41-5fc3-4117-af49-6a4036690637",
    "name": "Active Directory Users that haven't rotated their password in 90 days",
    "description": "Active Directory Users that haven't rotated their PW in 90 days",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "password_last_set",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "2ac5e3cd-9936-4cb7-9efa-0e9a3998d0c0",
    "name": "Identify Okta users with phishable MFA and their blast radius",
    "description": "Identify Okta users with phishable MFA and their blast radius",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "mfa_factors",
                          "string_value": "push"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "mfa_factors",
                          "string_value": "webauthn"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "not": true,
                          "property": "mfa_factors",
                          "string_value": "signed_nonce"
                        }
                      }
                    ]
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "mfa_factors",
                          "string_value": "token:software:totp"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "mfa_factors",
                          "string_value": "sms"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "mfa_factors",
                          "string_value": "question"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "4592bad9-3457-48aa-a267-5534dd274b36",
    "name": "Okta users with MFA deactivated but VPN access",
    "description": "Okta users with MFA deactivated but VPN access",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "mfa_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "VPN Users"
                  }
                },
                "type": "OktaGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "17e2cce6-86c1-43f5-a5a7-0cbd2b325c68",
    "name": "Identify Github Repositories without branch protection rules and approval requirements",
    "description": "Monitor for repository control in Github",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "default_require_pull_request_approval"
                  }
                },
                {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "has_branch_protection_rules"
                  }
                }
              ]
            }
          },
          "type": "GithubRepository"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "f473de85-a037-4390-8bc9-30a366d9a946",
    "name": "Okta users with MFA disabled and their downstream access",
    "description": "Okta users with MFA disabled and their downstream access",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "mfa_active"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2b5010c6-e396-487d-afc5-0ba7e3e7bd5c",
    "name": "AzureAD users with MFA deactivated but VPN access",
    "description": "AzureAD users with MFA deactivated but VPN access",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "VPN Access"
                  }
                },
                "type": "AzureADGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "name": "Identify Okta users who have access to secrets in HashiCorp Vault",
    "id": "62b1c258-ccee-4a4b-a2fa-82bdba8d80c2",
    "description": "Monitoring who has access to keys",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "HashicorpVaultSecretsEngineSubresource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "32957e33-d567-45d0-9871-8e7100375c23",
    "name": "Identify AzureAD users with phishable MFA and their blast radius",
    "description": "Identify AzureAD users with phishable MFA and their blast radius",
    "result_type": "number",
    "risk_level": "NONE",
    "labels": [
      "mfa_disabled"
    ],
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LIST_ANY_ELEMENT_CONTAINS",
                    "not": true,
                    "property": "methods_registered",
                    "string_value": "microsoftAuthenticatorPush"
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "methods_registered",
                          "string_value": "mobilePhone"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "LIST_ANY_ELEMENT_CONTAINS",
                          "property": "methods_registered",
                          "string_value": "softwareOneTimePasscode"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              ]
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "Resource"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "826dd4ce-a177-484e-a537-65d1f5d725b8",
    "name": "Active Directory Users that haven't been active in 90 day ",
    "description": "Users that haven't been active in 90 day Active Directory",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "customprop_last_logon",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "customprop_last_logon_timestamp",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                }
              ]
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "80b560fa-3a12-4e99-b3f1-24e257a5e899",
    "name": "Segregation of duties for production and pre-production environments ",
    "description": "Segregation of duties for production and pre-production environments ",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "f387a18b-d48e-4fb4-b342-628473a17473"
            }
          },
          "type": "User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "prod"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "live"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "main"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "master"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "name",
                          "string_value": "release "
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "GithubRepository"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1005eaae-803a-4cbc-9885-80956dfadfa0",
    "name": "View svc access to resources in scope",
    "description": "View svc access to resources in scope",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "CONTAINS",
              "property": "name",
              "string_value": "svc"
            }
          },
          "type": "ActiveDirectoryUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "cookietag_DataCompliance",
                    "string_value": "PCI"
                  }
                },
                "type": "SqlServerTable"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "bab10273-45f3-4b77-b94c-83e03014ac0f",
    "name": "Non-Human Identities with Moderate Key Blast Radius ( between 40-80 percent)",
    "description": "Non-Human Identities with Moderate Key Blast Radius ( between 40-80 percent)",
    "result_type": "number",
    "risk_explanation": "Non-Human Identities with Moderate Key Blast Radius ( between 40-80 percent)\n",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "NONHUMAN"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
                    "not": true,
                    "property": "id",
                    "string_value": "6ac0e47e-7acd-4d12-8849-b77b2b32e479"
                  }
                }
              ]
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GTE",
                      "value": 40,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "85cdbeb4-1e09-47aa-b7c9-edbc46e81aad",
    "name": "Non-Human Identities with Low Key Blast Radius ( less than 40 percent)",
    "description": "Non-Human Identities with Low Key Blast Radius ( less than 40 percent access to all keys)",
    "result_type": "number",
    "risk_explanation": "Non-Human Identities with Low Key Blast Radius ( less than 40 percent access to all keys)",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "LT",
                      "value": 40,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5152c046-a863-41eb-beb8-f97311d065f9",
    "name": "AWS Service Principals with create, update, delete permissions for keys",
    "description": "AWS Service Principals with create, update, delete permissions for keys",
    "result_type": "number",
    "risk_explanation": "AWS Service Principals with create, update, delete permissions for keys",
    "risk_level": "HIGH",
    "labels": [
      "delete_permissions",
      "service_account"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "AwsServicePrincipal"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "KmsCmk"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "data_write_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_create_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_delete_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "metadata_write_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "non_data_privilege"
                        }
                      },
                      {
                        "leaf_condition": {
                          "bool_value": true,
                          "fn": "EQ",
                          "property": "uncategorized_privilege"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "EffectivePermission"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6ac0e47e-7acd-4d12-8849-b77b2b32e479",
    "name": "Non-Human Identities with High Key Blast Radius ( greater than 80 percent)",
    "description": "Non-Human Identities with High Key Blast Radius ( greater than 80 percent access of all keys)",
    "result_type": "number",
    "risk_explanation": "Non-Human Identities with High Key Blast Radius ( greater than 80% access of all keys)",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "identity_type",
              "string_value": "NONHUMAN"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GTE",
                      "value": 80,
                      "value_as": "PERCENTAGE_OF_TOTAL_COUNT"
                    }
                  ]
                },
                "type": "Key"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8dae9657-8487-41b7-8ee3-31b5f2e1542a",
    "name": "Active Azure AD Users that map to deactivated Workday Workers ",
    "description": "Active Azure AD Users that map to deactivated Workday Workers ",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                "type": "WorkdayWorker"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "879255fd-4c5c-4cb7-980b-fa37b03f6c7c",
    "name": "Active Azure AD Users that do not map to Workday Workers",
    "description": "Active Azure AD Users that do not map to Workday Workers",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "AzureADUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "WorkdayWorker"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "cccbeb9b-8f03-46ee-bdd4-57931207d01c",
    "name": "Okta Users (last login  90 plus days) mapped to Servicenow Elevated Privilege roles",
    "description": "Okta Users (last login  90 plus days ) mapped to Servicenow Elevated Privilege roles",
    "labels": [
      "best_practice"
    ],
    "result_type": "number",
    "risk_level": "LOW",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "ServiceNowRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "fbbeb1fc-5df0-4f57-9444-d807c7d8f15d",
    "name": "Google Users assigned to the \"Owner\" role directly",
    "description": "Google Users assigned to the \"Owner\" role directly",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleWorkspaceGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "219bde7c-bbd7-41dc-8047-2f62f1bf7a2a",
    "name": "Google Cloud Service Accounts with the Google Cloud \"Viewer\" Role",
    "description": "Google Cloud Service Accounts with the Google Cloud \"Viewer\" Role",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleCloudOrganization"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7b635b15-21e3-46cf-ad7b-9174c55c32f1",
    "name": "Google Users assigned to the \"Editor\" role at the Project level",
    "description": "Google Users assigned to the \"Editor\" role at the Project level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "project"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleCloudServiceAccount"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "c7107de8-65b0-4e37-b185-17fefbef4feb",
    "name": "Google Users assigned to the \"Owner\" role at the Folder level",
    "description": "Google Users assigned to the \"Owner\" role at the Folder level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "folder"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a916ec2a-635a-419e-9866-a4b62ab907e1",
    "name": "Google Groups that grant the Google Cloud \"Owner\" Role",
    "description": "Google Groups that grant the Google Cloud \"Owner\" Role",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "8a0e0a32-d1fb-417f-b7bf-cbf4fd52c8b8",
    "name": "Google Cloud Service Accounts with the Google Cloud \"Owner\" Role",
    "description": "Google Cloud Service Accounts with the Google Cloud \"Owner\" Role",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleCloudOrganization"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "abaf39ee-eaf8-49ca-8303-55338ba3d533",
    "name": "Google Groups that grant the Google Cloud \"Viewer\" Role",
    "description": "Google Groups that grant the Google Cloud \"Viewer\" Role",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "ffe3d158-b116-46d3-b63d-0f62b3a4b696",
    "name": "GCP Users Assigned Editor Role",
    "description": "GCP Users Assigned Editor Role",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleCloudServiceAccount"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "7f1019a9-d0e6-4d9f-be3b-6cbc4492203e",
    "name": "Google Users assigned to the \"Editor\" role directly",
    "description": "Google Users assigned to the \"Editor\" role directly",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleWorkspaceGroup"
              },
              {
                "type": "GoogleCloudServiceAccount"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9066b942-7d04-479e-b7bb-ba1883900391",
    "name": "Google Cloud Service Accounts with \"Editor\" Role that can be assumed by more than 30 users",
    "description": "Google Cloud Service Accounts with \"Editor\" Role that can be assumed by more than 30 users",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "2b36418e-7d36-49b8-87df-08f3d36993ae"
            }
          },
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "GoogleWorkspaceUser",
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "COUNT"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "af2a7d27-71cf-44fd-a9cc-98983f3b16b1",
    "name": "Google Users assigned to the \"Editor\" role at the organization level",
    "description": "Google Users assigned to the \"Editor\" role at the organization level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "organization"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "06a783a0-6668-4639-8ebd-edd5623239f5",
    "name": "GCP Users Assigned Owner Role",
    "description": "GCP Users Assigned Owner Role",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5829ce91-0b24-48b0-a0c8-ef6328df1591",
    "name": "Google Users assigned to the \"Owner\" role at the organization level",
    "description": "Google Users assigned to the \"Owner\" role at the organization level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "organization"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "77346dfd-f991-4f51-b345-e4a293cba2c3",
    "name": "Google Cloud Service Accounts with \"Owner\" Role that can be assumed by more than 30 users",
    "description": "Google Cloud Service Accounts with \"Owner\" Role that can be assumed by more than 30 users",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "8a0e0a32-d1fb-417f-b7bf-cbf4fd52c8b8"
            }
          },
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "type": "GoogleWorkspaceUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "722bb919-4274-46d2-852b-878aa8e742c5",
    "name": "GCP Users Assigned Viewer Role",
    "description": "GCP Users Assigned Viewer Role",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "HIGH",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "52a382a6-bf44-4186-b892-3358bf6546e2",
    "name": "Google Users assigned to the \"Viewer\" role at the organization level",
    "description": "Google Users assigned to the \"Viewer\" role at the organization level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "organization"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1b95c0b6-783f-40ae-bb6d-6c5bff53e2f8",
    "name": "Google Users assigned to the \"Viewer\" role at the Project level",
    "description": "Google Users assigned to the \"Viewer\" role at the Project level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "project"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1ebfc883-8dcd-4b75-b2df-1092a3e0e3fc",
    "name": "Google Cloud Service Accounts with \"Viewer\" Role that can be assumed by more than 30 users",
    "description": "Google Cloud Service Accounts with \"Viewer\" Role that can be assumed by more than 30 users",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "IN_FROM_QUERY_SOURCE_RESULTS",
              "property": "id",
              "string_value": "219bde7c-bbd7-41dc-8047-2f62f1bf7a2a"
            }
          },
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "count_condition_expression": {
                  "specs": [
                    {
                      "fn": "GT",
                      "value": 30,
                      "value_as": "COUNT"
                    }
                  ]
                },
                "type": "GoogleWorkspaceUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1a7246cf-0c27-4235-9798-4f0a87976128",
    "name": "Google Users assigned to the \"Editor\" role at the Folder level",
    "description": "Google Users assigned to the \"Editor\" role at the Folder level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "folder"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "b9db6529-bd5b-4f8c-b458-75ebaa47d0ac",
    "name": "Google Users assigned to the \"Owner\" role at the Project level",
    "description": "Google Users assigned to the \"Owner\" role at the Project level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Owner"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "project"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "69c49b87-3ed3-4756-81f2-60c0e29517ce",
    "name": "Google Users assigned to the \"Viewer\" role at the Folder level",
    "description": "Google Users assigned to the \"Viewer\" role at the Folder level",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "id",
                    "string_value": "folder"
                  }
                },
                "type": "GoogleCloudIamRoleBinding"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "daedab33-c4b2-4042-8fbd-4191faadb1b6",
    "name": "Google Users assigned to the \"Viewer\" role directly",
    "description": "Google Users assigned to the \"Viewer\" role directly",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Viewer"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleWorkspaceGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "88aa37df-fd62-4390-8bd2-f884199cceea",
    "name": "Google Groups that grant the Google Cloud \"Editor\" Role",
    "description": "Google Groups that grant the Google Cloud \"Editor\" Role",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleWorkspaceGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "2b36418e-7d36-49b8-87df-08f3d36993ae",
    "name": "Google Cloud Service Accounts with the Google Cloud \"Editor\" Role",
    "description": "Google Cloud Service Accounts with the Google Cloud \"Editor\" Role",
    "labels": [
      "service_account"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "GoogleCloudServiceAccount"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Editor"
                  }
                },
                "type": "GoogleCloudRole"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "GoogleCloudOrganization"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "b012fdd9-7973-4099-8f1b-311d566d7622",
    "name": "Artifactory Users",
    "description": "All Artifactory local user accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "b8c0a67b-97ca-4bac-bc39-65b215e7f343",
    "name": "Artifactory Roles with Users",
    "description": "Artifactory roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "666d5efa-7ea5-443b-b278-27cb27e566ec",
    "name": "Artifactory Users not logged in recently",
    "description": "Number of Artifactory users with last login 90 days in the past",
    "result_type": "number",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    }
  },
  {
    "id": "86ba8048-72f9-411d-a451-7ded987c45ed",
    "name": "Artifactory Repositories",
    "description": "All Artifactory Repositories discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Repository.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "95505b5e-3ff9-40cc-bd6b-5ab268827898",
    "name": "Artifactory Projects",
    "description": "All Artifactory Projects discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Project.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "36fef8bb-77e5-4f76-bb54-2ccb423785a9",
    "name": "Artifactory Repositories with Users",
    "description": "Artifactory Repositories with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Repository.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "6d005788-b4e4-4f59-a380-719800915dbf",
    "name": "Artifactory Projects with Users",
    "description": "Artifactory Projects with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c74e5870-b810-4c24-b1f1-83c7fcadf1d9",
    "name": "Artifactory Repositories with Groups",
    "description": "Artifactory Repositories with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Repository.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "fe1d085c-9248-4325-b99d-47e3489d3504",
    "name": "Artifactory Projects with Groups",
    "description": "Artifactory Projects with Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Project.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.Group"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "3e86166b-6bc4-4d25-9331-4906082ecdad",
    "name": "Artifactory Project Admins",
    "description": "Number of users who have been granted the Project Admin role in Artifactory",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Artifactory.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Project Admin"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9fea9885-3d8c-4704-81a8-fccf408a81ff",
    "name": "Artifactory Predefined Roles",
    "description": "Artifactory Predefined Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Role",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "PREDEFINED"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "8115716c-3a67-40df-8f96-50ed0501c108",
    "name": "Artifactory Global Custom Roles",
    "description": "Artifactory Global Custom Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Role",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "CUSTOM_GLOBAL"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "b47e88f3-c76c-41ab-9793-4db4ff1d3cd3",
    "name": "Artifactory Project Roles",
    "description": "Artifactory Project Roles",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Role",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_type",
              "string_value": "CUSTOM"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "cbee0fbf-9dd5-4283-af9f-b889d6ead738",
    "name": "Artifactory Users Related to Okta Users",
    "description": "Artifactory Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "d76d96d0-6c7a-4389-bc82-7b9d98a47808",
    "name": "Artifactory Users Not Related to Okta Users",
    "description": "Artifactory Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "315e116d-f74c-441d-9f02-b6a4f3e7f30b",
    "name": "Artifactory Users Related to Azure AD Users",
    "description": "Artifactory Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "67d790e2-1b1f-4ee2-b94f-07fe159c620b",
    "name": "Artifactory Users Not Related to Azure AD Users",
    "description": "Artifactory Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7faa54a9-f4aa-4f83-9d28-36aab8b13973",
    "name": "Artifactory Groups",
    "description": "All Artifactory local Groups",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Group"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "0c0407c5-27bf-44ae-8bce-1c1908811972",
    "name": "Artifactory Groups with Users",
    "description": "Artifactory Groups that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Group"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Artifactory.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c92e340a-6a1d-414b-b3e9-157f923ace05",
    "name": "Artifactory Groups with Admin Priviledges",
    "description": "Artifactory Groups with Admin Priviledges",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.Group",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_admin_privileges",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "9eeaa254-9dd0-4d1e-be9a-f90c9af3c625",
    "name": "Artifactory Effective Admin Users",
    "description": "Artifactory Effective Admin Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Artifactory.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "customprop_effective_admin",
              "bool_value": true
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "17b443c5-e27f-42d6-b504-ce3d3521eb09",
    "name": "Microsoft Teams Teams with Microsoft Teams Channels not through Azure AD Users",
    "description": "Total Number of Microsoft Teams Teams that have Microsoft Teams Channels that are directly related to their parent teams and not indirectly related through Azure AD Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "MicrosoftTeamsTeam"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MicrosoftTeamsChannel"
              }
            ],
            "path_avoids_node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "0e684704-9ebb-4ee8-9ed1-559e5b9bc4c8",
    "name": "Azure Tenants with Microsoft Teams Teams",
    "description": "Total Number of Azure Tenants that have Microsoft Teams Teams",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureTenant"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "MicrosoftTeamsTeam"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "66ab982c-ce01-40f8-8e37-a0338c444757",
    "name": "Microsoft Teams Teams with Users who are Members or Guests",
    "description": "Total Number of Microsoft Teams Teams that have Users who are Members or Guests",
    "value_query": {
      "from_node_types": [
        {
          "type": "MicrosoftTeamsTeam"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "User",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "user_type",
                          "string_value": "Member"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "user_type",
                          "string_value": "Guest"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "a1df780f-ce68-48f5-b352-4ece5d28ed46",
    "name": "Microsoft Teams Teams with Users who are guests",
    "description": "Total Number of Microsoft Teams Teams that have users who are guests",
    "value_query": {
      "from_node_types": [
        {
          "type": "MicrosoftTeamsTeam"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "User",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "user_type",
                    "string_value": "Guest"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "9e33bc49-7082-4f37-8724-46b4ce71f52e",
    "name": "Microsoft Teams Channels with Users who are Members or Guests",
    "description": "Total Number of Microsoft Teams Channels that have users who are members or guests",
    "value_query": {
      "from_node_types": [
        {
          "type": "MicrosoftTeamsChannel"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "User",
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "user_type",
                          "string_value": "Member"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "user_type",
                          "string_value": "Guest"
                        }
                      }
                    ],
                    "or": true
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "7b9b7d64-1865-4c1e-811c-cac7f4d8346c",
    "name": "Microsoft Teams Channels with Users who are Guests",
    "description": "Total Number of Microsoft Teams Channels that have Users who are Guests",
    "value_query": {
      "from_node_types": [
        {
          "type": "MicrosoftTeamsChannel"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "User",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "user_type",
                    "string_value": "Guest"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "6f4843c3-d2cc-4695-b8ad-19bc665158bf",
    "name": "Okta Groups assigned to external (non-workday and contractor) users",
    "description": "Okta Groups assigned to external (non-workday and contractor) users",
    "labels": [],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "not": true,
                          "property": "login",
                          "string_value": "workday"
                        }
                      },
                      {
                        "leaf_condition": {
                          "fn": "CONTAINS",
                          "property": "title",
                          "string_value": "contractor"
                        }
                      }
                    ],
                    "or": true
                  }
                },
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9d5fac63-3796-4dda-bd52-05283cea5f98",
    "name": "IDP Identities with passwords set 90 days ago",
    "description": "IDP Identities with passwords set 90 days ago",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "included_types": [
            "ActiveDirectoryUser",
            "AzureADUser",
            "GoogleWorkspaceUser",
            "PingOneUser",
            "OktaUser"
          ],
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "password_last_set",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "b85fc022-23d2-4fa6-91cb-d124e8bc06fd",
    "name": "IDP Groups that have users who last logged in more than 90 days ago",
    "description": "IDP Groups that have users who last logged in more than 90 days ago",
    "labels": [
      "deactivated_user_access",
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "description": "IDP Identities with no password",
    "id": "713e0235-752a-46ee-9f0e-3177926256bd",
    "name": "IDP Identities with no password",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "included_types": [
            "ActiveDirectoryUser",
            "AzureADUser",
            "GoogleWorkspaceUser",
            "PingOneUser",
            "OktaUser"
          ],
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "password_exists"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "name": "IDP Groups that have suspended users",
    "description": "IDP Groups that have suspended users",
    "id": "ec5c4ee2-4246-4372-99c3-4fa2faf3f97a",
    "labels": [
      "deactivated_user_access",
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "suspended"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "5d3c08dc-e80b-44a2-83f9-ab3ff29fd3e1",
    "name": "IDP Identities that are deactivated",
    "description": "IDP Identities that are deactivated",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "included_types": [
            "ActiveDirectoryUser",
            "AzureADUser",
            "GoogleWorkspaceUser",
            "PingOneUser",
            "OktaUser"
          ],
          "root_condition": {
            "leaf_condition": {
              "bool_value": false,
              "fn": "EQ",
              "property": "is_active"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "95ad88e0-1f56-4f51-aa44-e5037de63d3b",
    "name": "IDP Identities that are suspended",
    "description": "IDP Identities that are suspended",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "included_types": [
            "ActiveDirectoryUser",
            "AzureADUser",
            "GoogleWorkspaceUser",
            "PingOneUser",
            "OktaUser"
          ],
          "root_condition": {
            "leaf_condition": {
              "bool_value": true,
              "fn": "EQ",
              "property": "suspended"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "0dc94c38-82d3-4331-b92e-6889fabf8a7c",
    "name": "Ping One Groups",
    "description": "Ping One Groups",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "PingOneGroup"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "dbc06878-eadd-4ab6-9f0c-bf25aa7f1150",
    "name": "Okta Groups created more than 180 days ago",
    "description": "Okta Groups created more than 180 days ago",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_180_DAY_AGO"
            }
          },
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "992e2549-64c3-449b-868a-0c91cf79e6cd",
    "name": "IDP Groups that have users with no passwords",
    "description": "IDP Groups that have users with no passwords",
    "labels": [
      "deactivated_user_access",
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "IdPGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "bool_value": false,
                    "fn": "EQ",
                    "property": "password_exists"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "28ed6731-6cee-4309-a833-6f2d64bddc6a",
    "name": "Okta Groups with users that last logged in 90 days ago",
    "description": "Okta Groups with users that last logged in 90 days ago",
    "labels": [
      "deactivated_user_access",
      "inventory"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaGroup"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "customprop_last_login",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                "type": "IdPUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "e894164f-e171-4008-b90e-7f52bfc3f81b",
    "name": "IDP Identities that last logged in 90 days ago",
    "description": "IDP Identities that last logged in 90 days ago",
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "included_types": [
            "ActiveDirectoryUser",
            "AzureADUser",
            "GoogleWorkspaceUser",
            "PingOneUser",
            "OktaUser"
          ],
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          },
          "type": "Identity"
        }
      ],
      "relates_to_exp": {}
    }
  },
  {
    "id": "7ea568ff-0f9c-48d5-bb67-9bedb7c1372c",
    "name": "Qualys Users",
    "description": "All Qualys local User accounts",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "72d7e43a-fa55-4cc4-911a-4b43e49ff618",
    "name": "Qualys Active Users",
    "description": "Active Accounts in Qualys",
    "result_type": "number",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": true
            }
          }
        }
      ]
    }
  },
  {
    "id": "51a99820-57b1-4aa3-a2b8-bb0b3a6f5bb8",
    "name": "Qualys Deactivated Users",
    "description": "Accounts in Qualys that have been deactivated",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "EQ",
              "property": "is_active",
              "bool_value": false
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "fbf61bf6-f4ff-4cee-8f39-ed275cfece6f",
    "name": "Qualys Managers",
    "description": "Number of users who have been granted the Manager role in Qualys",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Qualys.Application"
              }
            ],
            "path_required_node_types": [
              {
                "type": "OAA.Qualys.RoleAssignment",
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Manager"
                  }
                }
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "5880639c-1314-4743-aac4-a0fe689b6e26",
    "name": "Qualys Users created in the last 24 hours",
    "description": "Qualys Users created in the last 24 hours",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "GT",
              "property": "created_at",
              "string_value": "$COOKIE_TIMEVAR_1_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "7e780d8f-a792-4985-b295-bd703e89b7b5",
    "name": "Qualys Roles with Users",
    "description": "Qualys roles that have users assigned",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.RoleAssignment"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Qualys.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "c111d794-5559-4e5b-b0a5-0d52c72a32af",
    "name": "Qualys Users not logged in recently",
    "description": "Number of Qualys users with last login 90 days in the past",
    "labels": [
      "inventory"
    ],
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User",
          "root_condition": {
            "leaf_condition": {
              "fn": "LT",
              "property": "last_login_at",
              "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
            }
          }
        }
      ]
    },
    "result_type": "number"
  },
  {
    "id": "999d9719-a51f-46e9-af59-9fc0c794e036",
    "name": "Qualys AssetGroups",
    "description": "All Qualys AssetGroups discovered",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.AssetGroup.Resource"
        }
      ]
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "92358a17-e61d-4deb-acba-bc0c3074b999",
    "name": "Qualys AssetGroups with Users",
    "description": "Qualys AssetGroups with Users",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.AssetGroup.Resource"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Qualys.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "inventory"
    ]
  },
  {
    "id": "96e18480-f7c1-4554-a7d5-0879c9194d4a",
    "name": "Qualys Users Related to Okta Users",
    "description": "Qualys Local Users with an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "4356075e-fe54-4b6e-aa24-71e7b62d402d",
    "name": "Qualys Users Not Related to Okta Users",
    "description": "Qualys Local Users who do not have an Okta identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OktaUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "ff8986ad-8e87-4550-a7e1-2ab81525ea88",
    "name": "Qualys Users Related to Azure AD Users",
    "description": "Qualys Local Users with an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "193db3da-74dd-4e19-83ab-d0e8f742d0e5",
    "name": "Qualys Users Not Related to Azure AD Users",
    "description": "Qualys Local Users who do not have an Azure AD identity",
    "value_query": {
      "from_node_types": [
        {
          "type": "OAA.Qualys.User"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "AzureADUser"
              }
            ],
            "has_relation": false
          }
        ]
      }
    },
    "result_type": "number"
  },
  {
    "id": "56306d5e-2dba-4f92-96e2-54fba034d602",
    "name": "Deactivated Okta Users with Qualys Access",
    "description": "Okta Users who are deactivated that have an active Qualys User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "OktaUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Qualys.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "832d7f3b-9e63-482b-9c89-4cbd07e7f710",
    "name": "Deactivated Azure AD Users with Qualys Access",
    "description": "Azure AD Users who are deactivated that have an active Qualys User account",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser",
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "is_active",
                    "bool_value": false
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "created_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "IN",
                    "property": "azure_tenant_id",
                    "string_value": "$COOKIE_AZURE_TENANT_LIST"
                  }
                }
              ]
            }
          }
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "node_types": [
              {
                "type": "OAA.Qualys.User"
              }
            ],
            "has_relation": true
          }
        ]
      }
    },
    "result_type": "number",
    "labels": [
      "deactivated_user_access"
    ]
  },
  {
    "id": "03b0abd3-bb0c-4767-84a5-cf27f70afa3f",
    "name": "Azure AD Users with Modify Workday access via Workday Security Groups whose name contain \"admin\"",
    "description": "Azure AD Users with Modify Workday access via Workday Security Groups whose name contain \"admin\"",
    "labels": [
      "privileged_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "from_node_types": [
        {
          "type": "AzureADUser"
        }
      ],
      "node_relationship_type": 1,
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "WorkdayPolicyBinding"
              }
            ],
            "path_required_node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "CONTAINS",
                    "property": "name",
                    "string_value": "admin"
                  }
                },
                "type": "WorkdaySecurityGroup"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "dc7b4ac1-c1c1-4ab4-9d52-895e8ca2703a",
    "name": "Okta Super Admins that have not logged in within 30 days",
    "description": "Okta Super Admins that have not logged in within 30 days (semi-dormant)",
    "labels": [
      "best_practice",
      "privileged_access",
      "overprovisioned_access"
    ],
    "result_type": "number",
    "risk_explanation": "Users that have login access, especially privileged admin users, but have not logged in for over 30 days may not necessarily be risky, but may not need the access or permissions anymore. Review user access, permissions regularly based on least privilege principles. ",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_30_DAY_AGO"
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Super Administrator"
                  }
                },
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "a70e2deb-cd83-4495-a190-4e566733df50",
    "name": "Human Okta Admins that are active and not logged in within 90 days related to Okta Roles.",
    "description": "Okta Admins with access to one or more Roles who have not logged in within 90 days",
    "labels": [
      "privileged_access",
      "infrequent_access"
    ],
    "result_type": "number",
    "risk_explanation": "Users that have login access, especially privileged admin users, but have not logged in for over 90 days may not necessarily be risky, but may not need the access or permissions anymore. Review user access, permissions regularly based on least privilege principles. ",
    "risk_level": "MEDIUM",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "parent_condition": {
                    "conditions": [
                      {
                        "leaf_condition": {
                          "fn": "EQ",
                          "property": "identity_type",
                          "string_value": "HUMAN"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "6d7fda02-15ae-4cb4-9a6a-f4276437817e",
    "name": "Human Okta users that are active and haven't logged in within the last 90 days that have an Okta Super Administrator role",
    "description": "Okta Super Admins that haven't logged in within 90 Days",
    "labels": [
      "best_practice",
      "privileged_access",
      "infrequent_access"
    ],
    "result_type": "number",
    "risk_explanation": "Users, especially privileged admin users, that have login access but have not logged in for long periods of time may be potential breach risks. Review user access, permissions regularly based on least privilege principles. ",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "parent_condition": {
              "conditions": [
                {
                  "leaf_condition": {
                    "bool_value": true,
                    "fn": "EQ",
                    "property": "is_active"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "LT",
                    "property": "last_login_at",
                    "string_value": "$COOKIE_TIMEVAR_90_DAY_AGO"
                  }
                },
                {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "identity_type",
                    "string_value": "HUMAN"
                  }
                }
              ]
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "root_condition": {
                  "leaf_condition": {
                    "fn": "EQ",
                    "property": "name",
                    "string_value": "Super Administrator"
                  }
                },
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "9cc81308-d0c0-433b-8df4-f421a92f7f07",
    "name": "Okta apps that have not been accessed by 75% or more of the users assigned to them",
    "description": "Okta apps that have not been accessed by 75% or more of the users assigned to them",
    "labels": [
      "best_practice",
      "overprovisioned_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "op": 4,
          "value": 75
        }
      },
      "from_node_types": [
        {
          "type": "OktaApp"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "09c69860-728e-4a9b-b833-588ef0f737e6",
    "name": "Okta Apps that have not been accessed by any Okta Users",
    "description": "Okta Apps that have not been accessed by any Okta Users",
    "labels": [
      "best_practice",
      "no_assigned_users",
      "overprovisioned_access"
    ],
    "result_type": "number",
    "risk_level": "NONE",
    "value_query": {
      "access_filter": {
        "over_provisioned_score": {
          "value": 100
        }
      },
      "from_node_types": [
        {
          "type": "OktaApp"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaUser"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "id": "1a98ec2b-1906-4fd3-95ac-e49378400e35",
    "name": "Okta Users who have never logged related to Okta Roles",
    "description": "Okta Admins (users with access to roles) that have never logged in",
    "labels": [
      "infrequent_access",
      "privileged_access"
    ],
    "result_type": "number",
    "risk_explanation": "Users, especially privileged admin users, that have login access but have never logged in may be potential breach risks. Review user access, permissions regularly based on least privilege principles. ",
    "risk_level": "CRITICAL",
    "value_query": {
      "from_node_types": [
        {
          "root_condition": {
            "leaf_condition": {
              "fn": "EXISTS",
              "not": true,
              "property": "last_login_at"
            }
          },
          "type": "OktaUser"
        }
      ],
      "relates_to_exp": {
        "specs": [
          {
            "has_relation": true,
            "node_types": [
              {
                "type": "OktaRole"
              }
            ]
          }
        ]
      }
    }
  }
]